






Started logging.

<<<
Content-Length: 3207

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10760,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\mirko\\AppData\\Local\\Temp\\.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh\\sketch_nov24a","rootUri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","name":"sketch_nov24a"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 385

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","languageId":"cpp","version":1,"text":"void setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n"}}}Content-Length: 319

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 403

{"id":2,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":3,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":8,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/30","percentage":6.666666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/30","percentage":10,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/30","percentage":10,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/30","percentage":13.333333333333334,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/30","percentage":13.333333333333334,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/30","percentage":16.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/30","percentage":16.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/30","percentage":20,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/30","percentage":20,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/30","percentage":23.333333333333332,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/30","percentage":23.333333333333332,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/30","percentage":26.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/30","percentage":26.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/30","percentage":30,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/30","percentage":30,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/30","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/30","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/30","percentage":36.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/30","percentage":36.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/30","percentage":40,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/30","percentage":40,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/30","percentage":43.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/30","percentage":43.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/30","percentage":46.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/30","percentage":46.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/30","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/30","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/30","percentage":53.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/30","percentage":53.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/30","percentage":56.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/30","percentage":56.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/30","percentage":60,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/30","percentage":60,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/30","percentage":63.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/30","percentage":63.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/30","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/30","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/30","percentage":70,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/30","percentage":70,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/30","percentage":73.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/30","percentage":73.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/30","percentage":76.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/30","percentage":76.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/30","percentage":80,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/30","percentage":80,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/30","percentage":83.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/30","percentage":83.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/30","percentage":86.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/30","percentage":86.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/30","percentage":90,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/30","percentage":93.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/30","percentage":96.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 247

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":0,"character":1}}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 247

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 38

{"id":4,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 259

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 319

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":6,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":2},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 220

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 403

{"id":7,"result":[{"name":"setup","kind":12,"range":{"start":{"line":1,"character":0},"end":{"line":4,"character":1}},"selectionRange":{"start":{"line":1,"character":5},"end":{"line":1,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":6,"character":0},"end":{"line":9,"character":1}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":3},"contentChanges":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 220

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 404

{"id":8,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 319

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":3}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":3,"character":0}}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 39

{"id":10,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 320

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":2},"end":{"line":5,"character":1}},"context":{"diagnostics":[]}}}Content-Length: 320

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":2},"end":{"line":4,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}Content-Length: 321

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":43}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":4},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":43}},"rangeLength":41,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":13}}Content-Length: 221

{"jsonrpc":"2.0","id":14,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 249

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":48}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}Content-Length: 221

{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":4}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}Content-Length: 221

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}Content-Length: 221

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}Content-Length: 221

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}Content-Length: 221

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri
>>>
Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":12,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":13,"result":[],"jsonrpc":"2.0"}Content-Length: 405

{"id":14,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 39

{"id":15,"result":null,"jsonrpc":"2.0"}Content-Length: 405

{"id":16,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":17,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":18,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":19,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}Content-Length: 221

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}Content-Length: 221

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 221

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":23}}Content-Length: 221

{"jsonrpc":"2.0","id":24,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}Content-Length: 221

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 221

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":26}}Content-Length: 221

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}Content-Length: 221

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":28}}Content-Length: 221

{"jsonrpc":"2.0","id":29,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":29}}Content-Length: 221

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":30}}Content-Length: 221

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 221

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

>>>
Content-Length: 405

{"id":20,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":21,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":22,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":23,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":24,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":25,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":26,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":27,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":28,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":29,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":30,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":31,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":32,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":32}}Content-Length: 221

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":33}}Content-Length: 221

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 221

{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":35}}Content-Length: 221

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}Content-Length: 221

{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":37}}Content-Length: 221

{"jsonrpc":"2.0","id":38,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":38}}Content-Length: 221

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":39}}Content-Length: 221

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 321

{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":48}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 221

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 321

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":48}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":41}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":5},"contentChanges":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":48}},"rangeLength":46,"text":""}]}}Content-Length: 6
>>>
Content-Length: 405

{"id":33,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":34,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":35,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":36,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":37,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":38,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":39,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":40,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":41,"result":[],"jsonrpc":"2.0"}Content-Length: 405

{"id":42,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":43,"result":[],"jsonrpc":"2.0"}
<<<
3

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":43}}Content-Length: 221

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":5}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":44}}Content-Length: 221

{"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":6},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"#"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":45}}Content-Length: 221

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 320

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":1}},"context":{"diagnostics":[]}}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":7},"contentChanges":[{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":1}},"rangeLength":0,"text":"d"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":46}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":47}}Content-Length: 221

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 281

{"jsonrpc":"2.0","id":49,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":0,"character":2},"context":{"triggerKind":1}}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":8},"contentChanges":[{"range":{"start":{"line":0,"character":2},"end":{"line":0,"character":2}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":48}}Content-Length: 221

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":9},"contentChanges":[{"range":{"start":{"line":0,"character
>>>
Content-Length: 405

{"id":44,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":45,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":46,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":47,"result":[],"jsonrpc":"2.0"}Content-Length: 405

{"id":48,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 609

{"id":49,"result":{"isIncomplete":false,"items":[{"label":" define macro(args)","kind":15,"sortText":"3f000000define","filterText":"define","insertText":"define ${1:macro}(${0:args})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":2}},"newText":"define ${1:macro}(${0:args})"}},{"label":" define macro","kind":15,"sortText":"3f000000define","filterText":"define","insertText":"define ${0:macro}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":2}},"newText":"define ${0:macro}"}}]},"jsonrpc":"2.0"}Content-Length: 405

{"id":50,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
":3},"end":{"line":0,"character":3}},"rangeLength":0,"text":"f"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":50}}Content-Length: 221

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":10},"contentChanges":[{"range":{"start":{"line":0,"character":4},"end":{"line":0,"character":4}},"rangeLength":0,"text":"i"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}Content-Length: 221

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":11},"contentChanges":[{"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":5}},"rangeLength":0,"text":"n"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":52}}Content-Length: 221

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":12},"contentChanges":[{"range":{"start":{"line":0,"character":6},"end":{"line":0,"character":6}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":53}}Content-Length: 221

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":13},"contentChanges":[{"range":{"start":{"line":0,"character":7},"end":{"line":0,"character":7}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":54}}Content-Length: 221

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":13}}}Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":14},"contentChanges":[{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":8}},"rangeLength":0,"text":"L"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":55}}Content-Length: 221

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.ar
>>>
Content-Length: 405

{"id":51,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":52,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":53,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":54,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":55,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
duinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":15},"contentChanges":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":9}},"rangeLength":0,"text":"E"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":56}}Content-Length: 221

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":16},"contentChanges":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":10}},"rangeLength":0,"text":"D"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":57}}Content-Length: 221

{"jsonrpc":"2.0","id":58,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":56,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":57,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":58,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":59,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":11},"end":{"line":0,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":59,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":17},"contentChanges":[{"range":{"start":{"line":0,"character":11},"end":{"line":0,"character":11}},"rangeLength":0,"text":"B"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":59}}Content-Length: 221

{"jsonrpc":"2.0","id":60,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":60,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":61,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":0,"character":12},"context":{"triggerKind":1}}}
>>>
Content-Length: 68

{"id":61,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":62,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":17}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":18},"contentChanges":[{"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":12}},"rangeLength":0,"text":"L"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":63,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":63,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":64,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":0,"character":13},"context":{"triggerKind":1}}}
>>>
Content-Length: 68

{"id":64,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":13},"end":{"line":0,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":65,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":19},"contentChanges":[{"range":{"start":{"line":0,"character":13},"end":{"line":0,"character":13}},"rangeLength":0,"text":"Y"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":66,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":20},"contentChanges":[{"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"rangeLength":0,"text":"U"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":66}}Content-Length: 221

{"jsonrpc":"2.0","id":67,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 282

{"jsonrpc":"2.0","id":68,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":0,"character":15},"context":{"triggerKind":1}}}
>>>
Content-Length: 405

{"id":67,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 68

{"id":68,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":69,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":15},"end":{"line":0,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":69,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":21},"contentChanges":[{"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 221

{"jsonrpc":"2.0","id":70,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":70,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":22},"contentChanges":[{"range":{"start":{"line":0,"character":13},"end":{"line":0,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 221

{"jsonrpc":"2.0","id":71,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":71,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":13},"end":{"line":0,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":72,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":23},"contentChanges":[{"range":{"start":{"line":0,"character":13},"end":{"line":0,"character":13}},"rangeLength":0,"text":"U"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":73,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":24},"contentChanges":[{"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"rangeLength":0,"text":"Y"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":73}}Content-Length: 221

{"jsonrpc":"2.0","id":74,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":73,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":74,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":75,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":0,"character":15},"context":{"triggerKind":1}}}
>>>
Content-Length: 68

{"id":75,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":15},"end":{"line":0,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":76,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":25},"contentChanges":[{"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 221

{"jsonrpc":"2.0","id":77,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":77,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":26},"contentChanges":[{"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"rangeLength":0,"text":"E"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":78,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":78,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":79,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":0,"character":15},"context":{"triggerKind":1}}}
>>>
Content-Length: 68

{"id":79,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":15},"end":{"line":0,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":80,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":26}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":27},"contentChanges":[{"range":{"start":{"line":0,"character":15},"end":{"line":0,"character":15}},"rangeLength":0,"text":" "}]}}Content-Length: 221

{"jsonrpc":"2.0","id":81,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":81,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":27}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":28},"contentChanges":[{"range":{"start":{"line":0,"character":16},"end":{"line":0,"character":16}},"rangeLength":0,"text":"2"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":82,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":82,"result":[{"name":"setup","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":5,"character":1}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":83,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":28}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":29},"contentChanges":[{"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"rangeLength":0,"text":"\n"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":84,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":30},"contentChanges":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":85,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 589

{"id":85,"result":[{"name":"loop","kind":12,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":11}},"selectionRange":{"start":{"line":2,"character":5},"end":{"line":2,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":30}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":31},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"rangeLength":0,"text":"#"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":86,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":32},"contentChanges":[{"range":{"start":{"line":2,"character":1},"end":{"line":2,"character":1}},"rangeLength":0,"text":"d"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":87,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":87,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":88,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":2,"character":2},"context":{"triggerKind":1}}}
>>>
Content-Length: 609

{"id":88,"result":{"isIncomplete":false,"items":[{"label":" define macro(args)","kind":15,"sortText":"3f000000define","filterText":"define","insertText":"define ${1:macro}(${0:args})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":2,"character":1},"end":{"line":2,"character":2}},"newText":"define ${1:macro}(${0:args})"}},{"label":" define macro","kind":15,"sortText":"3f000000define","filterText":"define","insertText":"define ${0:macro}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":2,"character":1},"end":{"line":2,"character":2}},"newText":"define ${0:macro}"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":33},"contentChanges":[{"range":{"start":{"line":2,"character":2},"end":{"line":2,"character":2}},"rangeLength":0,"text":"e"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":89,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":89,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":34},"contentChanges":[{"range":{"start":{"line":2,"character":3},"end":{"line":2,"character":3}},"rangeLength":0,"text":"f"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":90,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":90,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":35},"contentChanges":[{"range":{"start":{"line":2,"character":4},"end":{"line":2,"character":4}},"rangeLength":0,"text":"i"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":91,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":91,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":36},"contentChanges":[{"range":{"start":{"line":2,"character":5},"end":{"line":2,"character":5}},"rangeLength":0,"text":"n"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":92,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":92,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":37},"contentChanges":[{"range":{"start":{"line":2,"character":6},"end":{"line":2,"character":6}},"rangeLength":0,"text":"e"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":93,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 405

{"id":93,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":38},"contentChanges":[{"range":{"start":{"line":2,"character":7},"end":{"line":2,"character":7}},"rangeLength":0,"text":" "}]}}Content-Length: 221

{"jsonrpc":"2.0","id":94,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 771

{"id":94,"result":[{"name":"loop","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":4}},"selectionRange":{"start":{"line":4,"character":0},"end":{"line":4,"character":4}}},{"name":"setup","kind":12,"range":{"start":{"line":4,"character":5},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}},"selectionRange":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":5},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":38}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":39},"contentChanges":[{"range":{"start":{"line":2,"character":8},"end":{"line":2,"character":8}},"rangeLength":0,"text":"B"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":95,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 1025

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":4}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":10}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":4}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"},{"range":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}},"severity":1,"code":"missing_type_specifier","source":"clang","message":"C++ requires a type specifier for all declarations"}]},"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":4,"jsonrpc":"2.0"}Content-Length: 405

{"id":95,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":96,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":2,"character":9},"context":{"triggerKind":1}}}Content-Length: 320

{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":40},"contentChanges":[{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":9}},"rangeLength":0,"text":"U"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":95}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":97}}Content-Length: 221

{"jsonrpc":"2.0","id":98,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":41},"contentChanges":[{"range":{"start":{"line":2,"character":10},"end":{"line":2,"character":10}},"rangeLength":0,"text":"Y"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":98}}Content-Length: 221

{"jsonrpc":"2.0","id":99,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":42},"contentChanges":[{"range":{"start":{"line":2,"character":11},"end":{"line":2,"character":11}},"rangeLength":0,"text":"T"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":99}}Content-Length: 222

{"jsonrpc":"2.0","id":100,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":43},"contentChanges":[{"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":12}},"rangeLength":0,"text":"T"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":100}}Content-Length: 222

{"jsonrpc":"2.0","id":101,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":44},"contentChanges":[{"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":101}}Content-Length: 222

{"jsonrpc":"2.0","id":102,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"f
>>>
Content-Length: 68

{"id":96,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 37

{"id":97,"result":[],"jsonrpc":"2.0"}Content-Length: 405

{"id":98,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 405

{"id":99,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":100,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 406

{"id":101,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
ile:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":45},"contentChanges":[{"range":{"start":{"line":2,"character":11},"end":{"line":2,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":102}}Content-Length: 222

{"jsonrpc":"2.0","id":103,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":46},"contentChanges":[{"range":{"start":{"line":2,"character":10},"end":{"line":2,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":103}}Content-Length: 222

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":47},"contentChanges":[{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":104}}Content-Length: 222

{"jsonrpc":"2.0","id":105,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 321

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":47}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":48},"contentChanges":[{"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":9}},"rangeLength":0,"text":"U"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":105}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":106}}Content-Length: 222

{"jsonrpc":"2.0","id":107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":49},"contentChanges":[{"range":{"start":{"line":2,"character":10},"end":{"line":2,"character":10}},"rangeLength":0,"text":"Y"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":107}}Content-Length: 222

{"jsonrpc":"2.0","id":108,"method"
>>>
Content-Length: 406

{"id":102,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":103,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":104,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":105,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":106,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":107,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
:"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":11},"end":{"line":2,"character":11}},"context":{"diagnostics":[]}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":50},"contentChanges":[{"range":{"start":{"line":2,"character":10},"end":{"line":2,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":108}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":109}}Content-Length: 222

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":51},"contentChanges":[{"range":{"start":{"line":2,"character":10},"end":{"line":2,"character":10}},"rangeLength":0,"text":"T"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":110}}Content-Length: 222

{"jsonrpc":"2.0","id":111,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":52},"contentChanges":[{"range":{"start":{"line":2,"character":11},"end":{"line":2,"character":11}},"rangeLength":0,"text":"T"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":111}}Content-Length: 222

{"jsonrpc":"2.0","id":112,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":113,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":12}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":53},"contentChanges":[{"range":{"start":{"line":2,"character":12},"end":{"line":2,"character":12}},"rangeLength":0,"text":"O"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":112}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":113}}Content-Length: 222

{"jsonrpc":"2.0","id":114,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{
>>>
Content-Length: 406

{"id":108,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":109,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":110,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":111,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":112,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":113,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":114,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
"start":{"line":2,"character":13},"end":{"line":2,"character":13}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":54},"contentChanges":[{"range":{"start":{"line":2,"character":13},"end":{"line":2,"character":13}},"rangeLength":0,"text":"N"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":114}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":115}}Content-Length: 222

{"jsonrpc":"2.0","id":116,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":14},"end":{"line":2,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":54}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":55},"contentChanges":[{"range":{"start":{"line":2,"character":14},"end":{"line":2,"character":14}},"rangeLength":0,"text":"1"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":116}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":117}}Content-Length: 222

{"jsonrpc":"2.0","id":118,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":15},"end":{"line":2,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":56},"contentChanges":[{"range":{"start":{"line":2,"character":14},"end":{"line":2,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":118}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":119}}Content-Length: 222

{"jsonrpc":"2.0","id":120,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":14},"end":{"line":2,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":57},"contentChanges":[{"range":{"start":{"line":2,"character":14},"end":{"line":2,"character":14}},"rangeLength":0,"text":"_"}
>>>
Content-Length: 38

{"id":115,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":116,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":117,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":118,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":119,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":120,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":121,"result":[],"jsonrpc":"2.0"}
<<<
]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":120}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":121}}Content-Length: 222

{"jsonrpc":"2.0","id":122,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":58},"contentChanges":[{"range":{"start":{"line":2,"character":15},"end":{"line":2,"character":15}},"rangeLength":0,"text":"!"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":122}}Content-Length: 222

{"jsonrpc":"2.0","id":123,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":16},"end":{"line":2,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":59},"contentChanges":[{"range":{"start":{"line":2,"character":16},"end":{"line":2,"character":16}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":123}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":124}}Content-Length: 222

{"jsonrpc":"2.0","id":125,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":60},"contentChanges":[{"range":{"start":{"line":2,"character":16},"end":{"line":2,"character":17}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":125}}Content-Length: 222

{"jsonrpc":"2.0","id":126,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":61},"contentChanges":[{"range":{"start":{"line":2,"character":15},"end":{"line":2,"character":16}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":126}}Content-Length: 222

{"jsonrpc":"2.0","id":127,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":62},"contentChanges":[{"range":{"start":{"line":2,"character":15},"end":{"line":2,"character":15}},"rangeLength":0,"text":"1"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1
>>>
Content-Length: 406

{"id":122,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":123,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":124,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":125,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":126,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":127,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
27}}Content-Length: 222

{"jsonrpc":"2.0","id":128,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":129,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":16},"end":{"line":2,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":63},"contentChanges":[{"range":{"start":{"line":2,"character":16},"end":{"line":2,"character":16}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":128}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":129}}Content-Length: 222

{"jsonrpc":"2.0","id":130,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":63}}}
>>>
Content-Length: 406

{"id":128,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":129,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":130,"result":[{"name":"setup","kind":12,"range":{"start":{"line":4,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":64},"contentChanges":[{"range":{"start":{"line":0,"character":17},"end":{"line":1,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":131,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":131,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":132,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":132,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":64}}}Content-Length: 250

{"jsonrpc":"2.0","id":133,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":1,"character":15}}}
>>>
Content-Length: 214

{"id":133,"result":{"contents":{"kind":"markdown","value":"### macro `BUTTON_1`  \n\n---\n```cpp\n#define BUTTON_1\n```"},"range":{"start":{"line":1,"character":8},"end":{"line":1,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 250

{"jsonrpc":"2.0","id":134,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":1,"character":17}}}
>>>
Content-Length: 40

{"id":134,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 250

{"jsonrpc":"2.0","id":135,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":1,"character":16}}}
>>>
Content-Length: 214

{"id":135,"result":{"contents":{"kind":"markdown","value":"### macro `BUTTON_1`  \n\n---\n```cpp\n#define BUTTON_1\n```"},"range":{"start":{"line":1,"character":8},"end":{"line":1,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":65},"contentChanges":[{"range":{"start":{"line":1,"character":17},"end":{"line":1,"character":17}},"rangeLength":0,"text":"1"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":136,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":136,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":66},"contentChanges":[{"range":{"start":{"line":1,"character":18},"end":{"line":1,"character":18}},"rangeLength":0,"text":"2"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":137,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":137,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":138,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":1,"character":19},"end":{"line":1,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":138,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":66}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":67},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"rangeLength":0,"text":"S"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":139,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'S'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":139,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":140,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 37674

{"id":140,"result":{"isIncomplete":true,"items":[{"label":" setup()","kind":3,"detail":"void","sortText":"3ee19999setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"setup()"}},{"label":" size_t","kind":8,"sortText":"3ee36899size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"size_t"}},{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"3f000000sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"3f000000sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"struct"}},{"label":" switch (condition) {cases}","kind":15,"sortText":"3f000000switch","filterText":"switch","insertText":"switch (${1:condition}) {\n${0:cases}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"switch (${1:condition}) {\n${0:cases}\n}"}},{"label":" arduino::String","kind":7,"documentation":{"kind":"markdown","value":"The string class"},"sortText":"407f711aString","filterText":"String","insertText":"arduino::String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"arduino::String"}},{"label":" arduino::StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"An inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"409e01f7StringSumHelper","filterText":"StringSumHelper","insertText":"arduino::StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"arduino::StringSumHelper"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","sortText":"40a6e43bstrlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strlen(${1:const char *})"}},{"label":" scanf(const char *, ...)","kind":3,"detail":"int","sortText":"40a7b70bscanf","filterText":"scanf","insertText":"scanf(${1:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"scanf(${1:const char *, ...})"}},{"label":" shiftIn(PinName dataPin, PinName clockPin, BitOrder bitOrder)","kind":3,"detail":"uint8_t","sortText":"40a7b70bshiftIn","filterText":"shiftIn","insertText":"shiftIn(${1:PinName dataPin}, ${2:PinName clockPin}, ${3:BitOrder bitOrder})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"shiftIn(${1:PinName dataPin}, ${2:PinName clockPin}, ${3:BitOrder bitOrder})"}},{"label":" shiftOut(PinName dataPin, PinName clockPin, BitOrder bitOrder, uint8_t val)","kind":3,"detail":"void","sortText":"40a7b70bshiftOut","filterText":"shiftOut","insertText":"shiftOut(${1:PinName dataPin}, ${2:PinName clockPin}, ${3:BitOrder bitOrder}, ${4:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"shiftOut(${1:PinName dataPin}, ${2:PinName clockPin}, ${3:BitOrder bitOrder}, ${4:uint8_t val})"}},{"label":" sinh(double)","kind":3,"detail":"double","sortText":"40a7b70bsinh","filterText":"sinh","insertText":"sinh(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sinh(${1:double})"}},{"label":" sinhf(float)","kind":3,"detail":"float","sortText":"40a7b70bsinhf","filterText":"sinhf","insertText":"sinhf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sinhf(${1:float})"}},{"label":" siscanf(const char *, const char *, ...)","kind":3,"detail":"int","sortText":"40a7b70bsiscanf","filterText":"siscanf","insertText":"siscanf(${1:const char *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"siscanf(${1:const char *}, ${2:const char *, ...})"}},{"label":" sprintf(char *, const char *, ...)","kind":3,"detail":"int","sortText":"40a7b70bsprintf","filterText":"sprintf","insertText":"sprintf(${1:char *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sprintf(${1:char *}, ${2:const char *, ...})"}},{"label":" srand(unsigned int __seed)","kind":3,"detail":"void","sortText":"40a7b70bsrand","filterText":"srand","insertText":"srand(${1:unsigned int __seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"srand(${1:unsigned int __seed})"}},{"label":" srand48(long)","kind":3,"detail":"void","sortText":"40a7b70bsrand48","filterText":"srand48","insertText":"srand48(${1:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"srand48(${1:long})"}},{"label":" stpcpy(char *, const char *)","kind":3,"detail":"char *","sortText":"40a7b70bstpcpy","filterText":"stpcpy","insertText":"stpcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"stpcpy(${1:char *}, ${2:const char *})"}},{"label":" stpncpy(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"40a7b70bstpncpy","filterText":"stpncpy","insertText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strcat(char *, const char *)","kind":3,"detail":"char *","sortText":"40a7b70bstrcat","filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strcat(${1:char *}, ${2:const char *})"}},{"label":" strchr(const char *, int)","kind":3,"detail":"char *","sortText":"40a7b70bstrchr","filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strchr(${1:const char *}, ${2:int})"}},{"label":" strcmp(const char *, const char *)","kind":3,"detail":"int","sortText":"40a7b70bstrcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":" strcoll(const char *, const char *)","kind":3,"detail":"int","sortText":"40a7b70bstrcoll","filterText":"strcoll","insertText":"strcoll(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strcoll(${1:const char *}, ${2:const char *})"}},{"label":" strcoll_l(const char *, const char *, locale_t)","kind":3,"detail":"int","sortText":"40a7b70bstrcoll_l","filterText":"strcoll_l","insertText":"strcoll_l(${1:const char *}, ${2:const char *}, ${3:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strcoll_l(${1:const char *}, ${2:const char *}, ${3:locale_t})"}},{"label":" strcpy(char *, const char *)","kind":3,"detail":"char *","sortText":"40a7b70bstrcpy","filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strcpy(${1:char *}, ${2:const char *})"}},{"label":" strcspn(const char *, const char *)","kind":3,"detail":"size_t","sortText":"40a7b70bstrcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strcspn(${1:const char *}, ${2:const char *})"}},{"label":" strdup(const char *)","kind":3,"detail":"char *","sortText":"40a7b70bstrdup","filterText":"strdup","insertText":"strdup(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strdup(${1:const char *})"}},{"label":" strerror(int)","kind":3,"detail":"char *","sortText":"40a7b70bstrerror","filterText":"strerror","insertText":"strerror(${1:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strerror(${1:int})"}},{"label":" strerror_l(int, locale_t)","kind":3,"detail":"char *","sortText":"40a7b70bstrerror_l","filterText":"strerror_l","insertText":"strerror_l(${1:int}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strerror_l(${1:int}, ${2:locale_t})"}},{"label":" strerror_r(int, char *, size_t)","kind":3,"detail":"int","sortText":"40a7b70bstrerror_r","filterText":"strerror_r","insertText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})"}},{"label":" strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"40a7b70bstrlcat","filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"40a7b70bstrlcpy","filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlwr(char *)","kind":3,"detail":"char *","sortText":"40a7b70bstrlwr","filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strlwr(${1:char *})"}},{"label":" strncasecmp(const char *, const char *, size_t)","kind":3,"detail":"int","sortText":"40a7b70bstrncasecmp","filterText":"strncasecmp","insertText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncasecmp_l(const char *, const char *, size_t, locale_t)","kind":3,"detail":"int","sortText":"40a7b70bstrncasecmp_l","filterText":"strncasecmp_l","insertText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})"}},{"label":" strncat(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"40a7b70bstrncat","filterText":"strncat","insertText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncmp(const char *, const char *, size_t)","kind":3,"detail":"int","sortText":"40a7b70bstrncmp","filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"40a7b70bstrncpy","filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strndup(const char *, size_t)","kind":3,"detail":"char *","sortText":"40a7b70bstrndup","filterText":"strndup","insertText":"strndup(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strndup(${1:const char *}, ${2:size_t})"}},{"label":" strnlen(const char *, size_t)","kind":3,"detail":"size_t","sortText":"40a7b70bstrnlen","filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strnlen(${1:const char *}, ${2:size_t})"}},{"label":" strnstr(const char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"40a7b70bstrnstr","filterText":"strnstr","insertText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strpbrk(const char *, const char *)","kind":3,"detail":"char *","sortText":"40a7b70bstrpbrk","filterText":"strpbrk","insertText":"strpbrk(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strpbrk(${1:const char *}, ${2:const char *})"}},{"label":" strrchr(const char *, int)","kind":3,"detail":"char *","sortText":"40a7b70bstrrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":" strsep(char **, const char *)","kind":3,"detail":"char *","sortText":"40a7b70bstrsep","filterText":"strsep","insertText":"strsep(${1:char **}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strsep(${1:char **}, ${2:const char *})"}},{"label":" strsignal(int __signo)","kind":3,"detail":"char *","sortText":"40a7b70bstrsignal","filterText":"strsignal","insertText":"strsignal(${1:int __signo})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strsignal(${1:int __signo})"}},{"label":" strspn(const char *, const char *)","kind":3,"detail":"size_t","sortText":"40a7b70bstrspn","filterText":"strspn","insertText":"strspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strspn(${1:const char *}, ${2:const char *})"}},{"label":" strstr(const char *, const char *)","kind":3,"detail":"char *","sortText":"40a7b70bstrstr","filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strstr(${1:const char *}, ${2:const char *})"}},{"label":" strtok(char *, const char *)","kind":3,"detail":"char *","sortText":"40a7b70bstrtok","filterText":"strtok","insertText":"strtok(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strtok(${1:char *}, ${2:const char *})"}},{"label":" strtok_r(char *, const char *, char **)","kind":3,"detail":"char *","sortText":"40a7b70bstrtok_r","filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})"}},{"label":" strtoumax(const char *, char **, int)","kind":3,"detail":"uintmax_t","sortText":"40a7b70bstrtoumax","filterText":"strtoumax","insertText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":" strupr(char *)","kind":3,"detail":"char *","sortText":"40a7b70bstrupr","filterText":"strupr","insertText":"strupr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strupr(${1:char *})"}},{"label":" strxfrm(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"40a7b70bstrxfrm","filterText":"strxfrm","insertText":"strxfrm(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strxfrm(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strxfrm_l(char *, const char *, size_t, locale_t)","kind":3,"detail":"size_t","sortText":"40a7b70bstrxfrm_l","filterText":"strxfrm_l","insertText":"strxfrm_l(${1:char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"strxfrm_l(${1:char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})"}},{"label":" swscanf(const wchar_t *, const wchar_t *, ...)","kind":3,"detail":"int","sortText":"40a7b70bswscanf","filterText":"swscanf","insertText":"swscanf(${1:const wchar_t *}, ${2:const wchar_t *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"swscanf(${1:const wchar_t *}, ${2:const wchar_t *, ...})"}},{"label":" sched_param","kind":22,"documentation":{"kind":"markdown","value":"Scheduling Parameters  \nOpen Group Specifications Issue 6"},"sortText":"40aa2b09sched_param","filterText":"sched_param","insertText":"sched_param","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sched_param"}},{"label":"•select(int __n, _types_fd_set *__readfds, _types_fd_set *__writefds, _types_fd_set *__exceptfds, struct timeval *__timeout)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/select.h\u003e`"},"sortText":"40aa2b09select","filterText":"select","insertText":"select(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:struct timeval *__timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"select(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:struct timeval *__timeout})"}},{"label":"•sigset_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/select.h\u003e`"},"sortText":"40aa2b09sigset_t","filterText":"sigset_t","insertText":"sigset_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sigset_t"}},{"label":"•stat(const char *__path, struct stat *__sbuf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"40aa2b09stat","filterText":"stat","insertText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})"}},{"label":" SIO_IRQ_PROC0n","kind":20,"detail":"IRQn","sortText":"40af2acfSIO_IRQ_PROC0n","filterText":"SIO_IRQ_PROC0n","insertText":"SIO_IRQ_PROC0n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SIO_IRQ_PROC0n"}},{"label":" SIO_IRQ_PROC1n","kind":20,"detail":"IRQn","sortText":"40af2acfSIO_IRQ_PROC1n","filterText":"SIO_IRQ_PROC1n","insertText":"SIO_IRQ_PROC1n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SIO_IRQ_PROC1n"}},{"label":" SPI0_IRQn","kind":20,"detail":"IRQn","sortText":"40af2acfSPI0_IRQn","filterText":"SPI0_IRQn","insertText":"SPI0_IRQn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SPI0_IRQn"}},{"label":" SPI1_IRQn","kind":20,"detail":"IRQn","sortText":"40af2acfSPI1_IRQn","filterText":"SPI1_IRQn","insertText":"SPI1_IRQn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SPI1_IRQn"}},{"label":" SVCall_IRQn","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"11 Cortex-M0 SV Call Interrupt"},"sortText":"40af2acfSVCall_IRQn","filterText":"SVCall_IRQn","insertText":"SVCall_IRQn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SVCall_IRQn"}},{"label":" SysTick_IRQn","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"15 Cortex-M0 System Tick Interrupt"},"sortText":"40af2acfSysTick_IRQn","filterText":"SysTick_IRQn","insertText":"SysTick_IRQn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SysTick_IRQn"}},{"label":" SystemCoreClock","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"System Clock Frequency (Core Clock)"},"sortText":"40af2acfSystemCoreClock","filterText":"SystemCoreClock","insertText":"SystemCoreClock","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SystemCoreClock"}},{"label":" serial_free(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Release the serial peripheral, not currently invoked. It requires further resource management.  \n@param obj The serial object"},"sortText":"40af2acfserial_free","filterText":"serial_free","insertText":"serial_free(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"serial_free(${1:serial_t *obj})"}},{"label":" serial_irq_set(serial_t *obj, SerialIrq irq, uint32_t enable)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure serial interrupt. This function is used for word-approach  \n@param obj The serial object  \n@param irq The serial IRQ type (RX or TX)  \n@param enable Set to non-zero to enable events, or zero to disable them"},"sortText":"40af2acfserial_irq_set","filterText":"serial_irq_set","insertText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})"}},{"label":" serial_pinmap_t","kind":8,"sortText":"40af2acfserial_pinmap_t","filterText":"serial_pinmap_t","insertText":"serial_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"serial_pinmap_t"}},{"label":" serial_set_flow_control_direct(serial_t *obj, FlowControl type, const serial_fc_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param pinmap Pointer to structure which holds static pinmap"},"sortText":"40af2acfserial_set_flow_control_direct","filterText":"serial_set_flow_control_direct","insertText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})"}},{"label":" serial_tx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial TX  \nReturn a PinMap array of pins that support Serial TX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_tx_pinmap","filterText":"serial_tx_pinmap","insertText":"serial_tx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"serial_tx_pinmap()"}},{"label":" singleton_lock()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Lock the singleton mutex  \nThis function is typically used to provide exclusive access when initializing a global object."},"sortText":"40af2acfsingleton_lock","filterText":"singleton_lock","insertText":"singleton_lock()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"singleton_lock()"}},{"label":" sleep_manager_can_deep_sleep()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"Get the status of deep sleep allowance for a target  \n@return true if a target can go to deepsleep, false otherwise"},"sortText":"40af2acfsleep_manager_can_deep_sleep","filterText":"sleep_manager_can_deep_sleep","insertText":"sleep_manager_can_deep_sleep()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sleep_manager_can_deep_sleep()"}},{"label":" sleep_manager_can_deep_sleep_test_check()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"Check if the target can deep sleep within a period of time  \nThis function in intended for use in testing. The amount of time this functions waits for deeps sleep to be available is currently 2ms. This may change in the future depending on testing requirements.  \n@return true if a target can go to deepsleep, false otherwise"},"sortText":"40af2acfsleep_manager_can_deep_sleep_test_check","filterText":"sleep_manager_can_deep_sleep_test_check","insertText":"sleep_manager_can_deep_sleep_test_check()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sleep_manager_can_deep_sleep_test_check()"}},{"label":" sleep_manager_lock_deep_sleep_internal()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Lock the deep sleep mode  \nThis locks the automatic deep mode selection.  \nsleep_manager_sleep_auto() will ignore deepsleep mode if this function is invoked at least once (the internal counter is non-zero)  \nUse this locking mechanism for interrupt driven API that are running in the background and deepsleep could affect their functionality  \nThe lock is a counter, can be locked up to USHRT_MAX This function is IRQ and thread safe"},"sortText":"40af2acfsleep_manager_lock_deep_sleep_internal","filterText":"sleep_manager_lock_deep_sleep_internal","insertText":"sleep_manager_lock_deep_sleep_internal()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sleep_manager_lock_deep_sleep_internal()"}},{"label":" spi_master_miso_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support SPI MISO  \nReturn a PinMap array of pins that support SPI MISO in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfspi_master_miso_pinmap","filterText":"spi_master_miso_pinmap","insertText":"spi_master_miso_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"spi_master_miso_pinmap()"}},{"label":" system_reset()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Resets the processor and most of the sub-system  \n@note Does not affect the debug sub-system"},"sortText":"40af2acfsystem_reset","filterText":"system_reset","insertText":"system_reset()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"system_reset()"}},{"label":" SOCK_CONNECTED","kind":20,"detail":"socket_state","documentation":{"kind":"markdown","value":"Socket is associated to peer address, either by connect() or sendto()/recvfrom() calls"},"sortText":"40b044fcSOCK_CONNECTED","filterText":"SOCK_CONNECTED","insertText":"SOCK_CONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SOCK_CONNECTED"}},{"label":" SOCK_LISTEN","kind":20,"detail":"socket_state","documentation":{"kind":"markdown","value":"Socket is listening for incoming connections"},"sortText":"40b044fcSOCK_LISTEN","filterText":"SOCK_LISTEN","insertText":"SOCK_LISTEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SOCK_LISTEN"}},{"label":" SCB_Type","kind":8,"documentation":{"kind":"markdown","value":"\\\\brief Structure type to access the System Control Block (SCB)."},"sortText":"40b12c04SCB_Type","filterText":"SCB_Type","insertText":"SCB_Type","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SCB_Type"}},{"label":" SysTick_Type","kind":8,"documentation":{"kind":"markdown","value":"\\\\brief Structure type to access the System Timer (SysTick)."},"sortText":"40b12c04SysTick_Type","filterText":"SysTick_Type","insertText":"SysTick_Type","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SysTick_Type"}},{"label":" SPI_CPHA_0","kind":20,"detail":"spi_cpha_t","sortText":"40b302d1SPI_CPHA_0","filterText":"SPI_CPHA_0","insertText":"SPI_CPHA_0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SPI_CPHA_0"}},{"label":" SPI_CPHA_1","kind":20,"detail":"spi_cpha_t","sortText":"40b302d1SPI_CPHA_1","filterText":"SPI_CPHA_1","insertText":"SPI_CPHA_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SPI_CPHA_1"}},{"label":" SPI_CPOL_0","kind":20,"detail":"spi_cpol_t","sortText":"40b302d1SPI_CPOL_0","filterText":"SPI_CPOL_0","insertText":"SPI_CPOL_0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SPI_CPOL_0"}},{"label":" SPI_CPOL_1","kind":20,"detail":"spi_cpol_t","sortText":"40b302d1SPI_CPOL_1","filterText":"SPI_CPOL_1","insertText":"SPI_CPOL_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SPI_CPOL_1"}},{"label":" SPI_LSB_FIRST","kind":20,"detail":"spi_order_t","sortText":"40b302d1SPI_LSB_FIRST","filterText":"SPI_LSB_FIRST","insertText":"SPI_LSB_FIRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SPI_LSB_FIRST"}},{"label":" SPI_MSB_FIRST","kind":20,"detail":"spi_order_t","sortText":"40b302d1SPI_MSB_FIRST","filterText":"SPI_MSB_FIRST","insertText":"SPI_MSB_FIRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"SPI_MSB_FIRST"}},{"label":" sleep_ms(uint32_t ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Wait for the given number of milliseconds before returning  \n\\\\ingroup sleep  \n\\\\note This method attempts to perform a lower power sleep (using WFE) as much as possible.  \n\\\\param ms the number of milliseconds to sleep"},"sortText":"40b302d1sleep_ms","filterText":"sleep_ms","insertText":"sleep_ms(${1:uint32_t ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sleep_ms(${1:uint32_t ms})"}},{"label":" sleep_us(uint64_t us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Wait for the given number of microseconds before returning  \n\\\\ingroup sleep  \n\\\\note This method attempts to perform a lower power (WFE) sleep  \n\\\\param us the number of microseconds to sleep  \n\\\\sa busy_wait_us()"},"sortText":"40b302d1sleep_us","filterText":"sleep_us","insertText":"sleep_us(${1:uint64_t us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"sleep_us(${1:uint64_t us})"}},{"label":" spi_cpha_t","kind":8,"sortText":"40b302d1spi_cpha_t","filterText":"spi_cpha_t","insertText":"spi_cpha_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"spi_cpha_t"}},{"label":" spi_cpol_t","kind":8,"sortText":"40b302d1spi_cpol_t","filterText":"spi_cpol_t","insertText":"spi_cpol_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"spi_cpol_t"}},{"label":" spi_deinit(spi_inst_t *spi)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Deinitialise SPI instances  \n\\\\ingroup hardware_spi Puts the SPI into a disabled state. Init will need to be called to reenable the device functions.  \n\\\\param spi SPI instance specifier, either \\\\ref spi0 or \\\\ref spi1"},"sortText":"40b302d1spi_deinit","filterText":"spi_deinit","insertText":"spi_deinit(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"spi_deinit(${1:spi_inst_t *spi})"}},{"label":" spi_get_hw(spi_inst_t *spi)","kind":3,"detail":"spi_hw_t *","sortText":"40b302d1spi_get_hw","filterText":"spi_get_hw","insertText":"spi_get_hw(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"spi_get_hw(${1:spi_inst_t *spi})"}},{"label":" spi_get_index(spi_inst_t *spi)","kind":3,"detail":"uint","documentation":{"kind":"markdown","value":"\\\\brief Convert I2c instance to hardware instance number  \n\\\\ingroup hardware_spi  \n\\\\param spi SPI instance  \n\\\\return Number of SPI, 0 or 1."},"sortText":"40b302d1spi_get_index","filterText":"spi_get_index","insertText":"spi_get_index(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"spi_get_index(${1:spi_inst_t *spi})"}},{"label":" spi_inst_t","kind":8,"documentation":{"kind":"markdown","value":"Opaque type representing an SPI instance."},"sortText":"40b302d1spi_inst_t","filterText":"spi_inst_t","insertText":"spi_inst_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"spi_inst_t"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":68},"contentChanges":[{"range":{"start":{"line":4,"character":3},"end":{"line":4,"character":3}},"rangeLength":0,"text":"e"}]}}Content-Length: 282

{"jsonrpc":"2.0","id":141,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":4},"context":{"triggerKind":3}}}Content-Length: 222

{"jsonrpc":"2.0","id":142,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 38650

{"id":141,"result":{"isIncomplete":true,"items":[{"label":" setup()","kind":3,"detail":"[2 overloads]","sortText":"3ee19999setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"setup()"}},{"label":" seed48(unsigned short *)","kind":3,"detail":"unsigned short *","sortText":"40a7b70bseed48","filterText":"seed48","insertText":"seed48(${1:unsigned short *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"seed48(${1:unsigned short *})"}},{"label":" setbuf(FILE *, char *)","kind":3,"detail":"void","sortText":"40a7b70bsetbuf","filterText":"setbuf","insertText":"setbuf(${1:FILE *}, ${2:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"setbuf(${1:FILE *}, ${2:char *})"}},{"label":" setbuffer(FILE *, char *, int)","kind":3,"detail":"void","sortText":"40a7b70bsetbuffer","filterText":"setbuffer","insertText":"setbuffer(${1:FILE *}, ${2:char *}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"setbuffer(${1:FILE *}, ${2:char *}, ${3:int})"}},{"label":" setenv(const char *__string, const char *__value, int __overwrite)","kind":3,"detail":"int","sortText":"40a7b70bsetenv","filterText":"setenv","insertText":"setenv(${1:const char *__string}, ${2:const char *__value}, ${3:int __overwrite})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"setenv(${1:const char *__string}, ${2:const char *__value}, ${3:int __overwrite})"}},{"label":" setlinebuf(FILE *)","kind":3,"detail":"int","sortText":"40a7b70bsetlinebuf","filterText":"setlinebuf","insertText":"setlinebuf(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"setlinebuf(${1:FILE *})"}},{"label":" setlocale(int, const char *)","kind":3,"detail":"char *","sortText":"40a7b70bsetlocale","filterText":"setlocale","insertText":"setlocale(${1:int}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"setlocale(${1:int}, ${2:const char *})"}},{"label":" setstate(char *)","kind":3,"detail":"char *","sortText":"40a7b70bsetstate","filterText":"setstate","insertText":"setstate(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"setstate(${1:char *})"}},{"label":" setvbuf(FILE *, char *, int, size_t)","kind":3,"detail":"int","sortText":"40a7b70bsetvbuf","filterText":"setvbuf","insertText":"setvbuf(${1:FILE *}, ${2:char *}, ${3:int}, ${4:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"setvbuf(${1:FILE *}, ${2:char *}, ${3:int}, ${4:size_t})"}},{"label":"•select(int __n, _types_fd_set *__readfds, _types_fd_set *__writefds, _types_fd_set *__exceptfds, struct timeval *__timeout)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/select.h\u003e`"},"sortText":"40aa2b09select","filterText":"select","insertText":"select(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:struct timeval *__timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"select(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:struct timeval *__timeout})"}},{"label":" SerialIrq","kind":8,"documentation":{"kind":"markdown","value":"Serial interrupt sources"},"sortText":"40af2acfSerialIrq","filterText":"SerialIrq","insertText":"SerialIrq","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SerialIrq"}},{"label":" SerialParity","kind":8,"sortText":"40af2acfSerialParity","filterText":"SerialParity","insertText":"SerialParity","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SerialParity"}},{"label":" seekdir(DIR *, long)","kind":3,"detail":"void","sortText":"40af2acfseekdir","filterText":"seekdir","insertText":"seekdir(${1:DIR *}, ${2:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"seekdir(${1:DIR *}, ${2:long})"}},{"label":" serial_baud(serial_t *obj, int baudrate)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the baud rate  \n@param obj The serial object  \n@param baudrate The baud rate to be configured"},"sortText":"40af2acfserial_baud","filterText":"serial_baud","insertText":"serial_baud(${1:serial_t *obj}, ${2:int baudrate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_baud(${1:serial_t *obj}, ${2:int baudrate})"}},{"label":" serial_break_clear(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the break  \n@param obj The serial object"},"sortText":"40af2acfserial_break_clear","filterText":"serial_break_clear","insertText":"serial_break_clear(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_break_clear(${1:serial_t *obj})"}},{"label":" serial_break_set(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the break  \n@param obj The serial object"},"sortText":"40af2acfserial_break_set","filterText":"serial_break_set","insertText":"serial_break_set(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_break_set(${1:serial_t *obj})"}},{"label":" serial_clear(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the serial peripheral  \n@param obj The serial object"},"sortText":"40af2acfserial_clear","filterText":"serial_clear","insertText":"serial_clear(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_clear(${1:serial_t *obj})"}},{"label":" serial_cts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial CTS  \nReturn a PinMap array of pins that support Serial CTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_cts_pinmap","filterText":"serial_cts_pinmap","insertText":"serial_cts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_cts_pinmap()"}},{"label":" serial_fc_pinmap_t","kind":8,"sortText":"40af2acfserial_fc_pinmap_t","filterText":"serial_fc_pinmap_t","insertText":"serial_fc_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_fc_pinmap_t"}},{"label":" serial_format(serial_t *obj, int data_bits, SerialParity parity, int stop_bits)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the format. Set the number of bits, parity and the number of stop bits  \n@param obj The serial object  \n@param data_bits The number of data bits  \n@param parity The parity  \n@param stop_bits The number of stop bits"},"sortText":"40af2acfserial_format","filterText":"serial_format","insertText":"serial_format(${1:serial_t *obj}, ${2:int data_bits}, ${3:SerialParity parity}, ${4:int stop_bits})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_format(${1:serial_t *obj}, ${2:int data_bits}, ${3:SerialParity parity}, ${4:int stop_bits})"}},{"label":" serial_free(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Release the serial peripheral, not currently invoked. It requires further resource management.  \n@param obj The serial object"},"sortText":"40af2acfserial_free","filterText":"serial_free","insertText":"serial_free(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_free(${1:serial_t *obj})"}},{"label":" serial_getc(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Get character. This is a blocking call, waiting for a character  \n@param obj The serial object"},"sortText":"40af2acfserial_getc","filterText":"serial_getc","insertText":"serial_getc(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_getc(${1:serial_t *obj})"}},{"label":" serial_init(serial_t *obj, PinName tx, PinName rx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Initialize the serial peripheral. It sets the default parameters for serial peripheral, and configures its specifieds pins.  \n@param obj The serial object  \n@param tx The TX pin name  \n@param rx The RX pin name"},"sortText":"40af2acfserial_init","filterText":"serial_init","insertText":"serial_init(${1:serial_t *obj}, ${2:PinName tx}, ${3:PinName rx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_init(${1:serial_t *obj}, ${2:PinName tx}, ${3:PinName rx})"}},{"label":" serial_init_direct(serial_t *obj, const serial_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Initialize the serial peripheral. It sets the default parameters for serial peripheral, and configures its specifieds pins.  \n@param obj The serial object  \n@param pinmap pointer to structure which holds static pinmap"},"sortText":"40af2acfserial_init_direct","filterText":"serial_init_direct","insertText":"serial_init_direct(${1:serial_t *obj}, ${2:const serial_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_init_direct(${1:serial_t *obj}, ${2:const serial_pinmap_t *pinmap})"}},{"label":" serial_irq_handler(serial_t *obj, uart_irq_handler handler, uint32_t id)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The serial interrupt handler registration  \n@param obj The serial object  \n@param handler The interrupt handler which will be invoked when the interrupt fires  \n@param id The SerialBase object"},"sortText":"40af2acfserial_irq_handler","filterText":"serial_irq_handler","insertText":"serial_irq_handler(${1:serial_t *obj}, ${2:uart_irq_handler handler}, ${3:uint32_t id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_irq_handler(${1:serial_t *obj}, ${2:uart_irq_handler handler}, ${3:uint32_t id})"}},{"label":" serial_irq_set(serial_t *obj, SerialIrq irq, uint32_t enable)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure serial interrupt. This function is used for word-approach  \n@param obj The serial object  \n@param irq The serial IRQ type (RX or TX)  \n@param enable Set to non-zero to enable events, or zero to disable them"},"sortText":"40af2acfserial_irq_set","filterText":"serial_irq_set","insertText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})"}},{"label":" serial_pinmap_t","kind":8,"sortText":"40af2acfserial_pinmap_t","filterText":"serial_pinmap_t","insertText":"serial_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_pinmap_t"}},{"label":" serial_pinout_tx(PinName tx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the TX pin for UART function.  \n@param tx The pin name used for TX"},"sortText":"40af2acfserial_pinout_tx","filterText":"serial_pinout_tx","insertText":"serial_pinout_tx(${1:PinName tx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_pinout_tx(${1:PinName tx})"}},{"label":" serial_putc(serial_t *obj, int c)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Send a character. This is a blocking call, waiting for a peripheral to be available for writing  \n@param obj The serial object  \n@param c The character to be sent"},"sortText":"40af2acfserial_putc","filterText":"serial_putc","insertText":"serial_putc(${1:serial_t *obj}, ${2:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_putc(${1:serial_t *obj}, ${2:int c})"}},{"label":" serial_readable(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Check if the serial peripheral is readable  \n@param obj The serial object  \n@return Non-zero value if a character can be read, 0 if nothing to read"},"sortText":"40af2acfserial_readable","filterText":"serial_readable","insertText":"serial_readable(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_readable(${1:serial_t *obj})"}},{"label":" serial_rts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial RTS  \nReturn a PinMap array of pins that support Serial RTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_rts_pinmap","filterText":"serial_rts_pinmap","insertText":"serial_rts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_rts_pinmap()"}},{"label":" serial_rx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial RX  \nReturn a PinMap array of pins that support Serial RX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_rx_pinmap","filterText":"serial_rx_pinmap","insertText":"serial_rx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_rx_pinmap()"}},{"label":" serial_s","kind":22,"sortText":"40af2acfserial_s","filterText":"serial_s","insertText":"serial_s","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_s"}},{"label":" serial_set_flow_control(serial_t *obj, FlowControl type, PinName rxflow, PinName txflow)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param rxflow The TX pin name  \n@param txflow The RX pin name"},"sortText":"40af2acfserial_set_flow_control","filterText":"serial_set_flow_control","insertText":"serial_set_flow_control(${1:serial_t *obj}, ${2:FlowControl type}, ${3:PinName rxflow}, ${4:PinName txflow})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_set_flow_control(${1:serial_t *obj}, ${2:FlowControl type}, ${3:PinName rxflow}, ${4:PinName txflow})"}},{"label":" serial_set_flow_control_direct(serial_t *obj, FlowControl type, const serial_fc_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param pinmap Pointer to structure which holds static pinmap"},"sortText":"40af2acfserial_set_flow_control_direct","filterText":"serial_set_flow_control_direct","insertText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})"}},{"label":" serial_t","kind":8,"documentation":{"kind":"markdown","value":"Non-asynch serial HAL structure"},"sortText":"40af2acfserial_t","filterText":"serial_t","insertText":"serial_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_t"}},{"label":" serial_tx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial TX  \nReturn a PinMap array of pins that support Serial TX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_tx_pinmap","filterText":"serial_tx_pinmap","insertText":"serial_tx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_tx_pinmap()"}},{"label":" serial_writable(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Check if the serial peripheral is writable  \n@param obj The serial object  \n@return Non-zero value if a character can be written, 0 otherwise."},"sortText":"40af2acfserial_writable","filterText":"serial_writable","insertText":"serial_writable(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"serial_writable(${1:serial_t *obj})"}},{"label":" set_time(time_t t)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the current time  \nInitializes and sets the time of the microcontroller Real-Time Clock (RTC) to the time represented by the number of seconds since January 1, 1970 (the UNIX timestamp).  \n@param t Number of seconds since January 1, 1970 (the UNIX timestamp)  \n@note Synchronization level: Thread safe  \nExample:  \n@code  \n#include \"mbed.h\"  \nint main() { set_time(1256729737); // Set time to Wed, 28 Oct 2009 11:35:37 }  \n@endcode"},"sortText":"40af2acfset_time","filterText":"set_time","insertText":"set_time(${1:time_t t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"set_time(${1:time_t t})"}},{"label":" set_us_ticker_irq_handler(ticker_irq_handler_type ticker_irq_handler)","kind":3,"detail":"ticker_irq_handler_type","documentation":{"kind":"markdown","value":"Set ticker IRQ handler  \n@param ticker_irq_handler IRQ handler to be connected  \n@return previous ticker IRQ handler  \n@note by default IRQ handler is set to ::ticker_irq_handler  \n@note this function is primarily for testing purposes and it's not required part of HAL implementation"},"sortText":"40af2acfset_us_ticker_irq_handler","filterText":"set_us_ticker_irq_handler","insertText":"set_us_ticker_irq_handler(${1:ticker_irq_handler_type ticker_irq_handler})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"set_us_ticker_irq_handler(${1:ticker_irq_handler_type ticker_irq_handler})"}},{"label":" settimeofday(const struct timeval *tv, const struct timezone *tz)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Standard lib retarget, set time since Epoch  \n@param tv Structure containing time_t seconds and useconds_t microseconds. Due to separate target specific RTC implementations only the seconds component is used.  \n@param tz DEPRECATED IN THE STANDARD: This parameter is left in for legacy code. It is not used.  \n@return Time in seconds on success, -1 on a failure.  \n@note Synchronization level: Thread safe"},"sortText":"40af2acfsettimeofday","filterText":"settimeofday","insertText":"settimeofday(${1:const struct timeval *tv}, ${2:const struct timezone *tz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"settimeofday(${1:const struct timeval *tv}, ${2:const struct timezone *tz})"}},{"label":" arduino::Server","kind":7,"sortText":"40cdce88Server","filterText":"Server","insertText":"arduino::Server","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"arduino::Server"}},{"label":" arduino::serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"XXX: Are we keeping the serialEvent API?"},"sortText":"40cdce88serialEventRun","filterText":"serialEventRun","insertText":"arduino::serialEventRun()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"arduino::serialEventRun()"}},{"label":"•std::chrono::seconds","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`  \nseconds"},"sortText":"40cf7affseconds","filterText":"seconds","insertText":"std::chrono::seconds","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::chrono::seconds"}},{"label":"•std::set_new_handler(new_handler)","kind":3,"detail":"new_handler","documentation":{"kind":"markdown","value":"From `\u003cnew\u003e`  \nTakes a replacement handler as the argument, returns the previous handler."},"sortText":"40cf7affset_new_handler","filterText":"set_new_handler","insertText":"std::set_new_handler(${1:new_handler})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::set_new_handler(${1:new_handler})"}},{"label":"•std::set_terminate(terminate_handler)","kind":3,"detail":"terminate_handler","documentation":{"kind":"markdown","value":"From `\u003cexception\u003e`  \nTakes a new handler function as an argument, returns the old function."},"sortText":"40cf7affset_terminate","filterText":"set_terminate","insertText":"std::set_terminate(${1:terminate_handler})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::set_terminate(${1:terminate_handler})"}},{"label":"•std::set_unexpected(unexpected_handler)","kind":3,"detail":"unexpected_handler","documentation":{"kind":"markdown","value":"From `\u003cexception\u003e`  \nTakes a new handler function as an argument, returns the old function."},"sortText":"40cf7affset_unexpected","filterText":"set_unexpected","insertText":"std::set_unexpected(${1:unexpected_handler})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::set_unexpected(${1:unexpected_handler})"}},{"label":"•std::search(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40d0d9cdsearch","filterText":"search","insertText":"std::search($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::search($0)"}},{"label":"•std::search_n(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40d0d9cdsearch_n","filterText":"search_n","insertText":"std::search_n($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::search_n($0)"}},{"label":"•std::set_difference(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40d0d9cdset_difference","filterText":"set_difference","insertText":"std::set_difference($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::set_difference($0)"}},{"label":"•std::set_intersection(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40d0d9cdset_intersection","filterText":"set_intersection","insertText":"std::set_intersection($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::set_intersection($0)"}},{"label":"•std::set_symmetric_difference(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40d0d9cdset_symmetric_difference","filterText":"set_symmetric_difference","insertText":"std::set_symmetric_difference($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::set_symmetric_difference($0)"}},{"label":"•std::set_union(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40d0d9cdset_union","filterText":"set_union","insertText":"std::set_union($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::set_union($0)"}},{"label":" rtos::Semaphore","kind":7,"documentation":{"kind":"markdown","value":"The Semaphore class is used to manage and protect access to a set of shared resources.  \n@note Memory considerations: The semaphore control structures will be created on current thread's stack, both for the mbed OS and underlying RTOS objects (static or dynamic RTOS memory pools are not being used)."},"sortText":"40d1f902Semaphore","filterText":"Semaphore","insertText":"rtos::Semaphore","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"rtos::Semaphore"}},{"label":" mbed::SerialBase","kind":7,"documentation":{"kind":"markdown","value":"A base class for serial port implementations Can't be instantiated directly (use UnbufferedSerial or BufferedSerial)  \n@note Synchronization level: Set by subclass"},"sortText":"40d1f902SerialBase","filterText":"SerialBase","insertText":"mbed::SerialBase","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"mbed::SerialBase"}},{"label":"•std::setbuf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40df8717setbuf","filterText":"setbuf","insertText":"std::setbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::setbuf"}},{"label":"•std::setlocale","kind":18,"documentation":{"kind":"markdown","value":"From `\u003cclocale\u003e`"},"sortText":"40df8717setlocale","filterText":"setlocale","insertText":"std::setlocale","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::setlocale"}},{"label":"•std::setvbuf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40df8717setvbuf","filterText":"setvbuf","insertText":"std::setvbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::setvbuf"}},{"label":" mstd::set_new_handler","kind":18,"sortText":"40e0c600set_new_handler","filterText":"set_new_handler","insertText":"mstd::set_new_handler","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"mstd::set_new_handler"}},{"label":"•std::system_error","kind":7,"documentation":{"kind":"markdown","value":"From `\u003csystem_error\u003e`  \n@brief Thrown to indicate error code of underlying system.  \n@ingroup exceptions"},"sortText":"40fb9c40system_error","filterText":"system_error","insertText":"std::system_error","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"std::system_error"}},{"label":" Serial","kind":1,"sortText":"413b6096Serial","filterText":"Serial","insertText":"Serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"Serial"}},{"label":" Serial1","kind":1,"sortText":"413b6096Serial1","filterText":"Serial1","insertText":"Serial1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"Serial1"}},{"label":" Serial2","kind":1,"sortText":"413b6096Serial2","filterText":"Serial2","insertText":"Serial2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"Serial2"}},{"label":" Serial3","kind":1,"sortText":"413b6096Serial3","filterText":"Serial3","insertText":"Serial3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"Serial3"}},{"label":" Serial4","kind":1,"sortText":"413b6096Serial4","filterText":"Serial4","insertText":"Serial4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"Serial4"}},{"label":" SerialHCI","kind":1,"sortText":"413b6096SerialHCI","filterText":"SerialHCI","insertText":"SerialHCI","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SerialHCI"}},{"label":" SerialNina","kind":1,"sortText":"413b6096SerialNina","filterText":"SerialNina","insertText":"SerialNina","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SerialNina"}},{"label":" SerialUSB","kind":1,"sortText":"413b6096SerialUSB","filterText":"SerialUSB","insertText":"SerialUSB","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SerialUSB"}},{"label":" SEEK_CUR","kind":1,"sortText":"4153f483SEEK_CUR","filterText":"SEEK_CUR","insertText":"SEEK_CUR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SEEK_CUR"}},{"label":" SEEK_END","kind":1,"sortText":"4153f483SEEK_END","filterText":"SEEK_END","insertText":"SEEK_END","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SEEK_END"}},{"label":" SEEK_SET","kind":1,"sortText":"4153f483SEEK_SET","filterText":"SEEK_SET","insertText":"SEEK_SET","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SEEK_SET"}},{"label":" SERIAL1_RX","kind":1,"sortText":"4153f483SERIAL1_RX","filterText":"SERIAL1_RX","insertText":"SERIAL1_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL1_RX"}},{"label":" SERIAL1_TX","kind":1,"sortText":"4153f483SERIAL1_TX","filterText":"SERIAL1_TX","insertText":"SERIAL1_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL1_TX"}},{"label":" SERIAL2_CTS","kind":1,"sortText":"4153f483SERIAL2_CTS","filterText":"SERIAL2_CTS","insertText":"SERIAL2_CTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL2_CTS"}},{"label":" SERIAL2_RTS","kind":1,"sortText":"4153f483SERIAL2_RTS","filterText":"SERIAL2_RTS","insertText":"SERIAL2_RTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL2_RTS"}},{"label":" SERIAL2_RX","kind":1,"sortText":"4153f483SERIAL2_RX","filterText":"SERIAL2_RX","insertText":"SERIAL2_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL2_RX"}},{"label":" SERIAL2_TX","kind":1,"sortText":"4153f483SERIAL2_TX","filterText":"SERIAL2_TX","insertText":"SERIAL2_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL2_TX"}},{"label":" SERIAL3_RX","kind":1,"sortText":"4153f483SERIAL3_RX","filterText":"SERIAL3_RX","insertText":"SERIAL3_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL3_RX"}},{"label":" SERIAL3_TX","kind":1,"sortText":"4153f483SERIAL3_TX","filterText":"SERIAL3_TX","insertText":"SERIAL3_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL3_TX"}},{"label":" SERIAL_CDC","kind":1,"sortText":"4153f483SERIAL_CDC","filterText":"SERIAL_CDC","insertText":"SERIAL_CDC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_CDC"}},{"label":" SERIAL_HOWMANY","kind":1,"sortText":"4153f483SERIAL_HOWMANY","filterText":"SERIAL_HOWMANY","insertText":"SERIAL_HOWMANY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_HOWMANY"}},{"label":" SERIAL_PORT_HARDWARE","kind":1,"sortText":"4153f483SERIAL_PORT_HARDWARE","filterText":"SERIAL_PORT_HARDWARE","insertText":"SERIAL_PORT_HARDWARE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_PORT_HARDWARE"}},{"label":" SERIAL_PORT_HARDWARE_OPEN","kind":1,"sortText":"4153f483SERIAL_PORT_HARDWARE_OPEN","filterText":"SERIAL_PORT_HARDWARE_OPEN","insertText":"SERIAL_PORT_HARDWARE_OPEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_PORT_HARDWARE_OPEN"}},{"label":" SERIAL_PORT_MONITOR","kind":1,"sortText":"4153f483SERIAL_PORT_MONITOR","filterText":"SERIAL_PORT_MONITOR","insertText":"SERIAL_PORT_MONITOR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_PORT_MONITOR"}},{"label":" SERIAL_PORT_USBVIRTUAL","kind":1,"sortText":"4153f483SERIAL_PORT_USBVIRTUAL","filterText":"SERIAL_PORT_USBVIRTUAL","insertText":"SERIAL_PORT_USBVIRTUAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_PORT_USBVIRTUAL"}},{"label":" SERIAL","kind":1,"sortText":"4155e80dSERIAL","filterText":"SERIAL","insertText":"SERIAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL"}},{"label":" SERIAL_5E1","kind":1,"sortText":"4155e80dSERIAL_5E1","filterText":"SERIAL_5E1","insertText":"SERIAL_5E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_5E1"}},{"label":" SERIAL_5E2","kind":1,"sortText":"4155e80dSERIAL_5E2","filterText":"SERIAL_5E2","insertText":"SERIAL_5E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_5E2"}},{"label":" SERIAL_5M1","kind":1,"sortText":"4155e80dSERIAL_5M1","filterText":"SERIAL_5M1","insertText":"SERIAL_5M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_5M1"}},{"label":" SERIAL_5M2","kind":1,"sortText":"4155e80dSERIAL_5M2","filterText":"SERIAL_5M2","insertText":"SERIAL_5M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_5M2"}},{"label":" SERIAL_5N1","kind":1,"sortText":"4155e80dSERIAL_5N1","filterText":"SERIAL_5N1","insertText":"SERIAL_5N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_5N1"}},{"label":" SERIAL_5N2","kind":1,"sortText":"4155e80dSERIAL_5N2","filterText":"SERIAL_5N2","insertText":"SERIAL_5N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_5N2"}},{"label":" SERIAL_5O1","kind":1,"sortText":"4155e80dSERIAL_5O1","filterText":"SERIAL_5O1","insertText":"SERIAL_5O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_5O1"}},{"label":" SERIAL_5O2","kind":1,"sortText":"4155e80dSERIAL_5O2","filterText":"SERIAL_5O2","insertText":"SERIAL_5O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_5O2"}},{"label":" SERIAL_5S2","kind":1,"sortText":"4155e80dSERIAL_5S2","filterText":"SERIAL_5S2","insertText":"SERIAL_5S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_5S2"}},{"label":" SERIAL_6E1","kind":1,"sortText":"4155e80dSERIAL_6E1","filterText":"SERIAL_6E1","insertText":"SERIAL_6E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_6E1"}},{"label":" SERIAL_6E2","kind":1,"sortText":"4155e80dSERIAL_6E2","filterText":"SERIAL_6E2","insertText":"SERIAL_6E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_6E2"}},{"label":" SERIAL_6M1","kind":1,"sortText":"4155e80dSERIAL_6M1","filterText":"SERIAL_6M1","insertText":"SERIAL_6M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_6M1"}},{"label":" SERIAL_6M2","kind":1,"sortText":"4155e80dSERIAL_6M2","filterText":"SERIAL_6M2","insertText":"SERIAL_6M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_6M2"}},{"label":" SERIAL_6N1","kind":1,"sortText":"4155e80dSERIAL_6N1","filterText":"SERIAL_6N1","insertText":"SERIAL_6N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"SERIAL_6N1"}}]},"jsonrpc":"2.0"}Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Se'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":142,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":69},"contentChanges":[{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"rangeLength":0,"text":"r"}]}}Content-Length: 282

{"jsonrpc":"2.0","id":143,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":5},"context":{"triggerKind":3}}}Content-Length: 222

{"jsonrpc":"2.0","id":144,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 37188

{"id":143,"result":{"isIncomplete":true,"items":[{"label":" SerialIrq","kind":8,"documentation":{"kind":"markdown","value":"Serial interrupt sources"},"sortText":"40af2acfSerialIrq","filterText":"SerialIrq","insertText":"SerialIrq","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SerialIrq"}},{"label":" SerialParity","kind":8,"sortText":"40af2acfSerialParity","filterText":"SerialParity","insertText":"SerialParity","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SerialParity"}},{"label":" serial_baud(serial_t *obj, int baudrate)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the baud rate  \n@param obj The serial object  \n@param baudrate The baud rate to be configured"},"sortText":"40af2acfserial_baud","filterText":"serial_baud","insertText":"serial_baud(${1:serial_t *obj}, ${2:int baudrate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_baud(${1:serial_t *obj}, ${2:int baudrate})"}},{"label":" serial_break_clear(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the break  \n@param obj The serial object"},"sortText":"40af2acfserial_break_clear","filterText":"serial_break_clear","insertText":"serial_break_clear(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_break_clear(${1:serial_t *obj})"}},{"label":" serial_break_set(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the break  \n@param obj The serial object"},"sortText":"40af2acfserial_break_set","filterText":"serial_break_set","insertText":"serial_break_set(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_break_set(${1:serial_t *obj})"}},{"label":" serial_clear(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the serial peripheral  \n@param obj The serial object"},"sortText":"40af2acfserial_clear","filterText":"serial_clear","insertText":"serial_clear(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_clear(${1:serial_t *obj})"}},{"label":" serial_cts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial CTS  \nReturn a PinMap array of pins that support Serial CTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_cts_pinmap","filterText":"serial_cts_pinmap","insertText":"serial_cts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_cts_pinmap()"}},{"label":" serial_fc_pinmap_t","kind":8,"sortText":"40af2acfserial_fc_pinmap_t","filterText":"serial_fc_pinmap_t","insertText":"serial_fc_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_fc_pinmap_t"}},{"label":" serial_format(serial_t *obj, int data_bits, SerialParity parity, int stop_bits)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the format. Set the number of bits, parity and the number of stop bits  \n@param obj The serial object  \n@param data_bits The number of data bits  \n@param parity The parity  \n@param stop_bits The number of stop bits"},"sortText":"40af2acfserial_format","filterText":"serial_format","insertText":"serial_format(${1:serial_t *obj}, ${2:int data_bits}, ${3:SerialParity parity}, ${4:int stop_bits})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_format(${1:serial_t *obj}, ${2:int data_bits}, ${3:SerialParity parity}, ${4:int stop_bits})"}},{"label":" serial_free(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Release the serial peripheral, not currently invoked. It requires further resource management.  \n@param obj The serial object"},"sortText":"40af2acfserial_free","filterText":"serial_free","insertText":"serial_free(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_free(${1:serial_t *obj})"}},{"label":" serial_getc(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Get character. This is a blocking call, waiting for a character  \n@param obj The serial object"},"sortText":"40af2acfserial_getc","filterText":"serial_getc","insertText":"serial_getc(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_getc(${1:serial_t *obj})"}},{"label":" serial_init(serial_t *obj, PinName tx, PinName rx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Initialize the serial peripheral. It sets the default parameters for serial peripheral, and configures its specifieds pins.  \n@param obj The serial object  \n@param tx The TX pin name  \n@param rx The RX pin name"},"sortText":"40af2acfserial_init","filterText":"serial_init","insertText":"serial_init(${1:serial_t *obj}, ${2:PinName tx}, ${3:PinName rx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_init(${1:serial_t *obj}, ${2:PinName tx}, ${3:PinName rx})"}},{"label":" serial_init_direct(serial_t *obj, const serial_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Initialize the serial peripheral. It sets the default parameters for serial peripheral, and configures its specifieds pins.  \n@param obj The serial object  \n@param pinmap pointer to structure which holds static pinmap"},"sortText":"40af2acfserial_init_direct","filterText":"serial_init_direct","insertText":"serial_init_direct(${1:serial_t *obj}, ${2:const serial_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_init_direct(${1:serial_t *obj}, ${2:const serial_pinmap_t *pinmap})"}},{"label":" serial_irq_handler(serial_t *obj, uart_irq_handler handler, uint32_t id)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The serial interrupt handler registration  \n@param obj The serial object  \n@param handler The interrupt handler which will be invoked when the interrupt fires  \n@param id The SerialBase object"},"sortText":"40af2acfserial_irq_handler","filterText":"serial_irq_handler","insertText":"serial_irq_handler(${1:serial_t *obj}, ${2:uart_irq_handler handler}, ${3:uint32_t id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_irq_handler(${1:serial_t *obj}, ${2:uart_irq_handler handler}, ${3:uint32_t id})"}},{"label":" serial_irq_set(serial_t *obj, SerialIrq irq, uint32_t enable)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure serial interrupt. This function is used for word-approach  \n@param obj The serial object  \n@param irq The serial IRQ type (RX or TX)  \n@param enable Set to non-zero to enable events, or zero to disable them"},"sortText":"40af2acfserial_irq_set","filterText":"serial_irq_set","insertText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})"}},{"label":" serial_pinmap_t","kind":8,"sortText":"40af2acfserial_pinmap_t","filterText":"serial_pinmap_t","insertText":"serial_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_pinmap_t"}},{"label":" serial_pinout_tx(PinName tx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the TX pin for UART function.  \n@param tx The pin name used for TX"},"sortText":"40af2acfserial_pinout_tx","filterText":"serial_pinout_tx","insertText":"serial_pinout_tx(${1:PinName tx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_pinout_tx(${1:PinName tx})"}},{"label":" serial_putc(serial_t *obj, int c)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Send a character. This is a blocking call, waiting for a peripheral to be available for writing  \n@param obj The serial object  \n@param c The character to be sent"},"sortText":"40af2acfserial_putc","filterText":"serial_putc","insertText":"serial_putc(${1:serial_t *obj}, ${2:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_putc(${1:serial_t *obj}, ${2:int c})"}},{"label":" serial_readable(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Check if the serial peripheral is readable  \n@param obj The serial object  \n@return Non-zero value if a character can be read, 0 if nothing to read"},"sortText":"40af2acfserial_readable","filterText":"serial_readable","insertText":"serial_readable(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_readable(${1:serial_t *obj})"}},{"label":" serial_rts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial RTS  \nReturn a PinMap array of pins that support Serial RTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_rts_pinmap","filterText":"serial_rts_pinmap","insertText":"serial_rts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_rts_pinmap()"}},{"label":" serial_rx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial RX  \nReturn a PinMap array of pins that support Serial RX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_rx_pinmap","filterText":"serial_rx_pinmap","insertText":"serial_rx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_rx_pinmap()"}},{"label":" serial_s","kind":22,"sortText":"40af2acfserial_s","filterText":"serial_s","insertText":"serial_s","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_s"}},{"label":" serial_set_flow_control(serial_t *obj, FlowControl type, PinName rxflow, PinName txflow)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param rxflow The TX pin name  \n@param txflow The RX pin name"},"sortText":"40af2acfserial_set_flow_control","filterText":"serial_set_flow_control","insertText":"serial_set_flow_control(${1:serial_t *obj}, ${2:FlowControl type}, ${3:PinName rxflow}, ${4:PinName txflow})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_set_flow_control(${1:serial_t *obj}, ${2:FlowControl type}, ${3:PinName rxflow}, ${4:PinName txflow})"}},{"label":" serial_set_flow_control_direct(serial_t *obj, FlowControl type, const serial_fc_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param pinmap Pointer to structure which holds static pinmap"},"sortText":"40af2acfserial_set_flow_control_direct","filterText":"serial_set_flow_control_direct","insertText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})"}},{"label":" serial_t","kind":8,"documentation":{"kind":"markdown","value":"Non-asynch serial HAL structure"},"sortText":"40af2acfserial_t","filterText":"serial_t","insertText":"serial_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_t"}},{"label":" serial_tx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial TX  \nReturn a PinMap array of pins that support Serial TX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_tx_pinmap","filterText":"serial_tx_pinmap","insertText":"serial_tx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_tx_pinmap()"}},{"label":" serial_writable(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Check if the serial peripheral is writable  \n@param obj The serial object  \n@return Non-zero value if a character can be written, 0 otherwise."},"sortText":"40af2acfserial_writable","filterText":"serial_writable","insertText":"serial_writable(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"serial_writable(${1:serial_t *obj})"}},{"label":" arduino::Server","kind":7,"sortText":"40cdce88Server","filterText":"Server","insertText":"arduino::Server","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"arduino::Server"}},{"label":" arduino::serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"XXX: Are we keeping the serialEvent API?"},"sortText":"40cdce88serialEventRun","filterText":"serialEventRun","insertText":"arduino::serialEventRun()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"arduino::serialEventRun()"}},{"label":" mbed::SerialBase","kind":7,"documentation":{"kind":"markdown","value":"A base class for serial port implementations Can't be instantiated directly (use UnbufferedSerial or BufferedSerial)  \n@note Synchronization level: Set by subclass"},"sortText":"40d1f902SerialBase","filterText":"SerialBase","insertText":"mbed::SerialBase","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"mbed::SerialBase"}},{"label":"•std::system_error","kind":7,"documentation":{"kind":"markdown","value":"From `\u003csystem_error\u003e`  \n@brief Thrown to indicate error code of underlying system.  \n@ingroup exceptions"},"sortText":"40ece67fsystem_error","filterText":"system_error","insertText":"std::system_error","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"std::system_error"}},{"label":" mbed_serial","kind":8,"sortText":"4103aae2mbed_serial","filterText":"mbed_serial","insertText":"mbed_serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"mbed_serial"}},{"label":" arduino::USBSerial","kind":7,"sortText":"4122cb5dUSBSerial","filterText":"USBSerial","insertText":"arduino::USBSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"arduino::USBSerial"}},{"label":" getUniqueSerialNumber(uint8_t *name)","kind":3,"detail":"uint8_t","sortText":"4127b70bgetUniqueSerialNumber","filterText":"getUniqueSerialNumber","insertText":"getUniqueSerialNumber(${1:uint8_t *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"getUniqueSerialNumber(${1:uint8_t *name})"}},{"label":" mbed_usb_serial","kind":8,"sortText":"4127b70bmbed_usb_serial","filterText":"mbed_usb_serial","insertText":"mbed_usb_serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"mbed_usb_serial"}},{"label":" arduino::HardwareSerial","kind":7,"sortText":"41301b9dHardwareSerial","filterText":"HardwareSerial","insertText":"arduino::HardwareSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"arduino::HardwareSerial"}},{"label":" mbedtls_pk_setup_rsa_alt(mbedtls_pk_context *ctx, void *key, mbedtls_pk_rsa_alt_decrypt_func decrypt_func, mbedtls_pk_rsa_alt_sign_func sign_func, mbedtls_pk_rsa_alt_key_len_func key_len_func)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\brief Initialize an RSA-alt context  \n\\\\param ctx Context to initialize. It must not have been set up yet (type #MBEDTLS_PK_NONE).  \n\\\\param key RSA key pointer  \n\\\\param decrypt_func Decryption function  \n\\\\param sign_func Signing function  \n\\\\param key_len_func Function returning key length in bytes  \n\\\\return 0 on success, or MBEDTLS_ERR_PK_BAD_INPUT_DATA if the context wasn't already initialized as RSA_ALT.  \n\\\\note This function replaces \\\\c mbedtls_pk_setup() for RSA-alt."},"sortText":"413044fbmbedtls_pk_setup_rsa_alt","filterText":"mbedtls_pk_setup_rsa_alt","insertText":"mbedtls_pk_setup_rsa_alt(${1:mbedtls_pk_context *ctx}, ${2:void *key}, ${3:mbedtls_pk_rsa_alt_decrypt_func decrypt_func}, ${4:mbedtls_pk_rsa_alt_sign_func sign_func}, ${5:mbedtls_pk_rsa_alt_key_len_func key_len_func})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"mbedtls_pk_setup_rsa_alt(${1:mbedtls_pk_context *ctx}, ${2:void *key}, ${3:mbedtls_pk_rsa_alt_decrypt_func decrypt_func}, ${4:mbedtls_pk_rsa_alt_sign_func sign_func}, ${5:mbedtls_pk_rsa_alt_key_len_func key_len_func})"}},{"label":" mbedtls_x509_serial_gets(char *buf, size_t size, const mbedtls_x509_buf *serial)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\brief Store the certificate serial in printable form into buf;  \nno more than size characters will be written.  \n\\\\param buf Buffer to write to  \n\\\\param size Maximum size of buffer  \n\\\\param serial The X509 serial to represent  \n\\\\return The length of the string written (not including the terminated nul byte), or a negative error code."},"sortText":"413044fcmbedtls_x509_serial_gets","filterText":"mbedtls_x509_serial_gets","insertText":"mbedtls_x509_serial_gets(${1:char *buf}, ${2:size_t size}, ${3:const mbedtls_x509_buf *serial})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"mbedtls_x509_serial_gets(${1:char *buf}, ${2:size_t size}, ${3:const mbedtls_x509_buf *serial})"}},{"label":" mbed::BufferedSerial","kind":7,"documentation":{"kind":"markdown","value":"Class providing buffered UART communication functionality using separate circular buffer for send and receive channels"},"sortText":"4134f7d7BufferedSerial","filterText":"BufferedSerial","insertText":"mbed::BufferedSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"mbed::BufferedSerial"}},{"label":" mbed::UnbufferedSerial","kind":7,"documentation":{"kind":"markdown","value":"Class implementation for unbuffered I/O for an interrupt driven application or one that needs to have more control."},"sortText":"4134f7d7UnbufferedSerial","filterText":"UnbufferedSerial","insertText":"mbed::UnbufferedSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"mbed::UnbufferedSerial"}},{"label":" Serial","kind":1,"sortText":"413b6096Serial","filterText":"Serial","insertText":"Serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"Serial"}},{"label":" Serial1","kind":1,"sortText":"413b6096Serial1","filterText":"Serial1","insertText":"Serial1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"Serial1"}},{"label":" Serial2","kind":1,"sortText":"413b6096Serial2","filterText":"Serial2","insertText":"Serial2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"Serial2"}},{"label":" Serial3","kind":1,"sortText":"413b6096Serial3","filterText":"Serial3","insertText":"Serial3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"Serial3"}},{"label":" Serial4","kind":1,"sortText":"413b6096Serial4","filterText":"Serial4","insertText":"Serial4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"Serial4"}},{"label":" SerialHCI","kind":1,"sortText":"413b6096SerialHCI","filterText":"SerialHCI","insertText":"SerialHCI","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SerialHCI"}},{"label":" SerialNina","kind":1,"sortText":"413b6096SerialNina","filterText":"SerialNina","insertText":"SerialNina","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SerialNina"}},{"label":" SerialUSB","kind":1,"sortText":"413b6096SerialUSB","filterText":"SerialUSB","insertText":"SerialUSB","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SerialUSB"}},{"label":" mbed_save_error_hist(const char *path)","kind":3,"detail":"mbed_error_status_t","documentation":{"kind":"markdown","value":"Saves the error history information to a file  \n@param path path to the file in the filesystem  \n@return 0 or MBED_ERROR_SUCCESS on success.  \nMBED_ERROR_WRITE_FAILED if writing to file failed MBED_ERROR_INVALID_ARGUMENT if path is not valid  \n@note Filesystem support is required in order for this function to work."},"sortText":"4151f901mbed_save_error_hist","filterText":"mbed_save_error_hist","insertText":"mbed_save_error_hist(${1:const char *path})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"mbed_save_error_hist(${1:const char *path})"}},{"label":" mbed_set_error_hook(mbed_error_hook_t custom_error_hook)","kind":3,"detail":"mbed_error_status_t","documentation":{"kind":"markdown","value":"Registers an application defined error callback with the error handling system.  \nThis function will be called with error context info whenever system handles a mbed_error/mbed_warning call NOTE: This function should be implemented for re-entrancy as multiple threads may invoke mbed_error which may cause error hook to be called.  \n@param custom_error_hook mbed_error_status_t status to be set(See mbed_error_status_t enum above for available error status values).  \n@return 0 or MBED_SUCCESS on success.  \nMBED_ERROR_INVALID_ARGUMENT in case of NULL for custom_error_hook  \n@code  \nmbed_error_status_t my_custom_error_hook(mbed_error_status_t error_status, const mbed_error_ctx \\*error_ctx) { //Do something with the error_status or error_ctx }  \nmbed_set_error_hook( my_custom_error_hook )  \n@endcode  \n@note The error hook function implementation should be re-entrant.  \n@deprecated You should use an overridden mbed_error_hook() function if you like to catch errors in your application.  \nWith mbed_set_error_hook() it is not possible to catch errors before your application started."},"sortText":"4151f901mbed_set_error_hook","filterText":"mbed_set_error_hook","insertText":"mbed_set_error_hook(${1:mbed_error_hook_t custom_error_hook})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"mbed_set_error_hook(${1:mbed_error_hook_t custom_error_hook})"}},{"label":" mbedtls_x509_get_serial(unsigned char **p, const unsigned char *end, mbedtls_x509_buf *serial)","kind":3,"detail":"int","sortText":"4152e427mbedtls_x509_get_serial","filterText":"mbedtls_x509_get_serial","insertText":"mbedtls_x509_get_serial(${1:unsigned char **p}, ${2:const unsigned char *end}, ${3:mbedtls_x509_buf *serial})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"mbedtls_x509_get_serial(${1:unsigned char **p}, ${2:const unsigned char *end}, ${3:mbedtls_x509_buf *serial})"}},{"label":" adc_set_round_robin(uint input_mask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Round Robin sampling selector  \n\\\\ingroup hardware_adc  \nThis function sets which inputs are to be run through in round robin mode.  \nValue between 0 and 0x1f (bit 0 to bit 4 for GPIO 26 to 29 and temperature sensor input respectively)  \n\\\\param input_mask A bit pattern indicating which of the 5 inputs are to be sampled. Write a value of 0 to disable round robin sampling."},"sortText":"41552d02adc_set_round_robin","filterText":"adc_set_round_robin","insertText":"adc_set_round_robin(${1:uint input_mask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"adc_set_round_robin(${1:uint input_mask})"}},{"label":" SERIAL1_RX","kind":1,"sortText":"415c25d2SERIAL1_RX","filterText":"SERIAL1_RX","insertText":"SERIAL1_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL1_RX"}},{"label":" SERIAL1_TX","kind":1,"sortText":"415c25d2SERIAL1_TX","filterText":"SERIAL1_TX","insertText":"SERIAL1_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL1_TX"}},{"label":" SERIAL2_CTS","kind":1,"sortText":"415c25d2SERIAL2_CTS","filterText":"SERIAL2_CTS","insertText":"SERIAL2_CTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL2_CTS"}},{"label":" SERIAL2_RTS","kind":1,"sortText":"415c25d2SERIAL2_RTS","filterText":"SERIAL2_RTS","insertText":"SERIAL2_RTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL2_RTS"}},{"label":" SERIAL2_RX","kind":1,"sortText":"415c25d2SERIAL2_RX","filterText":"SERIAL2_RX","insertText":"SERIAL2_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL2_RX"}},{"label":" SERIAL2_TX","kind":1,"sortText":"415c25d2SERIAL2_TX","filterText":"SERIAL2_TX","insertText":"SERIAL2_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL2_TX"}},{"label":" SERIAL3_RX","kind":1,"sortText":"415c25d2SERIAL3_RX","filterText":"SERIAL3_RX","insertText":"SERIAL3_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL3_RX"}},{"label":" SERIAL3_TX","kind":1,"sortText":"415c25d2SERIAL3_TX","filterText":"SERIAL3_TX","insertText":"SERIAL3_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL3_TX"}},{"label":" SERIAL_CDC","kind":1,"sortText":"415c25d2SERIAL_CDC","filterText":"SERIAL_CDC","insertText":"SERIAL_CDC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_CDC"}},{"label":" SERIAL_HOWMANY","kind":1,"sortText":"415c25d2SERIAL_HOWMANY","filterText":"SERIAL_HOWMANY","insertText":"SERIAL_HOWMANY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_HOWMANY"}},{"label":" SERIAL_PORT_HARDWARE","kind":1,"sortText":"415c25d2SERIAL_PORT_HARDWARE","filterText":"SERIAL_PORT_HARDWARE","insertText":"SERIAL_PORT_HARDWARE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_PORT_HARDWARE"}},{"label":" SERIAL_PORT_HARDWARE_OPEN","kind":1,"sortText":"415c25d2SERIAL_PORT_HARDWARE_OPEN","filterText":"SERIAL_PORT_HARDWARE_OPEN","insertText":"SERIAL_PORT_HARDWARE_OPEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_PORT_HARDWARE_OPEN"}},{"label":" SERIAL_PORT_MONITOR","kind":1,"sortText":"415c25d2SERIAL_PORT_MONITOR","filterText":"SERIAL_PORT_MONITOR","insertText":"SERIAL_PORT_MONITOR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_PORT_MONITOR"}},{"label":" SERIAL_PORT_USBVIRTUAL","kind":1,"sortText":"415c25d2SERIAL_PORT_USBVIRTUAL","filterText":"SERIAL_PORT_USBVIRTUAL","insertText":"SERIAL_PORT_USBVIRTUAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_PORT_USBVIRTUAL"}},{"label":" SERIAL","kind":1,"sortText":"415e0192SERIAL","filterText":"SERIAL","insertText":"SERIAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL"}},{"label":" SERIAL_5E1","kind":1,"sortText":"415e0192SERIAL_5E1","filterText":"SERIAL_5E1","insertText":"SERIAL_5E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_5E1"}},{"label":" SERIAL_5E2","kind":1,"sortText":"415e0192SERIAL_5E2","filterText":"SERIAL_5E2","insertText":"SERIAL_5E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_5E2"}},{"label":" SERIAL_5M1","kind":1,"sortText":"415e0192SERIAL_5M1","filterText":"SERIAL_5M1","insertText":"SERIAL_5M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_5M1"}},{"label":" SERIAL_5M2","kind":1,"sortText":"415e0192SERIAL_5M2","filterText":"SERIAL_5M2","insertText":"SERIAL_5M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_5M2"}},{"label":" SERIAL_5N1","kind":1,"sortText":"415e0192SERIAL_5N1","filterText":"SERIAL_5N1","insertText":"SERIAL_5N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_5N1"}},{"label":" SERIAL_5N2","kind":1,"sortText":"415e0192SERIAL_5N2","filterText":"SERIAL_5N2","insertText":"SERIAL_5N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_5N2"}},{"label":" SERIAL_5O1","kind":1,"sortText":"415e0192SERIAL_5O1","filterText":"SERIAL_5O1","insertText":"SERIAL_5O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_5O1"}},{"label":" SERIAL_5O2","kind":1,"sortText":"415e0192SERIAL_5O2","filterText":"SERIAL_5O2","insertText":"SERIAL_5O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_5O2"}},{"label":" SERIAL_5S1","kind":1,"sortText":"415e0192SERIAL_5S1","filterText":"SERIAL_5S1","insertText":"SERIAL_5S1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_5S1"}},{"label":" SERIAL_5S2","kind":1,"sortText":"415e0192SERIAL_5S2","filterText":"SERIAL_5S2","insertText":"SERIAL_5S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_5S2"}},{"label":" SERIAL_6E1","kind":1,"sortText":"415e0192SERIAL_6E1","filterText":"SERIAL_6E1","insertText":"SERIAL_6E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_6E1"}},{"label":" SERIAL_6E2","kind":1,"sortText":"415e0192SERIAL_6E2","filterText":"SERIAL_6E2","insertText":"SERIAL_6E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_6E2"}},{"label":" SERIAL_6M1","kind":1,"sortText":"415e0192SERIAL_6M1","filterText":"SERIAL_6M1","insertText":"SERIAL_6M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_6M1"}},{"label":" SERIAL_6M2","kind":1,"sortText":"415e0192SERIAL_6M2","filterText":"SERIAL_6M2","insertText":"SERIAL_6M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_6M2"}},{"label":" SERIAL_6N1","kind":1,"sortText":"415e0192SERIAL_6N1","filterText":"SERIAL_6N1","insertText":"SERIAL_6N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_6N1"}},{"label":" SERIAL_6N2","kind":1,"sortText":"415e0192SERIAL_6N2","filterText":"SERIAL_6N2","insertText":"SERIAL_6N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_6N2"}},{"label":" SERIAL_6O1","kind":1,"sortText":"415e0192SERIAL_6O1","filterText":"SERIAL_6O1","insertText":"SERIAL_6O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_6O1"}},{"label":" SERIAL_6O2","kind":1,"sortText":"415e0192SERIAL_6O2","filterText":"SERIAL_6O2","insertText":"SERIAL_6O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_6O2"}},{"label":" SERIAL_6S1","kind":1,"sortText":"415e0192SERIAL_6S1","filterText":"SERIAL_6S1","insertText":"SERIAL_6S1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_6S1"}},{"label":" SERIAL_6S2","kind":1,"sortText":"415e0192SERIAL_6S2","filterText":"SERIAL_6S2","insertText":"SERIAL_6S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_6S2"}},{"label":" SERIAL_7E1","kind":1,"sortText":"415e0192SERIAL_7E1","filterText":"SERIAL_7E1","insertText":"SERIAL_7E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_7E1"}},{"label":" SERIAL_7E2","kind":1,"sortText":"415e0192SERIAL_7E2","filterText":"SERIAL_7E2","insertText":"SERIAL_7E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_7E2"}},{"label":" SERIAL_7M1","kind":1,"sortText":"415e0192SERIAL_7M1","filterText":"SERIAL_7M1","insertText":"SERIAL_7M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_7M1"}},{"label":" SERIAL_7M2","kind":1,"sortText":"415e0192SERIAL_7M2","filterText":"SERIAL_7M2","insertText":"SERIAL_7M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_7M2"}},{"label":" SERIAL_7N1","kind":1,"sortText":"415e0192SERIAL_7N1","filterText":"SERIAL_7N1","insertText":"SERIAL_7N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_7N1"}},{"label":" SERIAL_7N2","kind":1,"sortText":"415e0192SERIAL_7N2","filterText":"SERIAL_7N2","insertText":"SERIAL_7N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_7N2"}},{"label":" SERIAL_7O1","kind":1,"sortText":"415e0192SERIAL_7O1","filterText":"SERIAL_7O1","insertText":"SERIAL_7O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_7O1"}},{"label":" SERIAL_7O2","kind":1,"sortText":"415e0192SERIAL_7O2","filterText":"SERIAL_7O2","insertText":"SERIAL_7O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"newText":"SERIAL_7O2"}}]},"jsonrpc":"2.0"}Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Ser'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":144,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":70},"contentChanges":[{"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":5}},"rangeLength":0,"text":"i"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":144}}Content-Length: 222

{"jsonrpc":"2.0","id":145,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 398

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seri'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":145,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":146,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":6},"context":{"triggerKind":3}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":71},"contentChanges":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":6}},"rangeLength":0,"text":"a"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":145}}Content-Length: 222

{"jsonrpc":"2.0","id":147,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 34371

{"id":146,"result":{"isIncomplete":true,"items":[{"label":" SerialIrq","kind":8,"documentation":{"kind":"markdown","value":"Serial interrupt sources"},"sortText":"40af2acfSerialIrq","filterText":"SerialIrq","insertText":"SerialIrq","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SerialIrq"}},{"label":" SerialParity","kind":8,"sortText":"40af2acfSerialParity","filterText":"SerialParity","insertText":"SerialParity","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SerialParity"}},{"label":" serial_baud(serial_t *obj, int baudrate)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the baud rate  \n@param obj The serial object  \n@param baudrate The baud rate to be configured"},"sortText":"40af2acfserial_baud","filterText":"serial_baud","insertText":"serial_baud(${1:serial_t *obj}, ${2:int baudrate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_baud(${1:serial_t *obj}, ${2:int baudrate})"}},{"label":" serial_break_clear(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the break  \n@param obj The serial object"},"sortText":"40af2acfserial_break_clear","filterText":"serial_break_clear","insertText":"serial_break_clear(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_break_clear(${1:serial_t *obj})"}},{"label":" serial_break_set(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the break  \n@param obj The serial object"},"sortText":"40af2acfserial_break_set","filterText":"serial_break_set","insertText":"serial_break_set(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_break_set(${1:serial_t *obj})"}},{"label":" serial_clear(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the serial peripheral  \n@param obj The serial object"},"sortText":"40af2acfserial_clear","filterText":"serial_clear","insertText":"serial_clear(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_clear(${1:serial_t *obj})"}},{"label":" serial_cts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial CTS  \nReturn a PinMap array of pins that support Serial CTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_cts_pinmap","filterText":"serial_cts_pinmap","insertText":"serial_cts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_cts_pinmap()"}},{"label":" serial_fc_pinmap_t","kind":8,"sortText":"40af2acfserial_fc_pinmap_t","filterText":"serial_fc_pinmap_t","insertText":"serial_fc_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_fc_pinmap_t"}},{"label":" serial_format(serial_t *obj, int data_bits, SerialParity parity, int stop_bits)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the format. Set the number of bits, parity and the number of stop bits  \n@param obj The serial object  \n@param data_bits The number of data bits  \n@param parity The parity  \n@param stop_bits The number of stop bits"},"sortText":"40af2acfserial_format","filterText":"serial_format","insertText":"serial_format(${1:serial_t *obj}, ${2:int data_bits}, ${3:SerialParity parity}, ${4:int stop_bits})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_format(${1:serial_t *obj}, ${2:int data_bits}, ${3:SerialParity parity}, ${4:int stop_bits})"}},{"label":" serial_free(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Release the serial peripheral, not currently invoked. It requires further resource management.  \n@param obj The serial object"},"sortText":"40af2acfserial_free","filterText":"serial_free","insertText":"serial_free(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_free(${1:serial_t *obj})"}},{"label":" serial_getc(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Get character. This is a blocking call, waiting for a character  \n@param obj The serial object"},"sortText":"40af2acfserial_getc","filterText":"serial_getc","insertText":"serial_getc(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_getc(${1:serial_t *obj})"}},{"label":" serial_init(serial_t *obj, PinName tx, PinName rx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Initialize the serial peripheral. It sets the default parameters for serial peripheral, and configures its specifieds pins.  \n@param obj The serial object  \n@param tx The TX pin name  \n@param rx The RX pin name"},"sortText":"40af2acfserial_init","filterText":"serial_init","insertText":"serial_init(${1:serial_t *obj}, ${2:PinName tx}, ${3:PinName rx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_init(${1:serial_t *obj}, ${2:PinName tx}, ${3:PinName rx})"}},{"label":" serial_init_direct(serial_t *obj, const serial_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Initialize the serial peripheral. It sets the default parameters for serial peripheral, and configures its specifieds pins.  \n@param obj The serial object  \n@param pinmap pointer to structure which holds static pinmap"},"sortText":"40af2acfserial_init_direct","filterText":"serial_init_direct","insertText":"serial_init_direct(${1:serial_t *obj}, ${2:const serial_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_init_direct(${1:serial_t *obj}, ${2:const serial_pinmap_t *pinmap})"}},{"label":" serial_irq_handler(serial_t *obj, uart_irq_handler handler, uint32_t id)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The serial interrupt handler registration  \n@param obj The serial object  \n@param handler The interrupt handler which will be invoked when the interrupt fires  \n@param id The SerialBase object"},"sortText":"40af2acfserial_irq_handler","filterText":"serial_irq_handler","insertText":"serial_irq_handler(${1:serial_t *obj}, ${2:uart_irq_handler handler}, ${3:uint32_t id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_irq_handler(${1:serial_t *obj}, ${2:uart_irq_handler handler}, ${3:uint32_t id})"}},{"label":" serial_irq_set(serial_t *obj, SerialIrq irq, uint32_t enable)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure serial interrupt. This function is used for word-approach  \n@param obj The serial object  \n@param irq The serial IRQ type (RX or TX)  \n@param enable Set to non-zero to enable events, or zero to disable them"},"sortText":"40af2acfserial_irq_set","filterText":"serial_irq_set","insertText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})"}},{"label":" serial_pinmap_t","kind":8,"sortText":"40af2acfserial_pinmap_t","filterText":"serial_pinmap_t","insertText":"serial_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_pinmap_t"}},{"label":" serial_pinout_tx(PinName tx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the TX pin for UART function.  \n@param tx The pin name used for TX"},"sortText":"40af2acfserial_pinout_tx","filterText":"serial_pinout_tx","insertText":"serial_pinout_tx(${1:PinName tx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_pinout_tx(${1:PinName tx})"}},{"label":" serial_putc(serial_t *obj, int c)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Send a character. This is a blocking call, waiting for a peripheral to be available for writing  \n@param obj The serial object  \n@param c The character to be sent"},"sortText":"40af2acfserial_putc","filterText":"serial_putc","insertText":"serial_putc(${1:serial_t *obj}, ${2:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_putc(${1:serial_t *obj}, ${2:int c})"}},{"label":" serial_readable(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Check if the serial peripheral is readable  \n@param obj The serial object  \n@return Non-zero value if a character can be read, 0 if nothing to read"},"sortText":"40af2acfserial_readable","filterText":"serial_readable","insertText":"serial_readable(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_readable(${1:serial_t *obj})"}},{"label":" serial_rts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial RTS  \nReturn a PinMap array of pins that support Serial RTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_rts_pinmap","filterText":"serial_rts_pinmap","insertText":"serial_rts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_rts_pinmap()"}},{"label":" serial_rx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial RX  \nReturn a PinMap array of pins that support Serial RX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_rx_pinmap","filterText":"serial_rx_pinmap","insertText":"serial_rx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_rx_pinmap()"}},{"label":" serial_s","kind":22,"sortText":"40af2acfserial_s","filterText":"serial_s","insertText":"serial_s","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_s"}},{"label":" serial_set_flow_control(serial_t *obj, FlowControl type, PinName rxflow, PinName txflow)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param rxflow The TX pin name  \n@param txflow The RX pin name"},"sortText":"40af2acfserial_set_flow_control","filterText":"serial_set_flow_control","insertText":"serial_set_flow_control(${1:serial_t *obj}, ${2:FlowControl type}, ${3:PinName rxflow}, ${4:PinName txflow})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_set_flow_control(${1:serial_t *obj}, ${2:FlowControl type}, ${3:PinName rxflow}, ${4:PinName txflow})"}},{"label":" serial_set_flow_control_direct(serial_t *obj, FlowControl type, const serial_fc_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param pinmap Pointer to structure which holds static pinmap"},"sortText":"40af2acfserial_set_flow_control_direct","filterText":"serial_set_flow_control_direct","insertText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})"}},{"label":" serial_t","kind":8,"documentation":{"kind":"markdown","value":"Non-asynch serial HAL structure"},"sortText":"40af2acfserial_t","filterText":"serial_t","insertText":"serial_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_t"}},{"label":" serial_tx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial TX  \nReturn a PinMap array of pins that support Serial TX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_tx_pinmap","filterText":"serial_tx_pinmap","insertText":"serial_tx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_tx_pinmap()"}},{"label":" serial_writable(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Check if the serial peripheral is writable  \n@param obj The serial object  \n@return Non-zero value if a character can be written, 0 otherwise."},"sortText":"40af2acfserial_writable","filterText":"serial_writable","insertText":"serial_writable(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"serial_writable(${1:serial_t *obj})"}},{"label":" arduino::serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"XXX: Are we keeping the serialEvent API?"},"sortText":"40cdce88serialEventRun","filterText":"serialEventRun","insertText":"arduino::serialEventRun()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"arduino::serialEventRun()"}},{"label":" mbed::SerialBase","kind":7,"documentation":{"kind":"markdown","value":"A base class for serial port implementations Can't be instantiated directly (use UnbufferedSerial or BufferedSerial)  \n@note Synchronization level: Set by subclass"},"sortText":"40d1f902SerialBase","filterText":"SerialBase","insertText":"mbed::SerialBase","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"mbed::SerialBase"}},{"label":" mbed_serial","kind":8,"sortText":"40eb4dd7mbed_serial","filterText":"mbed_serial","insertText":"mbed_serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"mbed_serial"}},{"label":" getUniqueSerialNumber(uint8_t *name)","kind":3,"detail":"uint8_t","sortText":"40f8d266getUniqueSerialNumber","filterText":"getUniqueSerialNumber","insertText":"getUniqueSerialNumber(${1:uint8_t *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"getUniqueSerialNumber(${1:uint8_t *name})"}},{"label":" mbed_usb_serial","kind":8,"sortText":"40f8d266mbed_usb_serial","filterText":"mbed_usb_serial","insertText":"mbed_usb_serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"mbed_usb_serial"}},{"label":" arduino::USBSerial","kind":7,"sortText":"40fda58eUSBSerial","filterText":"USBSerial","insertText":"arduino::USBSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"arduino::USBSerial"}},{"label":" mbedtls_x509_serial_gets(char *buf, size_t size, const mbedtls_x509_buf *serial)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\brief Store the certificate serial in printable form into buf;  \nno more than size characters will be written.  \n\\\\param buf Buffer to write to  \n\\\\param size Maximum size of buffer  \n\\\\param serial The X509 serial to represent  \n\\\\return The length of the string written (not including the terminated nul byte), or a negative error code."},"sortText":"40fe2b1dmbedtls_x509_serial_gets","filterText":"mbedtls_x509_serial_gets","insertText":"mbedtls_x509_serial_gets(${1:char *buf}, ${2:size_t size}, ${3:const mbedtls_x509_buf *serial})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"mbedtls_x509_serial_gets(${1:char *buf}, ${2:size_t size}, ${3:const mbedtls_x509_buf *serial})"}},{"label":" arduino::HardwareSerial","kind":7,"sortText":"410afbfbHardwareSerial","filterText":"HardwareSerial","insertText":"arduino::HardwareSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"arduino::HardwareSerial"}},{"label":" mbed::BufferedSerial","kind":7,"documentation":{"kind":"markdown","value":"Class providing buffered UART communication functionality using separate circular buffer for send and receive channels"},"sortText":"4110b663BufferedSerial","filterText":"BufferedSerial","insertText":"mbed::BufferedSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"mbed::BufferedSerial"}},{"label":" mbed::UnbufferedSerial","kind":7,"documentation":{"kind":"markdown","value":"Class implementation for unbuffered I/O for an interrupt driven application or one that needs to have more control."},"sortText":"4110b663UnbufferedSerial","filterText":"UnbufferedSerial","insertText":"mbed::UnbufferedSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"mbed::UnbufferedSerial"}},{"label":" mbedtls_x509_get_serial(unsigned char **p, const unsigned char *end, mbedtls_x509_buf *serial)","kind":3,"detail":"int","sortText":"41164d9ambedtls_x509_get_serial","filterText":"mbedtls_x509_get_serial","insertText":"mbedtls_x509_get_serial(${1:unsigned char **p}, ${2:const unsigned char *end}, ${3:mbedtls_x509_buf *serial})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"mbedtls_x509_get_serial(${1:unsigned char **p}, ${2:const unsigned char *end}, ${3:mbedtls_x509_buf *serial})"}},{"label":" Serial","kind":1,"sortText":"413b6096Serial","filterText":"Serial","insertText":"Serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"Serial"}},{"label":" Serial1","kind":1,"sortText":"413b6096Serial1","filterText":"Serial1","insertText":"Serial1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"Serial1"}},{"label":" Serial2","kind":1,"sortText":"413b6096Serial2","filterText":"Serial2","insertText":"Serial2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"Serial2"}},{"label":" Serial3","kind":1,"sortText":"413b6096Serial3","filterText":"Serial3","insertText":"Serial3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"Serial3"}},{"label":" Serial4","kind":1,"sortText":"413b6096Serial4","filterText":"Serial4","insertText":"Serial4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"Serial4"}},{"label":" SerialHCI","kind":1,"sortText":"413b6096SerialHCI","filterText":"SerialHCI","insertText":"SerialHCI","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SerialHCI"}},{"label":" SerialNina","kind":1,"sortText":"413b6096SerialNina","filterText":"SerialNina","insertText":"SerialNina","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SerialNina"}},{"label":" SerialUSB","kind":1,"sortText":"413b6096SerialUSB","filterText":"SerialUSB","insertText":"SerialUSB","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SerialUSB"}},{"label":" SERIAL1_RX","kind":1,"sortText":"41603e79SERIAL1_RX","filterText":"SERIAL1_RX","insertText":"SERIAL1_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL1_RX"}},{"label":" SERIAL1_TX","kind":1,"sortText":"41603e79SERIAL1_TX","filterText":"SERIAL1_TX","insertText":"SERIAL1_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL1_TX"}},{"label":" SERIAL2_CTS","kind":1,"sortText":"41603e79SERIAL2_CTS","filterText":"SERIAL2_CTS","insertText":"SERIAL2_CTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL2_CTS"}},{"label":" SERIAL2_RTS","kind":1,"sortText":"41603e79SERIAL2_RTS","filterText":"SERIAL2_RTS","insertText":"SERIAL2_RTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL2_RTS"}},{"label":" SERIAL2_RX","kind":1,"sortText":"41603e79SERIAL2_RX","filterText":"SERIAL2_RX","insertText":"SERIAL2_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL2_RX"}},{"label":" SERIAL2_TX","kind":1,"sortText":"41603e79SERIAL2_TX","filterText":"SERIAL2_TX","insertText":"SERIAL2_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL2_TX"}},{"label":" SERIAL3_RX","kind":1,"sortText":"41603e79SERIAL3_RX","filterText":"SERIAL3_RX","insertText":"SERIAL3_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL3_RX"}},{"label":" SERIAL3_TX","kind":1,"sortText":"41603e79SERIAL3_TX","filterText":"SERIAL3_TX","insertText":"SERIAL3_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL3_TX"}},{"label":" SERIAL_CDC","kind":1,"sortText":"41603e79SERIAL_CDC","filterText":"SERIAL_CDC","insertText":"SERIAL_CDC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_CDC"}},{"label":" SERIAL_HOWMANY","kind":1,"sortText":"41603e79SERIAL_HOWMANY","filterText":"SERIAL_HOWMANY","insertText":"SERIAL_HOWMANY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_HOWMANY"}},{"label":" SERIAL_PORT_HARDWARE","kind":1,"sortText":"41603e79SERIAL_PORT_HARDWARE","filterText":"SERIAL_PORT_HARDWARE","insertText":"SERIAL_PORT_HARDWARE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_PORT_HARDWARE"}},{"label":" SERIAL_PORT_HARDWARE_OPEN","kind":1,"sortText":"41603e79SERIAL_PORT_HARDWARE_OPEN","filterText":"SERIAL_PORT_HARDWARE_OPEN","insertText":"SERIAL_PORT_HARDWARE_OPEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_PORT_HARDWARE_OPEN"}},{"label":" SERIAL_PORT_MONITOR","kind":1,"sortText":"41603e79SERIAL_PORT_MONITOR","filterText":"SERIAL_PORT_MONITOR","insertText":"SERIAL_PORT_MONITOR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_PORT_MONITOR"}},{"label":" SERIAL_PORT_USBVIRTUAL","kind":1,"sortText":"41603e79SERIAL_PORT_USBVIRTUAL","filterText":"SERIAL_PORT_USBVIRTUAL","insertText":"SERIAL_PORT_USBVIRTUAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_PORT_USBVIRTUAL"}},{"label":" SERIAL","kind":1,"sortText":"41620e56SERIAL","filterText":"SERIAL","insertText":"SERIAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL"}},{"label":" SERIAL_5E1","kind":1,"sortText":"41620e56SERIAL_5E1","filterText":"SERIAL_5E1","insertText":"SERIAL_5E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_5E1"}},{"label":" SERIAL_5E2","kind":1,"sortText":"41620e56SERIAL_5E2","filterText":"SERIAL_5E2","insertText":"SERIAL_5E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_5E2"}},{"label":" SERIAL_5M1","kind":1,"sortText":"41620e56SERIAL_5M1","filterText":"SERIAL_5M1","insertText":"SERIAL_5M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_5M1"}},{"label":" SERIAL_5M2","kind":1,"sortText":"41620e56SERIAL_5M2","filterText":"SERIAL_5M2","insertText":"SERIAL_5M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_5M2"}},{"label":" SERIAL_5N1","kind":1,"sortText":"41620e56SERIAL_5N1","filterText":"SERIAL_5N1","insertText":"SERIAL_5N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_5N1"}},{"label":" SERIAL_5N2","kind":1,"sortText":"41620e56SERIAL_5N2","filterText":"SERIAL_5N2","insertText":"SERIAL_5N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_5N2"}},{"label":" SERIAL_5O1","kind":1,"sortText":"41620e56SERIAL_5O1","filterText":"SERIAL_5O1","insertText":"SERIAL_5O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_5O1"}},{"label":" SERIAL_5O2","kind":1,"sortText":"41620e56SERIAL_5O2","filterText":"SERIAL_5O2","insertText":"SERIAL_5O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_5O2"}},{"label":" SERIAL_5S1","kind":1,"sortText":"41620e56SERIAL_5S1","filterText":"SERIAL_5S1","insertText":"SERIAL_5S1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_5S1"}},{"label":" SERIAL_5S2","kind":1,"sortText":"41620e56SERIAL_5S2","filterText":"SERIAL_5S2","insertText":"SERIAL_5S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_5S2"}},{"label":" SERIAL_6E1","kind":1,"sortText":"41620e56SERIAL_6E1","filterText":"SERIAL_6E1","insertText":"SERIAL_6E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_6E1"}},{"label":" SERIAL_6E2","kind":1,"sortText":"41620e56SERIAL_6E2","filterText":"SERIAL_6E2","insertText":"SERIAL_6E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_6E2"}},{"label":" SERIAL_6M1","kind":1,"sortText":"41620e56SERIAL_6M1","filterText":"SERIAL_6M1","insertText":"SERIAL_6M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_6M1"}},{"label":" SERIAL_6M2","kind":1,"sortText":"41620e56SERIAL_6M2","filterText":"SERIAL_6M2","insertText":"SERIAL_6M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_6M2"}},{"label":" SERIAL_6N1","kind":1,"sortText":"41620e56SERIAL_6N1","filterText":"SERIAL_6N1","insertText":"SERIAL_6N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_6N1"}},{"label":" SERIAL_6N2","kind":1,"sortText":"41620e56SERIAL_6N2","filterText":"SERIAL_6N2","insertText":"SERIAL_6N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_6N2"}},{"label":" SERIAL_6O1","kind":1,"sortText":"41620e56SERIAL_6O1","filterText":"SERIAL_6O1","insertText":"SERIAL_6O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_6O1"}},{"label":" SERIAL_6O2","kind":1,"sortText":"41620e56SERIAL_6O2","filterText":"SERIAL_6O2","insertText":"SERIAL_6O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_6O2"}},{"label":" SERIAL_6S1","kind":1,"sortText":"41620e56SERIAL_6S1","filterText":"SERIAL_6S1","insertText":"SERIAL_6S1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_6S1"}},{"label":" SERIAL_6S2","kind":1,"sortText":"41620e56SERIAL_6S2","filterText":"SERIAL_6S2","insertText":"SERIAL_6S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_6S2"}},{"label":" SERIAL_7E1","kind":1,"sortText":"41620e56SERIAL_7E1","filterText":"SERIAL_7E1","insertText":"SERIAL_7E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_7E1"}},{"label":" SERIAL_7E2","kind":1,"sortText":"41620e56SERIAL_7E2","filterText":"SERIAL_7E2","insertText":"SERIAL_7E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_7E2"}},{"label":" SERIAL_7M1","kind":1,"sortText":"41620e56SERIAL_7M1","filterText":"SERIAL_7M1","insertText":"SERIAL_7M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_7M1"}},{"label":" SERIAL_7M2","kind":1,"sortText":"41620e56SERIAL_7M2","filterText":"SERIAL_7M2","insertText":"SERIAL_7M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_7M2"}},{"label":" SERIAL_7N1","kind":1,"sortText":"41620e56SERIAL_7N1","filterText":"SERIAL_7N1","insertText":"SERIAL_7N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_7N1"}},{"label":" SERIAL_7N2","kind":1,"sortText":"41620e56SERIAL_7N2","filterText":"SERIAL_7N2","insertText":"SERIAL_7N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_7N2"}},{"label":" SERIAL_7O1","kind":1,"sortText":"41620e56SERIAL_7O1","filterText":"SERIAL_7O1","insertText":"SERIAL_7O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_7O1"}},{"label":" SERIAL_7O2","kind":1,"sortText":"41620e56SERIAL_7O2","filterText":"SERIAL_7O2","insertText":"SERIAL_7O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_7O2"}},{"label":" SERIAL_7S1","kind":1,"sortText":"41620e56SERIAL_7S1","filterText":"SERIAL_7S1","insertText":"SERIAL_7S1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_7S1"}},{"label":" SERIAL_7S2","kind":1,"sortText":"41620e56SERIAL_7S2","filterText":"SERIAL_7S2","insertText":"SERIAL_7S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_7S2"}},{"label":" SERIAL_8E1","kind":1,"sortText":"41620e56SERIAL_8E1","filterText":"SERIAL_8E1","insertText":"SERIAL_8E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_8E1"}},{"label":" SERIAL_8E2","kind":1,"sortText":"41620e56SERIAL_8E2","filterText":"SERIAL_8E2","insertText":"SERIAL_8E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_8E2"}},{"label":" SERIAL_8M1","kind":1,"sortText":"41620e56SERIAL_8M1","filterText":"SERIAL_8M1","insertText":"SERIAL_8M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_8M1"}},{"label":" SERIAL_8M2","kind":1,"sortText":"41620e56SERIAL_8M2","filterText":"SERIAL_8M2","insertText":"SERIAL_8M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_8M2"}},{"label":" SERIAL_8N1","kind":1,"sortText":"41620e56SERIAL_8N1","filterText":"SERIAL_8N1","insertText":"SERIAL_8N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_8N1"}},{"label":" SERIAL_8N2","kind":1,"sortText":"41620e56SERIAL_8N2","filterText":"SERIAL_8N2","insertText":"SERIAL_8N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_8N2"}},{"label":" SERIAL_8O1","kind":1,"sortText":"41620e56SERIAL_8O1","filterText":"SERIAL_8O1","insertText":"SERIAL_8O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_8O1"}},{"label":" SERIAL_8O2","kind":1,"sortText":"41620e56SERIAL_8O2","filterText":"SERIAL_8O2","insertText":"SERIAL_8O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"newText":"SERIAL_8O2"}}]},"jsonrpc":"2.0"}Content-Length: 399

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seria'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":147,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":148,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":7},"context":{"triggerKind":3}}}
>>>
Content-Length: 34476

{"id":148,"result":{"isIncomplete":true,"items":[{"label":" SerialIrq","kind":8,"documentation":{"kind":"markdown","value":"Serial interrupt sources"},"sortText":"40af2acfSerialIrq","filterText":"SerialIrq","insertText":"SerialIrq","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SerialIrq"}},{"label":" SerialParity","kind":8,"sortText":"40af2acfSerialParity","filterText":"SerialParity","insertText":"SerialParity","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SerialParity"}},{"label":" serial_baud(serial_t *obj, int baudrate)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the baud rate  \n@param obj The serial object  \n@param baudrate The baud rate to be configured"},"sortText":"40af2acfserial_baud","filterText":"serial_baud","insertText":"serial_baud(${1:serial_t *obj}, ${2:int baudrate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_baud(${1:serial_t *obj}, ${2:int baudrate})"}},{"label":" serial_break_clear(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the break  \n@param obj The serial object"},"sortText":"40af2acfserial_break_clear","filterText":"serial_break_clear","insertText":"serial_break_clear(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_break_clear(${1:serial_t *obj})"}},{"label":" serial_break_set(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the break  \n@param obj The serial object"},"sortText":"40af2acfserial_break_set","filterText":"serial_break_set","insertText":"serial_break_set(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_break_set(${1:serial_t *obj})"}},{"label":" serial_clear(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the serial peripheral  \n@param obj The serial object"},"sortText":"40af2acfserial_clear","filterText":"serial_clear","insertText":"serial_clear(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_clear(${1:serial_t *obj})"}},{"label":" serial_cts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial CTS  \nReturn a PinMap array of pins that support Serial CTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_cts_pinmap","filterText":"serial_cts_pinmap","insertText":"serial_cts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_cts_pinmap()"}},{"label":" serial_fc_pinmap_t","kind":8,"sortText":"40af2acfserial_fc_pinmap_t","filterText":"serial_fc_pinmap_t","insertText":"serial_fc_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_fc_pinmap_t"}},{"label":" serial_format(serial_t *obj, int data_bits, SerialParity parity, int stop_bits)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the format. Set the number of bits, parity and the number of stop bits  \n@param obj The serial object  \n@param data_bits The number of data bits  \n@param parity The parity  \n@param stop_bits The number of stop bits"},"sortText":"40af2acfserial_format","filterText":"serial_format","insertText":"serial_format(${1:serial_t *obj}, ${2:int data_bits}, ${3:SerialParity parity}, ${4:int stop_bits})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_format(${1:serial_t *obj}, ${2:int data_bits}, ${3:SerialParity parity}, ${4:int stop_bits})"}},{"label":" serial_free(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Release the serial peripheral, not currently invoked. It requires further resource management.  \n@param obj The serial object"},"sortText":"40af2acfserial_free","filterText":"serial_free","insertText":"serial_free(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_free(${1:serial_t *obj})"}},{"label":" serial_getc(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Get character. This is a blocking call, waiting for a character  \n@param obj The serial object"},"sortText":"40af2acfserial_getc","filterText":"serial_getc","insertText":"serial_getc(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_getc(${1:serial_t *obj})"}},{"label":" serial_init(serial_t *obj, PinName tx, PinName rx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Initialize the serial peripheral. It sets the default parameters for serial peripheral, and configures its specifieds pins.  \n@param obj The serial object  \n@param tx The TX pin name  \n@param rx The RX pin name"},"sortText":"40af2acfserial_init","filterText":"serial_init","insertText":"serial_init(${1:serial_t *obj}, ${2:PinName tx}, ${3:PinName rx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_init(${1:serial_t *obj}, ${2:PinName tx}, ${3:PinName rx})"}},{"label":" serial_init_direct(serial_t *obj, const serial_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Initialize the serial peripheral. It sets the default parameters for serial peripheral, and configures its specifieds pins.  \n@param obj The serial object  \n@param pinmap pointer to structure which holds static pinmap"},"sortText":"40af2acfserial_init_direct","filterText":"serial_init_direct","insertText":"serial_init_direct(${1:serial_t *obj}, ${2:const serial_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_init_direct(${1:serial_t *obj}, ${2:const serial_pinmap_t *pinmap})"}},{"label":" serial_irq_handler(serial_t *obj, uart_irq_handler handler, uint32_t id)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The serial interrupt handler registration  \n@param obj The serial object  \n@param handler The interrupt handler which will be invoked when the interrupt fires  \n@param id The SerialBase object"},"sortText":"40af2acfserial_irq_handler","filterText":"serial_irq_handler","insertText":"serial_irq_handler(${1:serial_t *obj}, ${2:uart_irq_handler handler}, ${3:uint32_t id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_irq_handler(${1:serial_t *obj}, ${2:uart_irq_handler handler}, ${3:uint32_t id})"}},{"label":" serial_irq_set(serial_t *obj, SerialIrq irq, uint32_t enable)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure serial interrupt. This function is used for word-approach  \n@param obj The serial object  \n@param irq The serial IRQ type (RX or TX)  \n@param enable Set to non-zero to enable events, or zero to disable them"},"sortText":"40af2acfserial_irq_set","filterText":"serial_irq_set","insertText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})"}},{"label":" serial_pinmap_t","kind":8,"sortText":"40af2acfserial_pinmap_t","filterText":"serial_pinmap_t","insertText":"serial_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_pinmap_t"}},{"label":" serial_pinout_tx(PinName tx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the TX pin for UART function.  \n@param tx The pin name used for TX"},"sortText":"40af2acfserial_pinout_tx","filterText":"serial_pinout_tx","insertText":"serial_pinout_tx(${1:PinName tx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_pinout_tx(${1:PinName tx})"}},{"label":" serial_putc(serial_t *obj, int c)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Send a character. This is a blocking call, waiting for a peripheral to be available for writing  \n@param obj The serial object  \n@param c The character to be sent"},"sortText":"40af2acfserial_putc","filterText":"serial_putc","insertText":"serial_putc(${1:serial_t *obj}, ${2:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_putc(${1:serial_t *obj}, ${2:int c})"}},{"label":" serial_readable(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Check if the serial peripheral is readable  \n@param obj The serial object  \n@return Non-zero value if a character can be read, 0 if nothing to read"},"sortText":"40af2acfserial_readable","filterText":"serial_readable","insertText":"serial_readable(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_readable(${1:serial_t *obj})"}},{"label":" serial_rts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial RTS  \nReturn a PinMap array of pins that support Serial RTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_rts_pinmap","filterText":"serial_rts_pinmap","insertText":"serial_rts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_rts_pinmap()"}},{"label":" serial_rx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial RX  \nReturn a PinMap array of pins that support Serial RX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_rx_pinmap","filterText":"serial_rx_pinmap","insertText":"serial_rx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_rx_pinmap()"}},{"label":" serial_s","kind":22,"sortText":"40af2acfserial_s","filterText":"serial_s","insertText":"serial_s","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_s"}},{"label":" serial_set_flow_control(serial_t *obj, FlowControl type, PinName rxflow, PinName txflow)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param rxflow The TX pin name  \n@param txflow The RX pin name"},"sortText":"40af2acfserial_set_flow_control","filterText":"serial_set_flow_control","insertText":"serial_set_flow_control(${1:serial_t *obj}, ${2:FlowControl type}, ${3:PinName rxflow}, ${4:PinName txflow})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_set_flow_control(${1:serial_t *obj}, ${2:FlowControl type}, ${3:PinName rxflow}, ${4:PinName txflow})"}},{"label":" serial_set_flow_control_direct(serial_t *obj, FlowControl type, const serial_fc_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param pinmap Pointer to structure which holds static pinmap"},"sortText":"40af2acfserial_set_flow_control_direct","filterText":"serial_set_flow_control_direct","insertText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})"}},{"label":" serial_t","kind":8,"documentation":{"kind":"markdown","value":"Non-asynch serial HAL structure"},"sortText":"40af2acfserial_t","filterText":"serial_t","insertText":"serial_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_t"}},{"label":" serial_tx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial TX  \nReturn a PinMap array of pins that support Serial TX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_tx_pinmap","filterText":"serial_tx_pinmap","insertText":"serial_tx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_tx_pinmap()"}},{"label":" serial_writable(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Check if the serial peripheral is writable  \n@param obj The serial object  \n@return Non-zero value if a character can be written, 0 otherwise."},"sortText":"40af2acfserial_writable","filterText":"serial_writable","insertText":"serial_writable(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"serial_writable(${1:serial_t *obj})"}},{"label":" arduino::serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"XXX: Are we keeping the serialEvent API?"},"sortText":"40cdce88serialEventRun","filterText":"serialEventRun","insertText":"arduino::serialEventRun()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"arduino::serialEventRun()"}},{"label":" mbed::SerialBase","kind":7,"documentation":{"kind":"markdown","value":"A base class for serial port implementations Can't be instantiated directly (use UnbufferedSerial or BufferedSerial)  \n@note Synchronization level: Set by subclass"},"sortText":"40d1f902SerialBase","filterText":"SerialBase","insertText":"mbed::SerialBase","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"mbed::SerialBase"}},{"label":" mbed_serial","kind":8,"sortText":"40ddc948mbed_serial","filterText":"mbed_serial","insertText":"mbed_serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"mbed_serial"}},{"label":" getUniqueSerialNumber(uint8_t *name)","kind":3,"detail":"uint8_t","sortText":"40e899bbgetUniqueSerialNumber","filterText":"getUniqueSerialNumber","insertText":"getUniqueSerialNumber(${1:uint8_t *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"getUniqueSerialNumber(${1:uint8_t *name})"}},{"label":" mbed_usb_serial","kind":8,"sortText":"40e899bbmbed_usb_serial","filterText":"mbed_usb_serial","insertText":"mbed_usb_serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"mbed_usb_serial"}},{"label":" mbedtls_x509_serial_gets(char *buf, size_t size, const mbedtls_x509_buf *serial)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\brief Store the certificate serial in printable form into buf;  \nno more than size characters will be written.  \n\\\\param buf Buffer to write to  \n\\\\param size Maximum size of buffer  \n\\\\param serial The X509 serial to represent  \n\\\\return The length of the string written (not including the terminated nul byte), or a negative error code."},"sortText":"40ee96b0mbedtls_x509_serial_gets","filterText":"mbedtls_x509_serial_gets","insertText":"mbedtls_x509_serial_gets(${1:char *buf}, ${2:size_t size}, ${3:const mbedtls_x509_buf *serial})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"mbedtls_x509_serial_gets(${1:char *buf}, ${2:size_t size}, ${3:const mbedtls_x509_buf *serial})"}},{"label":" arduino::USBSerial","kind":7,"sortText":"40f1cbe1USBSerial","filterText":"USBSerial","insertText":"arduino::USBSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"arduino::USBSerial"}},{"label":" mbedtls_x509_get_serial(unsigned char **p, const unsigned char *end, mbedtls_x509_buf *serial)","kind":3,"detail":"int","sortText":"40f8f9a3mbedtls_x509_get_serial","filterText":"mbedtls_x509_get_serial","insertText":"mbedtls_x509_get_serial(${1:unsigned char **p}, ${2:const unsigned char *end}, ${3:mbedtls_x509_buf *serial})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"mbedtls_x509_get_serial(${1:unsigned char **p}, ${2:const unsigned char *end}, ${3:mbedtls_x509_buf *serial})"}},{"label":" arduino::HardwareSerial","kind":7,"sortText":"40fa5ae6HardwareSerial","filterText":"HardwareSerial","insertText":"arduino::HardwareSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"arduino::HardwareSerial"}},{"label":" mbed::BufferedSerial","kind":7,"documentation":{"kind":"markdown","value":"Class providing buffered UART communication functionality using separate circular buffer for send and receive channels"},"sortText":"40fd7ac2BufferedSerial","filterText":"BufferedSerial","insertText":"mbed::BufferedSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"mbed::BufferedSerial"}},{"label":" mbed::UnbufferedSerial","kind":7,"documentation":{"kind":"markdown","value":"Class implementation for unbuffered I/O for an interrupt driven application or one that needs to have more control."},"sortText":"40fd7ac2UnbufferedSerial","filterText":"UnbufferedSerial","insertText":"mbed::UnbufferedSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"mbed::UnbufferedSerial"}},{"label":" Serial","kind":1,"sortText":"413b6096Serial","filterText":"Serial","insertText":"Serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"Serial"}},{"label":" Serial1","kind":1,"sortText":"413b6096Serial1","filterText":"Serial1","insertText":"Serial1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"Serial1"}},{"label":" Serial2","kind":1,"sortText":"413b6096Serial2","filterText":"Serial2","insertText":"Serial2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"Serial2"}},{"label":" Serial3","kind":1,"sortText":"413b6096Serial3","filterText":"Serial3","insertText":"Serial3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"Serial3"}},{"label":" Serial4","kind":1,"sortText":"413b6096Serial4","filterText":"Serial4","insertText":"Serial4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"Serial4"}},{"label":" SerialHCI","kind":1,"sortText":"413b6096SerialHCI","filterText":"SerialHCI","insertText":"SerialHCI","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SerialHCI"}},{"label":" SerialNina","kind":1,"sortText":"413b6096SerialNina","filterText":"SerialNina","insertText":"SerialNina","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SerialNina"}},{"label":" SerialUSB","kind":1,"sortText":"413b6096SerialUSB","filterText":"SerialUSB","insertText":"SerialUSB","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SerialUSB"}},{"label":" MBED_MODULE_DRIVER_SERIAL","kind":20,"detail":"_mbed_module_type","sortText":"41440cedMBED_MODULE_DRIVER_SERIAL","filterText":"MBED_MODULE_DRIVER_SERIAL","insertText":"MBED_MODULE_DRIVER_SERIAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"MBED_MODULE_DRIVER_SERIAL"}},{"label":" SERIAL1_RX","kind":1,"sortText":"4162b3abSERIAL1_RX","filterText":"SERIAL1_RX","insertText":"SERIAL1_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL1_RX"}},{"label":" SERIAL1_TX","kind":1,"sortText":"4162b3abSERIAL1_TX","filterText":"SERIAL1_TX","insertText":"SERIAL1_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL1_TX"}},{"label":" SERIAL2_CTS","kind":1,"sortText":"4162b3abSERIAL2_CTS","filterText":"SERIAL2_CTS","insertText":"SERIAL2_CTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL2_CTS"}},{"label":" SERIAL2_RTS","kind":1,"sortText":"4162b3abSERIAL2_RTS","filterText":"SERIAL2_RTS","insertText":"SERIAL2_RTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL2_RTS"}},{"label":" SERIAL2_RX","kind":1,"sortText":"4162b3abSERIAL2_RX","filterText":"SERIAL2_RX","insertText":"SERIAL2_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL2_RX"}},{"label":" SERIAL2_TX","kind":1,"sortText":"4162b3abSERIAL2_TX","filterText":"SERIAL2_TX","insertText":"SERIAL2_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL2_TX"}},{"label":" SERIAL3_RX","kind":1,"sortText":"4162b3abSERIAL3_RX","filterText":"SERIAL3_RX","insertText":"SERIAL3_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL3_RX"}},{"label":" SERIAL3_TX","kind":1,"sortText":"4162b3abSERIAL3_TX","filterText":"SERIAL3_TX","insertText":"SERIAL3_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL3_TX"}},{"label":" SERIAL_CDC","kind":1,"sortText":"4162b3abSERIAL_CDC","filterText":"SERIAL_CDC","insertText":"SERIAL_CDC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_CDC"}},{"label":" SERIAL_HOWMANY","kind":1,"sortText":"4162b3abSERIAL_HOWMANY","filterText":"SERIAL_HOWMANY","insertText":"SERIAL_HOWMANY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_HOWMANY"}},{"label":" SERIAL_PORT_HARDWARE","kind":1,"sortText":"4162b3abSERIAL_PORT_HARDWARE","filterText":"SERIAL_PORT_HARDWARE","insertText":"SERIAL_PORT_HARDWARE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_PORT_HARDWARE"}},{"label":" SERIAL_PORT_HARDWARE_OPEN","kind":1,"sortText":"4162b3abSERIAL_PORT_HARDWARE_OPEN","filterText":"SERIAL_PORT_HARDWARE_OPEN","insertText":"SERIAL_PORT_HARDWARE_OPEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_PORT_HARDWARE_OPEN"}},{"label":" SERIAL_PORT_MONITOR","kind":1,"sortText":"4162b3abSERIAL_PORT_MONITOR","filterText":"SERIAL_PORT_MONITOR","insertText":"SERIAL_PORT_MONITOR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_PORT_MONITOR"}},{"label":" SERIAL_PORT_USBVIRTUAL","kind":1,"sortText":"4162b3abSERIAL_PORT_USBVIRTUAL","filterText":"SERIAL_PORT_USBVIRTUAL","insertText":"SERIAL_PORT_USBVIRTUAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_PORT_USBVIRTUAL"}},{"label":" SERIAL","kind":1,"sortText":"41647c64SERIAL","filterText":"SERIAL","insertText":"SERIAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL"}},{"label":" SERIAL_5E1","kind":1,"sortText":"41647c64SERIAL_5E1","filterText":"SERIAL_5E1","insertText":"SERIAL_5E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_5E1"}},{"label":" SERIAL_5E2","kind":1,"sortText":"41647c64SERIAL_5E2","filterText":"SERIAL_5E2","insertText":"SERIAL_5E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_5E2"}},{"label":" SERIAL_5M1","kind":1,"sortText":"41647c64SERIAL_5M1","filterText":"SERIAL_5M1","insertText":"SERIAL_5M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_5M1"}},{"label":" SERIAL_5M2","kind":1,"sortText":"41647c64SERIAL_5M2","filterText":"SERIAL_5M2","insertText":"SERIAL_5M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_5M2"}},{"label":" SERIAL_5N1","kind":1,"sortText":"41647c64SERIAL_5N1","filterText":"SERIAL_5N1","insertText":"SERIAL_5N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_5N1"}},{"label":" SERIAL_5N2","kind":1,"sortText":"41647c64SERIAL_5N2","filterText":"SERIAL_5N2","insertText":"SERIAL_5N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_5N2"}},{"label":" SERIAL_5O1","kind":1,"sortText":"41647c64SERIAL_5O1","filterText":"SERIAL_5O1","insertText":"SERIAL_5O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_5O1"}},{"label":" SERIAL_5O2","kind":1,"sortText":"41647c64SERIAL_5O2","filterText":"SERIAL_5O2","insertText":"SERIAL_5O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_5O2"}},{"label":" SERIAL_5S1","kind":1,"sortText":"41647c64SERIAL_5S1","filterText":"SERIAL_5S1","insertText":"SERIAL_5S1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_5S1"}},{"label":" SERIAL_5S2","kind":1,"sortText":"41647c64SERIAL_5S2","filterText":"SERIAL_5S2","insertText":"SERIAL_5S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_5S2"}},{"label":" SERIAL_6E1","kind":1,"sortText":"41647c64SERIAL_6E1","filterText":"SERIAL_6E1","insertText":"SERIAL_6E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_6E1"}},{"label":" SERIAL_6E2","kind":1,"sortText":"41647c64SERIAL_6E2","filterText":"SERIAL_6E2","insertText":"SERIAL_6E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_6E2"}},{"label":" SERIAL_6M1","kind":1,"sortText":"41647c64SERIAL_6M1","filterText":"SERIAL_6M1","insertText":"SERIAL_6M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_6M1"}},{"label":" SERIAL_6M2","kind":1,"sortText":"41647c64SERIAL_6M2","filterText":"SERIAL_6M2","insertText":"SERIAL_6M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_6M2"}},{"label":" SERIAL_6N1","kind":1,"sortText":"41647c64SERIAL_6N1","filterText":"SERIAL_6N1","insertText":"SERIAL_6N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_6N1"}},{"label":" SERIAL_6N2","kind":1,"sortText":"41647c64SERIAL_6N2","filterText":"SERIAL_6N2","insertText":"SERIAL_6N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_6N2"}},{"label":" SERIAL_6O1","kind":1,"sortText":"41647c64SERIAL_6O1","filterText":"SERIAL_6O1","insertText":"SERIAL_6O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_6O1"}},{"label":" SERIAL_6O2","kind":1,"sortText":"41647c64SERIAL_6O2","filterText":"SERIAL_6O2","insertText":"SERIAL_6O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_6O2"}},{"label":" SERIAL_6S1","kind":1,"sortText":"41647c64SERIAL_6S1","filterText":"SERIAL_6S1","insertText":"SERIAL_6S1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_6S1"}},{"label":" SERIAL_6S2","kind":1,"sortText":"41647c64SERIAL_6S2","filterText":"SERIAL_6S2","insertText":"SERIAL_6S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_6S2"}},{"label":" SERIAL_7E1","kind":1,"sortText":"41647c64SERIAL_7E1","filterText":"SERIAL_7E1","insertText":"SERIAL_7E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_7E1"}},{"label":" SERIAL_7E2","kind":1,"sortText":"41647c64SERIAL_7E2","filterText":"SERIAL_7E2","insertText":"SERIAL_7E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_7E2"}},{"label":" SERIAL_7M1","kind":1,"sortText":"41647c64SERIAL_7M1","filterText":"SERIAL_7M1","insertText":"SERIAL_7M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_7M1"}},{"label":" SERIAL_7M2","kind":1,"sortText":"41647c64SERIAL_7M2","filterText":"SERIAL_7M2","insertText":"SERIAL_7M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_7M2"}},{"label":" SERIAL_7N1","kind":1,"sortText":"41647c64SERIAL_7N1","filterText":"SERIAL_7N1","insertText":"SERIAL_7N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_7N1"}},{"label":" SERIAL_7N2","kind":1,"sortText":"41647c64SERIAL_7N2","filterText":"SERIAL_7N2","insertText":"SERIAL_7N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_7N2"}},{"label":" SERIAL_7O1","kind":1,"sortText":"41647c64SERIAL_7O1","filterText":"SERIAL_7O1","insertText":"SERIAL_7O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_7O1"}},{"label":" SERIAL_7O2","kind":1,"sortText":"41647c64SERIAL_7O2","filterText":"SERIAL_7O2","insertText":"SERIAL_7O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_7O2"}},{"label":" SERIAL_7S1","kind":1,"sortText":"41647c64SERIAL_7S1","filterText":"SERIAL_7S1","insertText":"SERIAL_7S1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_7S1"}},{"label":" SERIAL_7S2","kind":1,"sortText":"41647c64SERIAL_7S2","filterText":"SERIAL_7S2","insertText":"SERIAL_7S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_7S2"}},{"label":" SERIAL_8E1","kind":1,"sortText":"41647c64SERIAL_8E1","filterText":"SERIAL_8E1","insertText":"SERIAL_8E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_8E1"}},{"label":" SERIAL_8E2","kind":1,"sortText":"41647c64SERIAL_8E2","filterText":"SERIAL_8E2","insertText":"SERIAL_8E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_8E2"}},{"label":" SERIAL_8M1","kind":1,"sortText":"41647c64SERIAL_8M1","filterText":"SERIAL_8M1","insertText":"SERIAL_8M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_8M1"}},{"label":" SERIAL_8M2","kind":1,"sortText":"41647c64SERIAL_8M2","filterText":"SERIAL_8M2","insertText":"SERIAL_8M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_8M2"}},{"label":" SERIAL_8N1","kind":1,"sortText":"41647c64SERIAL_8N1","filterText":"SERIAL_8N1","insertText":"SERIAL_8N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_8N1"}},{"label":" SERIAL_8N2","kind":1,"sortText":"41647c64SERIAL_8N2","filterText":"SERIAL_8N2","insertText":"SERIAL_8N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_8N2"}},{"label":" SERIAL_8O1","kind":1,"sortText":"41647c64SERIAL_8O1","filterText":"SERIAL_8O1","insertText":"SERIAL_8O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"newText":"SERIAL_8O1"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":72},"contentChanges":[{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":7}},"rangeLength":0,"text":"l"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":149,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":149,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":150,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":8},"context":{"triggerKind":3}}}
>>>
Content-Length: 34476

{"id":150,"result":{"isIncomplete":true,"items":[{"label":" SerialIrq","kind":8,"documentation":{"kind":"markdown","value":"Serial interrupt sources"},"sortText":"40af2acfSerialIrq","filterText":"SerialIrq","insertText":"SerialIrq","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SerialIrq"}},{"label":" SerialParity","kind":8,"sortText":"40af2acfSerialParity","filterText":"SerialParity","insertText":"SerialParity","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SerialParity"}},{"label":" serial_baud(serial_t *obj, int baudrate)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the baud rate  \n@param obj The serial object  \n@param baudrate The baud rate to be configured"},"sortText":"40af2acfserial_baud","filterText":"serial_baud","insertText":"serial_baud(${1:serial_t *obj}, ${2:int baudrate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_baud(${1:serial_t *obj}, ${2:int baudrate})"}},{"label":" serial_break_clear(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the break  \n@param obj The serial object"},"sortText":"40af2acfserial_break_clear","filterText":"serial_break_clear","insertText":"serial_break_clear(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_break_clear(${1:serial_t *obj})"}},{"label":" serial_break_set(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the break  \n@param obj The serial object"},"sortText":"40af2acfserial_break_set","filterText":"serial_break_set","insertText":"serial_break_set(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_break_set(${1:serial_t *obj})"}},{"label":" serial_clear(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the serial peripheral  \n@param obj The serial object"},"sortText":"40af2acfserial_clear","filterText":"serial_clear","insertText":"serial_clear(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_clear(${1:serial_t *obj})"}},{"label":" serial_cts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial CTS  \nReturn a PinMap array of pins that support Serial CTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_cts_pinmap","filterText":"serial_cts_pinmap","insertText":"serial_cts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_cts_pinmap()"}},{"label":" serial_fc_pinmap_t","kind":8,"sortText":"40af2acfserial_fc_pinmap_t","filterText":"serial_fc_pinmap_t","insertText":"serial_fc_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_fc_pinmap_t"}},{"label":" serial_format(serial_t *obj, int data_bits, SerialParity parity, int stop_bits)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the format. Set the number of bits, parity and the number of stop bits  \n@param obj The serial object  \n@param data_bits The number of data bits  \n@param parity The parity  \n@param stop_bits The number of stop bits"},"sortText":"40af2acfserial_format","filterText":"serial_format","insertText":"serial_format(${1:serial_t *obj}, ${2:int data_bits}, ${3:SerialParity parity}, ${4:int stop_bits})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_format(${1:serial_t *obj}, ${2:int data_bits}, ${3:SerialParity parity}, ${4:int stop_bits})"}},{"label":" serial_free(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Release the serial peripheral, not currently invoked. It requires further resource management.  \n@param obj The serial object"},"sortText":"40af2acfserial_free","filterText":"serial_free","insertText":"serial_free(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_free(${1:serial_t *obj})"}},{"label":" serial_getc(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Get character. This is a blocking call, waiting for a character  \n@param obj The serial object"},"sortText":"40af2acfserial_getc","filterText":"serial_getc","insertText":"serial_getc(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_getc(${1:serial_t *obj})"}},{"label":" serial_init(serial_t *obj, PinName tx, PinName rx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Initialize the serial peripheral. It sets the default parameters for serial peripheral, and configures its specifieds pins.  \n@param obj The serial object  \n@param tx The TX pin name  \n@param rx The RX pin name"},"sortText":"40af2acfserial_init","filterText":"serial_init","insertText":"serial_init(${1:serial_t *obj}, ${2:PinName tx}, ${3:PinName rx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_init(${1:serial_t *obj}, ${2:PinName tx}, ${3:PinName rx})"}},{"label":" serial_init_direct(serial_t *obj, const serial_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Initialize the serial peripheral. It sets the default parameters for serial peripheral, and configures its specifieds pins.  \n@param obj The serial object  \n@param pinmap pointer to structure which holds static pinmap"},"sortText":"40af2acfserial_init_direct","filterText":"serial_init_direct","insertText":"serial_init_direct(${1:serial_t *obj}, ${2:const serial_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_init_direct(${1:serial_t *obj}, ${2:const serial_pinmap_t *pinmap})"}},{"label":" serial_irq_handler(serial_t *obj, uart_irq_handler handler, uint32_t id)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The serial interrupt handler registration  \n@param obj The serial object  \n@param handler The interrupt handler which will be invoked when the interrupt fires  \n@param id The SerialBase object"},"sortText":"40af2acfserial_irq_handler","filterText":"serial_irq_handler","insertText":"serial_irq_handler(${1:serial_t *obj}, ${2:uart_irq_handler handler}, ${3:uint32_t id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_irq_handler(${1:serial_t *obj}, ${2:uart_irq_handler handler}, ${3:uint32_t id})"}},{"label":" serial_irq_set(serial_t *obj, SerialIrq irq, uint32_t enable)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure serial interrupt. This function is used for word-approach  \n@param obj The serial object  \n@param irq The serial IRQ type (RX or TX)  \n@param enable Set to non-zero to enable events, or zero to disable them"},"sortText":"40af2acfserial_irq_set","filterText":"serial_irq_set","insertText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})"}},{"label":" serial_pinmap_t","kind":8,"sortText":"40af2acfserial_pinmap_t","filterText":"serial_pinmap_t","insertText":"serial_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_pinmap_t"}},{"label":" serial_pinout_tx(PinName tx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the TX pin for UART function.  \n@param tx The pin name used for TX"},"sortText":"40af2acfserial_pinout_tx","filterText":"serial_pinout_tx","insertText":"serial_pinout_tx(${1:PinName tx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_pinout_tx(${1:PinName tx})"}},{"label":" serial_putc(serial_t *obj, int c)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Send a character. This is a blocking call, waiting for a peripheral to be available for writing  \n@param obj The serial object  \n@param c The character to be sent"},"sortText":"40af2acfserial_putc","filterText":"serial_putc","insertText":"serial_putc(${1:serial_t *obj}, ${2:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_putc(${1:serial_t *obj}, ${2:int c})"}},{"label":" serial_readable(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Check if the serial peripheral is readable  \n@param obj The serial object  \n@return Non-zero value if a character can be read, 0 if nothing to read"},"sortText":"40af2acfserial_readable","filterText":"serial_readable","insertText":"serial_readable(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_readable(${1:serial_t *obj})"}},{"label":" serial_rts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial RTS  \nReturn a PinMap array of pins that support Serial RTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_rts_pinmap","filterText":"serial_rts_pinmap","insertText":"serial_rts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_rts_pinmap()"}},{"label":" serial_rx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial RX  \nReturn a PinMap array of pins that support Serial RX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_rx_pinmap","filterText":"serial_rx_pinmap","insertText":"serial_rx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_rx_pinmap()"}},{"label":" serial_s","kind":22,"sortText":"40af2acfserial_s","filterText":"serial_s","insertText":"serial_s","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_s"}},{"label":" serial_set_flow_control(serial_t *obj, FlowControl type, PinName rxflow, PinName txflow)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param rxflow The TX pin name  \n@param txflow The RX pin name"},"sortText":"40af2acfserial_set_flow_control","filterText":"serial_set_flow_control","insertText":"serial_set_flow_control(${1:serial_t *obj}, ${2:FlowControl type}, ${3:PinName rxflow}, ${4:PinName txflow})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_set_flow_control(${1:serial_t *obj}, ${2:FlowControl type}, ${3:PinName rxflow}, ${4:PinName txflow})"}},{"label":" serial_set_flow_control_direct(serial_t *obj, FlowControl type, const serial_fc_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param pinmap Pointer to structure which holds static pinmap"},"sortText":"40af2acfserial_set_flow_control_direct","filterText":"serial_set_flow_control_direct","insertText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})"}},{"label":" serial_t","kind":8,"documentation":{"kind":"markdown","value":"Non-asynch serial HAL structure"},"sortText":"40af2acfserial_t","filterText":"serial_t","insertText":"serial_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_t"}},{"label":" serial_tx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support Serial TX  \nReturn a PinMap array of pins that support Serial TX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40af2acfserial_tx_pinmap","filterText":"serial_tx_pinmap","insertText":"serial_tx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_tx_pinmap()"}},{"label":" serial_writable(serial_t *obj)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Check if the serial peripheral is writable  \n@param obj The serial object  \n@return Non-zero value if a character can be written, 0 otherwise."},"sortText":"40af2acfserial_writable","filterText":"serial_writable","insertText":"serial_writable(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"serial_writable(${1:serial_t *obj})"}},{"label":" Serial","kind":1,"sortText":"40bb6096Serial","filterText":"Serial","insertText":"Serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"Serial"}},{"label":" arduino::serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"XXX: Are we keeping the serialEvent API?"},"sortText":"40cdce88serialEventRun","filterText":"serialEventRun","insertText":"arduino::serialEventRun()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"arduino::serialEventRun()"}},{"label":" mbed::SerialBase","kind":7,"documentation":{"kind":"markdown","value":"A base class for serial port implementations Can't be instantiated directly (use UnbufferedSerial or BufferedSerial)  \n@note Synchronization level: Set by subclass"},"sortText":"40d1f902SerialBase","filterText":"SerialBase","insertText":"mbed::SerialBase","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"mbed::SerialBase"}},{"label":" mbed_serial","kind":8,"sortText":"40d4c63embed_serial","filterText":"mbed_serial","insertText":"mbed_serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"mbed_serial"}},{"label":" getUniqueSerialNumber(uint8_t *name)","kind":3,"detail":"uint8_t","sortText":"40ddc948getUniqueSerialNumber","filterText":"getUniqueSerialNumber","insertText":"getUniqueSerialNumber(${1:uint8_t *name})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"getUniqueSerialNumber(${1:uint8_t *name})"}},{"label":" mbed_usb_serial","kind":8,"sortText":"40ddc948mbed_usb_serial","filterText":"mbed_usb_serial","insertText":"mbed_usb_serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"mbed_usb_serial"}},{"label":" mbedtls_x509_serial_gets(char *buf, size_t size, const mbedtls_x509_buf *serial)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\brief Store the certificate serial in printable form into buf;  \nno more than size characters will be written.  \n\\\\param buf Buffer to write to  \n\\\\param size Maximum size of buffer  \n\\\\param serial The X509 serial to represent  \n\\\\return The length of the string written (not including the terminated nul byte), or a negative error code."},"sortText":"40e433bdmbedtls_x509_serial_gets","filterText":"mbedtls_x509_serial_gets","insertText":"mbedtls_x509_serial_gets(${1:char *buf}, ${2:size_t size}, ${3:const mbedtls_x509_buf *serial})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"mbedtls_x509_serial_gets(${1:char *buf}, ${2:size_t size}, ${3:const mbedtls_x509_buf *serial})"}},{"label":" SERIAL","kind":1,"sortText":"40e61b18SERIAL","filterText":"SERIAL","insertText":"SERIAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL"}},{"label":" arduino::USBSerial","kind":7,"sortText":"40e9e56eUSBSerial","filterText":"USBSerial","insertText":"arduino::USBSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"arduino::USBSerial"}},{"label":" mbedtls_x509_get_serial(unsigned char **p, const unsigned char *end, mbedtls_x509_buf *serial)","kind":3,"detail":"int","sortText":"40ecdb87mbedtls_x509_get_serial","filterText":"mbedtls_x509_get_serial","insertText":"mbedtls_x509_get_serial(${1:unsigned char **p}, ${2:const unsigned char *end}, ${3:mbedtls_x509_buf *serial})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"mbedtls_x509_get_serial(${1:unsigned char **p}, ${2:const unsigned char *end}, ${3:mbedtls_x509_buf *serial})"}},{"label":" arduino::HardwareSerial","kind":7,"sortText":"40f2ee2bHardwareSerial","filterText":"HardwareSerial","insertText":"arduino::HardwareSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"arduino::HardwareSerial"}},{"label":" mbed::BufferedSerial","kind":7,"documentation":{"kind":"markdown","value":"Class providing buffered UART communication functionality using separate circular buffer for send and receive channels"},"sortText":"40f63a77BufferedSerial","filterText":"BufferedSerial","insertText":"mbed::BufferedSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"mbed::BufferedSerial"}},{"label":" mbed::UnbufferedSerial","kind":7,"documentation":{"kind":"markdown","value":"Class implementation for unbuffered I/O for an interrupt driven application or one that needs to have more control."},"sortText":"40f63a77UnbufferedSerial","filterText":"UnbufferedSerial","insertText":"mbed::UnbufferedSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"mbed::UnbufferedSerial"}},{"label":" MBED_MODULE_DRIVER_SERIAL","kind":20,"detail":"_mbed_module_type","sortText":"412f2acfMBED_MODULE_DRIVER_SERIAL","filterText":"MBED_MODULE_DRIVER_SERIAL","insertText":"MBED_MODULE_DRIVER_SERIAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"MBED_MODULE_DRIVER_SERIAL"}},{"label":" Serial1","kind":1,"sortText":"413b6096Serial1","filterText":"Serial1","insertText":"Serial1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"Serial1"}},{"label":" Serial2","kind":1,"sortText":"413b6096Serial2","filterText":"Serial2","insertText":"Serial2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"Serial2"}},{"label":" Serial3","kind":1,"sortText":"413b6096Serial3","filterText":"Serial3","insertText":"Serial3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"Serial3"}},{"label":" Serial4","kind":1,"sortText":"413b6096Serial4","filterText":"Serial4","insertText":"Serial4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"Serial4"}},{"label":" SerialHCI","kind":1,"sortText":"413b6096SerialHCI","filterText":"SerialHCI","insertText":"SerialHCI","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SerialHCI"}},{"label":" SerialNina","kind":1,"sortText":"413b6096SerialNina","filterText":"SerialNina","insertText":"SerialNina","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SerialNina"}},{"label":" SerialUSB","kind":1,"sortText":"413b6096SerialUSB","filterText":"SerialUSB","insertText":"SerialUSB","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SerialUSB"}},{"label":" SERIAL1_RX","kind":1,"sortText":"41645721SERIAL1_RX","filterText":"SERIAL1_RX","insertText":"SERIAL1_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL1_RX"}},{"label":" SERIAL1_TX","kind":1,"sortText":"41645721SERIAL1_TX","filterText":"SERIAL1_TX","insertText":"SERIAL1_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL1_TX"}},{"label":" SERIAL2_CTS","kind":1,"sortText":"41645721SERIAL2_CTS","filterText":"SERIAL2_CTS","insertText":"SERIAL2_CTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL2_CTS"}},{"label":" SERIAL2_RTS","kind":1,"sortText":"41645721SERIAL2_RTS","filterText":"SERIAL2_RTS","insertText":"SERIAL2_RTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL2_RTS"}},{"label":" SERIAL2_RX","kind":1,"sortText":"41645721SERIAL2_RX","filterText":"SERIAL2_RX","insertText":"SERIAL2_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL2_RX"}},{"label":" SERIAL2_TX","kind":1,"sortText":"41645721SERIAL2_TX","filterText":"SERIAL2_TX","insertText":"SERIAL2_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL2_TX"}},{"label":" SERIAL3_RX","kind":1,"sortText":"41645721SERIAL3_RX","filterText":"SERIAL3_RX","insertText":"SERIAL3_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL3_RX"}},{"label":" SERIAL3_TX","kind":1,"sortText":"41645721SERIAL3_TX","filterText":"SERIAL3_TX","insertText":"SERIAL3_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL3_TX"}},{"label":" SERIAL_CDC","kind":1,"sortText":"41645721SERIAL_CDC","filterText":"SERIAL_CDC","insertText":"SERIAL_CDC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_CDC"}},{"label":" SERIAL_HOWMANY","kind":1,"sortText":"41645721SERIAL_HOWMANY","filterText":"SERIAL_HOWMANY","insertText":"SERIAL_HOWMANY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_HOWMANY"}},{"label":" SERIAL_PORT_HARDWARE","kind":1,"sortText":"41645721SERIAL_PORT_HARDWARE","filterText":"SERIAL_PORT_HARDWARE","insertText":"SERIAL_PORT_HARDWARE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_PORT_HARDWARE"}},{"label":" SERIAL_PORT_HARDWARE_OPEN","kind":1,"sortText":"41645721SERIAL_PORT_HARDWARE_OPEN","filterText":"SERIAL_PORT_HARDWARE_OPEN","insertText":"SERIAL_PORT_HARDWARE_OPEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_PORT_HARDWARE_OPEN"}},{"label":" SERIAL_PORT_MONITOR","kind":1,"sortText":"41645721SERIAL_PORT_MONITOR","filterText":"SERIAL_PORT_MONITOR","insertText":"SERIAL_PORT_MONITOR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_PORT_MONITOR"}},{"label":" SERIAL_PORT_USBVIRTUAL","kind":1,"sortText":"41645721SERIAL_PORT_USBVIRTUAL","filterText":"SERIAL_PORT_USBVIRTUAL","insertText":"SERIAL_PORT_USBVIRTUAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_PORT_USBVIRTUAL"}},{"label":" SERIAL_5E1","kind":1,"sortText":"41661b18SERIAL_5E1","filterText":"SERIAL_5E1","insertText":"SERIAL_5E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_5E1"}},{"label":" SERIAL_5E2","kind":1,"sortText":"41661b18SERIAL_5E2","filterText":"SERIAL_5E2","insertText":"SERIAL_5E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_5E2"}},{"label":" SERIAL_5M1","kind":1,"sortText":"41661b18SERIAL_5M1","filterText":"SERIAL_5M1","insertText":"SERIAL_5M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_5M1"}},{"label":" SERIAL_5M2","kind":1,"sortText":"41661b18SERIAL_5M2","filterText":"SERIAL_5M2","insertText":"SERIAL_5M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_5M2"}},{"label":" SERIAL_5N1","kind":1,"sortText":"41661b18SERIAL_5N1","filterText":"SERIAL_5N1","insertText":"SERIAL_5N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_5N1"}},{"label":" SERIAL_5N2","kind":1,"sortText":"41661b18SERIAL_5N2","filterText":"SERIAL_5N2","insertText":"SERIAL_5N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_5N2"}},{"label":" SERIAL_5O1","kind":1,"sortText":"41661b18SERIAL_5O1","filterText":"SERIAL_5O1","insertText":"SERIAL_5O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_5O1"}},{"label":" SERIAL_5O2","kind":1,"sortText":"41661b18SERIAL_5O2","filterText":"SERIAL_5O2","insertText":"SERIAL_5O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_5O2"}},{"label":" SERIAL_5S1","kind":1,"sortText":"41661b18SERIAL_5S1","filterText":"SERIAL_5S1","insertText":"SERIAL_5S1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_5S1"}},{"label":" SERIAL_5S2","kind":1,"sortText":"41661b18SERIAL_5S2","filterText":"SERIAL_5S2","insertText":"SERIAL_5S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_5S2"}},{"label":" SERIAL_6E1","kind":1,"sortText":"41661b18SERIAL_6E1","filterText":"SERIAL_6E1","insertText":"SERIAL_6E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_6E1"}},{"label":" SERIAL_6E2","kind":1,"sortText":"41661b18SERIAL_6E2","filterText":"SERIAL_6E2","insertText":"SERIAL_6E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_6E2"}},{"label":" SERIAL_6M1","kind":1,"sortText":"41661b18SERIAL_6M1","filterText":"SERIAL_6M1","insertText":"SERIAL_6M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_6M1"}},{"label":" SERIAL_6M2","kind":1,"sortText":"41661b18SERIAL_6M2","filterText":"SERIAL_6M2","insertText":"SERIAL_6M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_6M2"}},{"label":" SERIAL_6N1","kind":1,"sortText":"41661b18SERIAL_6N1","filterText":"SERIAL_6N1","insertText":"SERIAL_6N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_6N1"}},{"label":" SERIAL_6N2","kind":1,"sortText":"41661b18SERIAL_6N2","filterText":"SERIAL_6N2","insertText":"SERIAL_6N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_6N2"}},{"label":" SERIAL_6O1","kind":1,"sortText":"41661b18SERIAL_6O1","filterText":"SERIAL_6O1","insertText":"SERIAL_6O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_6O1"}},{"label":" SERIAL_6O2","kind":1,"sortText":"41661b18SERIAL_6O2","filterText":"SERIAL_6O2","insertText":"SERIAL_6O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_6O2"}},{"label":" SERIAL_6S1","kind":1,"sortText":"41661b18SERIAL_6S1","filterText":"SERIAL_6S1","insertText":"SERIAL_6S1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_6S1"}},{"label":" SERIAL_6S2","kind":1,"sortText":"41661b18SERIAL_6S2","filterText":"SERIAL_6S2","insertText":"SERIAL_6S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_6S2"}},{"label":" SERIAL_7E1","kind":1,"sortText":"41661b18SERIAL_7E1","filterText":"SERIAL_7E1","insertText":"SERIAL_7E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_7E1"}},{"label":" SERIAL_7E2","kind":1,"sortText":"41661b18SERIAL_7E2","filterText":"SERIAL_7E2","insertText":"SERIAL_7E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_7E2"}},{"label":" SERIAL_7M1","kind":1,"sortText":"41661b18SERIAL_7M1","filterText":"SERIAL_7M1","insertText":"SERIAL_7M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_7M1"}},{"label":" SERIAL_7M2","kind":1,"sortText":"41661b18SERIAL_7M2","filterText":"SERIAL_7M2","insertText":"SERIAL_7M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_7M2"}},{"label":" SERIAL_7N1","kind":1,"sortText":"41661b18SERIAL_7N1","filterText":"SERIAL_7N1","insertText":"SERIAL_7N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_7N1"}},{"label":" SERIAL_7N2","kind":1,"sortText":"41661b18SERIAL_7N2","filterText":"SERIAL_7N2","insertText":"SERIAL_7N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_7N2"}},{"label":" SERIAL_7O1","kind":1,"sortText":"41661b18SERIAL_7O1","filterText":"SERIAL_7O1","insertText":"SERIAL_7O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_7O1"}},{"label":" SERIAL_7O2","kind":1,"sortText":"41661b18SERIAL_7O2","filterText":"SERIAL_7O2","insertText":"SERIAL_7O2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_7O2"}},{"label":" SERIAL_7S1","kind":1,"sortText":"41661b18SERIAL_7S1","filterText":"SERIAL_7S1","insertText":"SERIAL_7S1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_7S1"}},{"label":" SERIAL_7S2","kind":1,"sortText":"41661b18SERIAL_7S2","filterText":"SERIAL_7S2","insertText":"SERIAL_7S2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_7S2"}},{"label":" SERIAL_8E1","kind":1,"sortText":"41661b18SERIAL_8E1","filterText":"SERIAL_8E1","insertText":"SERIAL_8E1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_8E1"}},{"label":" SERIAL_8E2","kind":1,"sortText":"41661b18SERIAL_8E2","filterText":"SERIAL_8E2","insertText":"SERIAL_8E2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_8E2"}},{"label":" SERIAL_8M1","kind":1,"sortText":"41661b18SERIAL_8M1","filterText":"SERIAL_8M1","insertText":"SERIAL_8M1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_8M1"}},{"label":" SERIAL_8M2","kind":1,"sortText":"41661b18SERIAL_8M2","filterText":"SERIAL_8M2","insertText":"SERIAL_8M2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_8M2"}},{"label":" SERIAL_8N1","kind":1,"sortText":"41661b18SERIAL_8N1","filterText":"SERIAL_8N1","insertText":"SERIAL_8N1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_8N1"}},{"label":" SERIAL_8N2","kind":1,"sortText":"41661b18SERIAL_8N2","filterText":"SERIAL_8N2","insertText":"SERIAL_8N2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_8N2"}},{"label":" SERIAL_8O1","kind":1,"sortText":"41661b18SERIAL_8O1","filterText":"SERIAL_8O1","insertText":"SERIAL_8O1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"newText":"SERIAL_8O1"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 504

{"jsonrpc":"2.0","id":151,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"message":"Use of undeclared identifier 'Serial'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":151,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":72}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":73},"contentChanges":[{"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":8}},"rangeLength":0,"text":"."}]}}Content-Length: 305

{"jsonrpc":"2.0","id":152,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":9},"context":{"triggerKind":2,"triggerCharacter":"."}}}Content-Length: 222

{"jsonrpc":"2.0","id":153,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 69

{"id":152,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 406

{"id":153,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 575

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 321

{"jsonrpc":"2.0","id":154,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":154,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":73}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":74},"contentChanges":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"rangeLength":0,"text":"p"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":155,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":155,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":156,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":10},"context":{"triggerKind":1}}}
>>>
Content-Length: 69

{"id":156,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":75},"contentChanges":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"rangeLength":0,"text":"r"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":157,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":157,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":158,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":11},"context":{"triggerKind":1}}}
>>>
Content-Length: 69

{"id":158,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":76},"contentChanges":[{"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":11}},"rangeLength":0,"text":"i"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":159,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":159,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":77},"contentChanges":[{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":12}},"rangeLength":0,"text":"n"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":160,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":160,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":161,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":13},"context":{"triggerKind":1}}}
>>>
Content-Length: 69

{"id":161,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":78},"contentChanges":[{"range":{"start":{"line":4,"character":13},"end":{"line":4,"character":13}},"rangeLength":0,"text":"t"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":162,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":162,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":79},"contentChanges":[{"range":{"start":{"line":4,"character":14},"end":{"line":4,"character":14}},"rangeLength":0,"text":"l"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":163,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":163,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":164,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":15},"context":{"triggerKind":1}}}
>>>
Content-Length: 69

{"id":164,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":80},"contentChanges":[{"range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},"rangeLength":0,"text":"n"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":165,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":165,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":81},"contentChanges":[{"range":{"start":{"line":4,"character":15},"end":{"line":4,"character":16}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":166,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":166,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":167,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":167,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":82},"contentChanges":[{"range":{"start":{"line":4,"character":14},"end":{"line":4,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":168,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":168,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":83},"contentChanges":[{"range":{"start":{"line":4,"character":13},"end":{"line":4,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":168}}Content-Length: 222

{"jsonrpc":"2.0","id":169,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":84},"contentChanges":[{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":169}}Content-Length: 222

{"jsonrpc":"2.0","id":170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":169,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":170,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":85},"contentChanges":[{"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":170}}Content-Length: 222

{"jsonrpc":"2.0","id":171,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":86},"contentChanges":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":171}}Content-Length: 222

{"jsonrpc":"2.0","id":172,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":87},"contentChanges":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":172}}Content-Length: 222

{"jsonrpc":"2.0","id":173,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":88},"contentChanges":[{"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":173}}Content-Length: 222

{"jsonrpc":"2.0","id":174,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":89},"contentChanges":[{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":174}}Content-Length: 222

{"jsonrpc":"2.0","id":175,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":171,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":172,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 575

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":173,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Serial'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":174,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 399

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seria'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":175,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":90},"contentChanges":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":175}}Content-Length: 222

{"jsonrpc":"2.0","id":176,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":91},"contentChanges":[{"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":176}}Content-Length: 222

{"jsonrpc":"2.0","id":177,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":92},"contentChanges":[{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":177}}Content-Length: 222

{"jsonrpc":"2.0","id":178,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 398

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seri'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":176,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Ser'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":177,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Se'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":178,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":93},"contentChanges":[{"range":{"start":{"line":4,"character":3},"end":{"line":4,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":178}}Content-Length: 222

{"jsonrpc":"2.0","id":179,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":94},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":179}}Content-Length: 222

{"jsonrpc":"2.0","id":180,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'S'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":179,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 406

{"id":180,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":8,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":8,"character":5},"end":{"line":8,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":95},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 222

{"jsonrpc":"2.0","id":181,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":181,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":95}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":96},"contentChanges":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"rangeLength":0,"text":"f"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":182,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'f'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":182,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":183,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 37199

{"id":183,"result":{"isIncomplete":true,"items":[{"label":" false","kind":15,"detail":"bool","sortText":"3f000000false","filterText":"false","insertText":"false","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"false"}},{"label":" float","kind":14,"sortText":"3f000000float","filterText":"float","insertText":"float","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"float"}},{"label":" for (range-declaration : range-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}"}},{"label":" for (init-statement; condition; inc-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}"}},{"label":" F(T1 \u0026\u0026A)","kind":3,"detail":"const arduino::__FlashStringHelper *","documentation":{"kind":"markdown","value":"C++11 F replacement declaration"},"sortText":"4027b70bF","filterText":"F","insertText":"F(${1:T1 \u0026\u0026A})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"F(${1:T1 \u0026\u0026A})"}},{"label":" fabs(double)","kind":3,"detail":"double","sortText":"40a7b70bfabs","filterText":"fabs","insertText":"fabs(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fabs(${1:double})"}},{"label":" fabsf(float)","kind":3,"detail":"float","sortText":"40a7b70bfabsf","filterText":"fabsf","insertText":"fabsf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fabsf(${1:float})"}},{"label":" fabsl(long double)","kind":3,"detail":"long double","sortText":"40a7b70bfabsl","filterText":"fabsl","insertText":"fabsl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fabsl(${1:long double})"}},{"label":" fdim(double, double)","kind":3,"detail":"double","sortText":"40a7b70bfdim","filterText":"fdim","insertText":"fdim(${1:double}, ${2:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fdim(${1:double}, ${2:double})"}},{"label":" fdimf(float, float)","kind":3,"detail":"float","sortText":"40a7b70bfdimf","filterText":"fdimf","insertText":"fdimf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fdimf(${1:float}, ${2:float})"}},{"label":" fdiml(long double, long double)","kind":3,"detail":"long double","sortText":"40a7b70bfdiml","filterText":"fdiml","insertText":"fdiml(${1:long double}, ${2:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fdiml(${1:long double}, ${2:long double})"}},{"label":" feof_unlocked(FILE *)","kind":3,"detail":"int","sortText":"40a7b70bfeof_unlocked","filterText":"feof_unlocked","insertText":"feof_unlocked(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"feof_unlocked(${1:FILE *})"}},{"label":" ffsl(long)","kind":3,"detail":"int","sortText":"40a7b70bffsl","filterText":"ffsl","insertText":"ffsl(${1:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"ffsl(${1:long})"}},{"label":" fgetc(FILE *)","kind":3,"detail":"int","sortText":"40a7b70bfgetc","filterText":"fgetc","insertText":"fgetc(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fgetc(${1:FILE *})"}},{"label":" fgetc_unlocked(FILE *)","kind":3,"detail":"int","sortText":"40a7b70bfgetc_unlocked","filterText":"fgetc_unlocked","insertText":"fgetc_unlocked(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fgetc_unlocked(${1:FILE *})"}},{"label":" fgetpos(FILE *, fpos_t *)","kind":3,"detail":"int","sortText":"40a7b70bfgetpos","filterText":"fgetpos","insertText":"fgetpos(${1:FILE *}, ${2:fpos_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fgetpos(${1:FILE *}, ${2:fpos_t *})"}},{"label":" fgetwc(__FILE *)","kind":3,"detail":"wint_t","sortText":"40a7b70bfgetwc","filterText":"fgetwc","insertText":"fgetwc(${1:__FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fgetwc(${1:__FILE *})"}},{"label":" fileno_unlocked(FILE *)","kind":3,"detail":"int","sortText":"40a7b70bfileno_unlocked","filterText":"fileno_unlocked","insertText":"fileno_unlocked(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fileno_unlocked(${1:FILE *})"}},{"label":" finite(double)","kind":3,"detail":"int","sortText":"40a7b70bfinite","filterText":"finite","insertText":"finite(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"finite(${1:double})"}},{"label":" finitef(float)","kind":3,"detail":"int","sortText":"40a7b70bfinitef","filterText":"finitef","insertText":"finitef(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"finitef(${1:float})"}},{"label":" finitel(long double)","kind":3,"detail":"int","sortText":"40a7b70bfinitel","filterText":"finitel","insertText":"finitel(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"finitel(${1:long double})"}},{"label":" float_t","kind":8,"sortText":"40a7b70bfloat_t","filterText":"float_t","insertText":"float_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"float_t"}},{"label":" floor(double)","kind":3,"detail":"double","sortText":"40a7b70bfloor","filterText":"floor","insertText":"floor(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"floor(${1:double})"}},{"label":" floorf(float)","kind":3,"detail":"float","sortText":"40a7b70bfloorf","filterText":"floorf","insertText":"floorf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"floorf(${1:float})"}},{"label":" floorl(long double)","kind":3,"detail":"long double","sortText":"40a7b70bfloorl","filterText":"floorl","insertText":"floorl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"floorl(${1:long double})"}},{"label":" flsl(long)","kind":3,"detail":"int","sortText":"40a7b70bflsl","filterText":"flsl","insertText":"flsl(${1:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"flsl(${1:long})"}},{"label":" flsll(long long)","kind":3,"detail":"int","sortText":"40a7b70bflsll","filterText":"flsll","insertText":"flsll(${1:long long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"flsll(${1:long long})"}},{"label":" fma(double, double, double)","kind":3,"detail":"double","sortText":"40a7b70bfma","filterText":"fma","insertText":"fma(${1:double}, ${2:double}, ${3:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fma(${1:double}, ${2:double}, ${3:double})"}},{"label":" fmaf(float, float, float)","kind":3,"detail":"float","sortText":"40a7b70bfmaf","filterText":"fmaf","insertText":"fmaf(${1:float}, ${2:float}, ${3:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fmaf(${1:float}, ${2:float}, ${3:float})"}},{"label":" fmal(long double, long double, long double)","kind":3,"detail":"long double","sortText":"40a7b70bfmal","filterText":"fmal","insertText":"fmal(${1:long double}, ${2:long double}, ${3:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fmal(${1:long double}, ${2:long double}, ${3:long double})"}},{"label":" fmax(double, double)","kind":3,"detail":"double","sortText":"40a7b70bfmax","filterText":"fmax","insertText":"fmax(${1:double}, ${2:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fmax(${1:double}, ${2:double})"}},{"label":" fmaxf(float, float)","kind":3,"detail":"float","sortText":"40a7b70bfmaxf","filterText":"fmaxf","insertText":"fmaxf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fmaxf(${1:float}, ${2:float})"}},{"label":" fmaxl(long double, long double)","kind":3,"detail":"long double","sortText":"40a7b70bfmaxl","filterText":"fmaxl","insertText":"fmaxl(${1:long double}, ${2:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fmaxl(${1:long double}, ${2:long double})"}},{"label":" fmin(double, double)","kind":3,"detail":"double","sortText":"40a7b70bfmin","filterText":"fmin","insertText":"fmin(${1:double}, ${2:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fmin(${1:double}, ${2:double})"}},{"label":" fminf(float, float)","kind":3,"detail":"float","sortText":"40a7b70bfminf","filterText":"fminf","insertText":"fminf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fminf(${1:float}, ${2:float})"}},{"label":" fminl(long double, long double)","kind":3,"detail":"long double","sortText":"40a7b70bfminl","filterText":"fminl","insertText":"fminl(${1:long double}, ${2:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fminl(${1:long double}, ${2:long double})"}},{"label":" fmod(double, double)","kind":3,"detail":"double","sortText":"40a7b70bfmod","filterText":"fmod","insertText":"fmod(${1:double}, ${2:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fmod(${1:double}, ${2:double})"}},{"label":" fmodf(float, float)","kind":3,"detail":"float","sortText":"40a7b70bfmodf","filterText":"fmodf","insertText":"fmodf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fmodf(${1:float}, ${2:float})"}},{"label":" fmodl(long double, long double)","kind":3,"detail":"long double","sortText":"40a7b70bfmodl","filterText":"fmodl","insertText":"fmodl(${1:long double}, ${2:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fmodl(${1:long double}, ${2:long double})"}},{"label":" fprintf(FILE *, const char *, ...)","kind":3,"detail":"int","sortText":"40a7b70bfprintf","filterText":"fprintf","insertText":"fprintf(${1:FILE *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fprintf(${1:FILE *}, ${2:const char *, ...})"}},{"label":" fputwc(wchar_t, __FILE *)","kind":3,"detail":"wint_t","sortText":"40a7b70bfputwc","filterText":"fputwc","insertText":"fputwc(${1:wchar_t}, ${2:__FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fputwc(${1:wchar_t}, ${2:__FILE *})"}},{"label":" fread(void *, size_t _size, size_t _n, FILE *)","kind":3,"detail":"size_t","sortText":"40a7b70bfread","filterText":"fread","insertText":"fread(${1:void *}, ${2:size_t _size}, ${3:size_t _n}, ${4:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fread(${1:void *}, ${2:size_t _size}, ${3:size_t _n}, ${4:FILE *})"}},{"label":" free(void *)","kind":3,"detail":"void","sortText":"40a7b70bfree","filterText":"free","insertText":"free(${1:void *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"free(${1:void *})"}},{"label":" freelocale(locale_t)","kind":3,"detail":"void","sortText":"40a7b70bfreelocale","filterText":"freelocale","insertText":"freelocale(${1:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"freelocale(${1:locale_t})"}},{"label":" freopen(const char *, const char *, FILE *)","kind":3,"detail":"FILE *","sortText":"40a7b70bfreopen","filterText":"freopen","insertText":"freopen(${1:const char *}, ${2:const char *}, ${3:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"freopen(${1:const char *}, ${2:const char *}, ${3:FILE *})"}},{"label":" frexp(double, int *)","kind":3,"detail":"double","sortText":"40a7b70bfrexp","filterText":"frexp","insertText":"frexp(${1:double}, ${2:int *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"frexp(${1:double}, ${2:int *})"}},{"label":" frexpf(float, int *)","kind":3,"detail":"float","sortText":"40a7b70bfrexpf","filterText":"frexpf","insertText":"frexpf(${1:float}, ${2:int *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"frexpf(${1:float}, ${2:int *})"}},{"label":" frexpl(long double, int *)","kind":3,"detail":"long double","sortText":"40a7b70bfrexpl","filterText":"frexpl","insertText":"frexpl(${1:long double}, ${2:int *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"frexpl(${1:long double}, ${2:int *})"}},{"label":" fscanf(FILE *, const char *, ...)","kind":3,"detail":"int","sortText":"40a7b70bfscanf","filterText":"fscanf","insertText":"fscanf(${1:FILE *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fscanf(${1:FILE *}, ${2:const char *, ...})"}},{"label":" fseek(FILE *, long, int)","kind":3,"detail":"int","sortText":"40a7b70bfseek","filterText":"fseek","insertText":"fseek(${1:FILE *}, ${2:long}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fseek(${1:FILE *}, ${2:long}, ${3:int})"}},{"label":" fsetpos(FILE *, const fpos_t *)","kind":3,"detail":"int","sortText":"40a7b70bfsetpos","filterText":"fsetpos","insertText":"fsetpos(${1:FILE *}, ${2:const fpos_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fsetpos(${1:FILE *}, ${2:const fpos_t *})"}},{"label":" ftell(FILE *)","kind":3,"detail":"long","sortText":"40a7b70bftell","filterText":"ftell","insertText":"ftell(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"ftell(${1:FILE *})"}},{"label":" ftrylockfile(FILE *)","kind":3,"detail":"int","sortText":"40a7b70bftrylockfile","filterText":"ftrylockfile","insertText":"ftrylockfile(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"ftrylockfile(${1:FILE *})"}},{"label":" fwrite(const void *, size_t _size, size_t _n, FILE *)","kind":3,"detail":"size_t","sortText":"40a7b70bfwrite","filterText":"fwrite","insertText":"fwrite(${1:const void *}, ${2:size_t _size}, ${3:size_t _n}, ${4:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fwrite(${1:const void *}, ${2:size_t _size}, ${3:size_t _n}, ${4:FILE *})"}},{"label":" fwscanf(__FILE *, const wchar_t *, ...)","kind":3,"detail":"int","sortText":"40a7b70bfwscanf","filterText":"fwscanf","insertText":"fwscanf(${1:__FILE *}, ${2:const wchar_t *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fwscanf(${1:__FILE *}, ${2:const wchar_t *, ...})"}},{"label":" FALLING","kind":20,"detail":"PinStatus","sortText":"40aa2b09FALLING","filterText":"FALLING","insertText":"FALLING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"FALLING"}},{"label":" fcntl(int, int, ...)","kind":3,"detail":"int","sortText":"40aa2b09fcntl","filterText":"fcntl","insertText":"fcntl(${1:int}, ${2:int, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fcntl(${1:int}, ${2:int, ...})"}},{"label":"•fd_mask","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/select.h\u003e`"},"sortText":"40aa2b09fd_mask","filterText":"fd_mask","insertText":"fd_mask","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fd_mask"}},{"label":" flock","kind":22,"documentation":{"kind":"markdown","value":"file segment locking set data type - information passed to system by user"},"sortText":"40aa2b09flock","filterText":"flock","insertText":"flock","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"flock"}},{"label":" flock(int, int)","kind":3,"detail":"int","sortText":"40aa2b09flock","filterText":"flock","insertText":"flock(${1:int}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"flock(${1:int}, ${2:int})"}},{"label":"•fsblkcnt_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"40aa2b09fsblkcnt_t","filterText":"fsblkcnt_t","insertText":"fsblkcnt_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fsblkcnt_t"}},{"label":"•fstatat(int, const char *, struct stat *, int)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"40aa2b09fstatat","filterText":"fstatat","insertText":"fstatat(${1:int}, ${2:const char *}, ${3:struct stat *}, ${4:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fstatat(${1:int}, ${2:const char *}, ${3:struct stat *}, ${4:int})"}},{"label":" FILEHANDLE","kind":8,"sortText":"40af2acfFILEHANDLE","filterText":"FILEHANDLE","insertText":"FILEHANDLE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"FILEHANDLE"}},{"label":" FlowControlCTS","kind":20,"detail":"FlowControl","sortText":"40af2acfFlowControlCTS","filterText":"FlowControlCTS","insertText":"FlowControlCTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"FlowControlCTS"}},{"label":" FlowControlNone","kind":20,"detail":"FlowControl","sortText":"40af2acfFlowControlNone","filterText":"FlowControlNone","insertText":"FlowControlNone","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"FlowControlNone"}},{"label":" flash_get_erase_value(const flash_t *obj)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"Get the flash erase value  \n@param obj The flash object  \n@return The flash erase value"},"sortText":"40af2acfflash_get_erase_value","filterText":"flash_get_erase_value","insertText":"flash_get_erase_value(${1:const flash_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"flash_get_erase_value(${1:const flash_t *obj})"}},{"label":" flash_get_sector_size(const flash_t *obj, uint32_t address)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"Get sector size  \n@param obj The flash object  \n@param address The sector starting address  \n@return The size of a sector"},"sortText":"40af2acfflash_get_sector_size","filterText":"flash_get_sector_size","insertText":"flash_get_sector_size(${1:const flash_t *obj}, ${2:uint32_t address})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"flash_get_sector_size(${1:const flash_t *obj}, ${2:uint32_t address})"}},{"label":" flash_get_size(const flash_t *obj)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"Get the flash region size  \n@param obj The flash object  \n@return The flash region size"},"sortText":"40af2acfflash_get_size","filterText":"flash_get_size","insertText":"flash_get_size(${1:const flash_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"flash_get_size(${1:const flash_t *obj})"}},{"label":" flash_program_page(flash_t *obj, uint32_t address, const uint8_t *data, uint32_t size)","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"Program pages starting at defined address  \nThe pages should not cross multiple sectors.  \nThis function does not do any check for address alignments or if size is aligned to a page size.  \n@param obj The flash object  \n@param address The sector starting address  \n@param data The data buffer to be programmed  \n@param size The number of bytes to program  \n@return 0 for success, -1 for error"},"sortText":"40af2acfflash_program_page","filterText":"flash_program_page","insertText":"flash_program_page(${1:flash_t *obj}, ${2:uint32_t address}, ${3:const uint8_t *data}, ${4:uint32_t size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"flash_program_page(${1:flash_t *obj}, ${2:uint32_t address}, ${3:const uint8_t *data}, ${4:uint32_t size})"}},{"label":" fsync(int fildes)","kind":3,"detail":"int","sortText":"40af2acffsync","filterText":"fsync","insertText":"fsync(${1:int fildes})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fsync(${1:int fildes})"}},{"label":" ftruncate(int fildes, off_t length)","kind":3,"detail":"int","sortText":"40af2acfftruncate","filterText":"ftruncate","insertText":"ftruncate(${1:int fildes}, ${2:off_t length})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"ftruncate(${1:int fildes}, ${2:off_t length})"}},{"label":" flash_range_program(uint32_t flash_offs, const uint8_t *data, size_t count)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Program flash  \n\\\\ingroup hardware_flash  \n\\\\param flash_offs Flash address of the first byte to be programmed. Must be aligned to a 256-byte flash page.  \n\\\\param data Pointer to the data to program into flash  \n\\\\param count Number of bytes to program. Must be a multiple of 256 bytes (one page)."},"sortText":"40b302d1flash_range_program","filterText":"flash_range_program","insertText":"flash_range_program(${1:uint32_t flash_offs}, ${2:const uint8_t *data}, ${3:size_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"flash_range_program(${1:uint32_t flash_offs}, ${2:const uint8_t *data}, ${3:size_t count})"}},{"label":" F","kind":1,"sortText":"40bd9b7dF","filterText":"F","insertText":"F","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"F"}},{"label":" fabs","kind":18,"sortText":"40bf6ee9fabs","filterText":"fabs","insertText":"fabs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fabs"}},{"label":" fdim","kind":18,"sortText":"40bf6ee9fdim","filterText":"fdim","insertText":"fdim","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fdim"}},{"label":" fmin","kind":18,"sortText":"40bf6ee9fmin","filterText":"fmin","insertText":"fmin","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fmin"}},{"label":" fmod","kind":18,"sortText":"40bf6ee9fmod","filterText":"fmod","insertText":"fmod","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"fmod"}},{"label":" free","kind":18,"sortText":"40bf6ee9free","filterText":"free","insertText":"free","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"free"}},{"label":"•std::false_type","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nThe type used as a compile-time boolean with false value."},"sortText":"40cf7afffalse_type","filterText":"false_type","insertText":"std::false_type","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::false_type"}},{"label":"•std::fdim(long double __x, long double __y)","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afffdim","filterText":"fdim","insertText":"std::fdim(${1:long double __x}, ${2:long double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::fdim(${1:long double __x}, ${2:long double __y})"}},{"label":"•std::femto","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`"},"sortText":"40cf7afffemto","filterText":"femto","insertText":"std::femto","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::femto"}},{"label":"•std::filebuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nClass for @c char file buffers."},"sortText":"40cf7afffilebuf","filterText":"filebuf","insertText":"std::filebuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::filebuf"}},{"label":"•std::float_denorm_style","kind":13,"documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \n@brief Describes the denormalization for floating-point types.  \nThese values represent the presence or absence of a variable number of exponent bits. This type is used in the std::numeric_limits class."},"sortText":"40cf7afffloat_denorm_style","filterText":"float_denorm_style","insertText":"std::float_denorm_style","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::float_denorm_style"}},{"label":"•std::floor(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afffloor","filterText":"floor","insertText":"std::floor($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::floor($0)"}},{"label":"•std::flush(basic_ostream\u003c_CharT, _Traits\u003e \u0026__os)","kind":3,"detail":"basic_ostream\u003c_CharT, _Traits\u003e \u0026","documentation":{"kind":"markdown","value":"From `\u003costream\u003e`  \n@brief Flushes the output stream.  \nThis manipulator simply calls the stream's @c flush() member function."},"sortText":"40cf7affflush","filterText":"flush","insertText":"std::flush(${1:basic_ostream\u003c_CharT, _Traits\u003e \u0026__os})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::flush(${1:basic_ostream\u003c_CharT, _Traits\u003e \u0026__os})"}},{"label":"•std::fma(float __x, float __y, float __z)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afffma","filterText":"fma","insertText":"std::fma(${1:float __x}, ${2:float __y}, ${3:float __z})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::fma(${1:float __x}, ${2:float __y}, ${3:float __z})"}},{"label":"•std::fmax(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afffmax","filterText":"fmax","insertText":"std::fmax($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::fmax($0)"}},{"label":"•std::fmin(long double __x, long double __y)","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afffmin","filterText":"fmin","insertText":"std::fmin(${1:long double __x}, ${2:long double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::fmin(${1:long double __x}, ${2:long double __y})"}},{"label":"•std::fmod(_Tp __x, _Up __y)","kind":3,"detail":"typename __gnu_cxx::__promote_2\u003c_Tp, _Up\u003e::__type","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afffmod","filterText":"fmod","insertText":"std::fmod(${1:_Tp __x}, ${2:_Up __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::fmod(${1:_Tp __x}, ${2:_Up __y})"}},{"label":"•std::forward_as_tuple(_Elements \u0026\u0026__args...)","kind":3,"detail":"tuple\u003c_Elements \u0026\u0026...\u003e","documentation":{"kind":"markdown","value":"From `\u003ctuple\u003e`  \n\\_GLIBCXX_RESOLVE_LIB_DEFECTS  \n2275\\. Why is forward_as_tuple not constexpr?"},"sortText":"40cf7affforward_as_tuple","filterText":"forward_as_tuple","insertText":"std::forward_as_tuple(${1:_Elements \u0026\u0026__args...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::forward_as_tuple(${1:_Elements \u0026\u0026__args...})"}},{"label":"•std::fpclassify(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afffpclassify","filterText":"fpclassify","insertText":"std::fpclassify($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::fpclassify($0)"}},{"label":"•std::fill_n(_OI __first, _Size __n, const _Tp \u0026__value)","kind":3,"detail":"_OI","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Fills the range [first,first+n) with copies of value.  \n@ingroup mutating_algorithms  \n@param \\_\\_first An output iterator.  \n@param \\_\\_n The count of copies to perform.  \n@param \\_\\_value A reference-to-const of arbitrary type.  \n@return The iterator at first+n.  \nThis function fills a range with copies of the same value. For char types filling contiguous areas of memory, this becomes an inline call to @c memset or @ wmemset.  \n\\_GLIBCXX_RESOLVE_LIB_DEFECTS DR 865. More algorithms that throw away information"},"sortText":"40d0d9cdfill_n","filterText":"fill_n","insertText":"std::fill_n(${1:_OI __first}, ${2:_Size __n}, ${3:const _Tp \u0026__value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::fill_n(${1:_OI __first}, ${2:_Size __n}, ${3:const _Tp \u0026__value})"}},{"label":"•std::find(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40d0d9cdfind","filterText":"find","insertText":"std::find($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::find($0)"}},{"label":"•std::find_first_of(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40d0d9cdfind_first_of","filterText":"find_first_of","insertText":"std::find_first_of($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::find_first_of($0)"}},{"label":"•std::forward(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \n@brief Forward an lvalue.  \n@return The parameter cast to the specified type.  \nThis function is used to implement \"perfect forwarding\"."},"sortText":"40d0d9cdforward","filterText":"forward","insertText":"std::forward($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::forward($0)"}},{"label":"•std::fpos\u003ctypename _StateT\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \n@brief Class representing stream positions.  \nThe standard places no requirements upon the template parameter StateT.  \nIn this implementation StateT must be DefaultConstructible,  \nCopyConstructible and Assignable. The standard only requires that fpos should contain a member of type StateT. In this implementation it also contains an offset stored as a signed integer.  \n@param StateT Type passed to and returned from state()."},"sortText":"40d0d9cdfpos","filterText":"fpos","insertText":"std::fpos\u003c${1:typename _StateT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::fpos\u003c${1:typename _StateT}\u003e"}},{"label":"•std::function\u003ctypename _Signature\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`"},"sortText":"40d0d9cdfunction","filterText":"function","insertText":"std::function\u003c${1:typename _Signature}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::function\u003c${1:typename _Signature}\u003e"}},{"label":" mbed::FileHandle","kind":7,"documentation":{"kind":"markdown","value":"Class FileHandle  \nAn abstract interface that represents operations on a file-like object. The core functions are read, write and seek, but only a subset of these operations can be provided.  \n@note to create a file, @see File  \n@note Synchronization level: Set by subclass"},"sortText":"40d1f902FileHandle","filterText":"FileHandle","insertText":"mbed::FileHandle","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"mbed::FileHandle"}},{"label":" mbed::FileSystemHandle","kind":7,"documentation":{"kind":"markdown","value":"A filesystem-like object is one that can be used to open file-like objects though it by fopen(\"/name/filename\", mode)  \nImplementations must define at least open (the default definitions of the rest of the functions just return error values).  \n@note Synchronization level: Set by subclass"},"sortText":"40d1f902FileSystemHandle","filterText":"FileSystemHandle","insertText":"mbed::FileSystemHandle","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"mbed::FileSystemHandle"}},{"label":" mbed::FileSystemLike","kind":7,"documentation":{"kind":"markdown","value":"A filesystem-like object is one that can be used to open file-like objects though it by fopen(\"/name/filename\", mode)  \nImplementations must define at least open (the default definitions of the rest of the functions just return error values).  \n@note Synchronization level: Set by subclass"},"sortText":"40d1f902FileSystemLike","filterText":"FileSystemLike","insertText":"mbed::FileSystemLike","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"mbed::FileSystemLike"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":97},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"rangeLength":0,"text":"o"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":184,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fo'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":184,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":185,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":4},"context":{"triggerKind":3}}}
>>>
Content-Length: 4957

{"id":185,"result":{"isIncomplete":false,"items":[{"label":" for (init-statement; condition; inc-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}"}},{"label":" for (range-declaration : range-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}"}},{"label":" fopen(const char *_name, const char *_type)","kind":3,"detail":"FILE *","sortText":"40a7b70bfopen","filterText":"fopen","insertText":"fopen(${1:const char *_name}, ${2:const char *_type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"fopen(${1:const char *_name}, ${2:const char *_type})"}},{"label":"•std::forward_as_tuple(_Elements \u0026\u0026__args...)","kind":3,"detail":"tuple\u003c_Elements \u0026\u0026...\u003e","documentation":{"kind":"markdown","value":"From `\u003ctuple\u003e`  \n\\_GLIBCXX_RESOLVE_LIB_DEFECTS  \n2275\\. Why is forward_as_tuple not constexpr?"},"sortText":"40cf7affforward_as_tuple","filterText":"forward_as_tuple","insertText":"std::forward_as_tuple(${1:_Elements \u0026\u0026__args...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"std::forward_as_tuple(${1:_Elements \u0026\u0026__args...})"}},{"label":"•std::for_each(_IIter, _IIter, _Funct)","kind":3,"detail":"_Funct","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40d0d9cdfor_each","filterText":"for_each","insertText":"std::for_each(${1:_IIter}, ${2:_IIter}, ${3:_Funct})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"std::for_each(${1:_IIter}, ${2:_IIter}, ${3:_Funct})"}},{"label":"•std::forward(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \n@brief Forward an lvalue.  \n@return The parameter cast to the specified type.  \nThis function is used to implement \"perfect forwarding\"."},"sortText":"40d0d9cdforward","filterText":"forward","insertText":"std::forward($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"std::forward($0)"}},{"label":"•std::forward_iterator_tag","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \nForward iterators support a superset of input iterator operations."},"sortText":"40d0d9cdforward_iterator_tag","filterText":"forward_iterator_tag","insertText":"std::forward_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"std::forward_iterator_tag"}},{"label":"•std::fopen","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40df8717fopen","filterText":"fopen","insertText":"std::fopen","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"std::fopen"}},{"label":" mstd::forward","kind":18,"sortText":"40e0c600forward","filterText":"forward","insertText":"mstd::forward","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"mstd::forward"}},{"label":" mstd::forward_as_tuple","kind":18,"sortText":"40e0c600forward_as_tuple","filterText":"forward_as_tuple","insertText":"mstd::forward_as_tuple","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"mstd::forward_as_tuple"}},{"label":" mstd::forward_iterator_tag","kind":18,"sortText":"40e0c600forward_iterator_tag","filterText":"forward_iterator_tag","insertText":"mstd::forward_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"mstd::forward_iterator_tag"}},{"label":" FOPEN_MAX","kind":1,"sortText":"4153f483FOPEN_MAX","filterText":"FOPEN_MAX","insertText":"FOPEN_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"FOPEN_MAX"}},{"label":" FOPEN","kind":1,"sortText":"4155e80dFOPEN","filterText":"FOPEN","insertText":"FOPEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"FOPEN"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":98},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"rangeLength":0,"text":"r"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":186,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 223

{"id":186,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 562

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'for'"},{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":14}},"severity":3,"message":"To match this '{'\n\nsketch_nov24a.ino.cpp:17:1: error: expected '}'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":99},"contentChanges":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"rangeLength":0,"text":" "}]}}Content-Length: 222

{"jsonrpc":"2.0","id":187,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 223

{"id":187,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 562

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'for'"},{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":14}},"severity":3,"message":"To match this '{'\n\nsketch_nov24a.ino.cpp:17:1: error: expected '}'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":99}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":100},"contentChanges":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":188,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 223

{"id":188,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 562

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'for'"},{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":14}},"severity":3,"message":"To match this '{'\n\nsketch_nov24a.ino.cpp:17:1: error: expected '}'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 321

{"jsonrpc":"2.0","id":189,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":189,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":100}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":101},"contentChanges":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"rangeLength":0,"text":"()"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":190,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":190,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 735

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 328

{"jsonrpc":"2.0","id":191,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":6},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 93

{"id":191,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 674

{"jsonrpc":"2.0","id":192,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"},{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"message":"Expected ';' in 'for' statement specifier","severity":1,"code":"expected_semi_for","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":192,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":101}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":102},"contentChanges":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":6}},"rangeLength":0,"text":"i"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":193,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":193,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":194,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":7},"context":{"triggerKind":1}}}
>>>
Content-Length: 747

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'i'"},{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":8}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 40365

{"id":194,"result":{"isIncomplete":true,"items":[{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"int"}},{"label":" INPUT","kind":20,"detail":"PinMode","sortText":"40a7b70bINPUT","filterText":"INPUT","insertText":"INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"INPUT"}},{"label":" INPUT_PULLDOWN","kind":20,"detail":"PinMode","sortText":"40a7b70bINPUT_PULLDOWN","filterText":"INPUT_PULLDOWN","insertText":"INPUT_PULLDOWN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"INPUT_PULLDOWN"}},{"label":" INPUT_PULLUP","kind":20,"detail":"PinMode","sortText":"40a7b70bINPUT_PULLUP","filterText":"INPUT_PULLUP","insertText":"INPUT_PULLUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"INPUT_PULLUP"}},{"label":" ilogb(double)","kind":3,"detail":"int","sortText":"40a7b70bilogb","filterText":"ilogb","insertText":"ilogb(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"ilogb(${1:double})"}},{"label":" ilogbf(float)","kind":3,"detail":"int","sortText":"40a7b70bilogbf","filterText":"ilogbf","insertText":"ilogbf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"ilogbf(${1:float})"}},{"label":" ilogbl(long double)","kind":3,"detail":"int","sortText":"40a7b70bilogbl","filterText":"ilogbl","insertText":"ilogbl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"ilogbl(${1:long double})"}},{"label":" imaxabs(intmax_t j)","kind":3,"detail":"intmax_t","sortText":"40a7b70bimaxabs","filterText":"imaxabs","insertText":"imaxabs(${1:intmax_t j})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"imaxabs(${1:intmax_t j})"}},{"label":" infinity()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"Non ANSI double precision functions."},"sortText":"40a7b70binfinity","filterText":"infinity","insertText":"infinity()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"infinity()"}},{"label":" infinityf()","kind":3,"detail":"float","sortText":"40a7b70binfinityf","filterText":"infinityf","insertText":"infinityf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"infinityf()"}},{"label":" int_fast8_t","kind":8,"sortText":"40a7b70bint_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"int_fast8_t"}},{"label":" isascii(int __c)","kind":3,"detail":"int","sortText":"40a7b70bisascii","filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"isascii(${1:int __c})"}},{"label":" isdigit(int __c)","kind":3,"detail":"int","sortText":"40a7b70bisdigit","filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"isdigit(${1:int __c})"}},{"label":" isinff(float)","kind":3,"detail":"int","sortText":"40a7b70bisinff","filterText":"isinff","insertText":"isinff(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"isinff(${1:float})"}},{"label":" islower_l(int __c, locale_t __l)","kind":3,"detail":"int","sortText":"40a7b70bislower_l","filterText":"islower_l","insertText":"islower_l(${1:int __c}, ${2:locale_t __l})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"islower_l(${1:int __c}, ${2:locale_t __l})"}},{"label":" isnanf(float)","kind":3,"detail":"int","sortText":"40a7b70bisnanf","filterText":"isnanf","insertText":"isnanf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"isnanf(${1:float})"}},{"label":" isprint_l(int __c, locale_t __l)","kind":3,"detail":"int","sortText":"40a7b70bisprint_l","filterText":"isprint_l","insertText":"isprint_l(${1:int __c}, ${2:locale_t __l})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"isprint_l(${1:int __c}, ${2:locale_t __l})"}},{"label":" isupper(int __c)","kind":3,"detail":"int","sortText":"40a7b70bisupper","filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"isupper(${1:int __c})"}},{"label":" iswblank(wint_t)","kind":3,"detail":"int","sortText":"40a7b70biswblank","filterText":"iswblank","insertText":"iswblank(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"iswblank(${1:wint_t})"}},{"label":" iswdigit(wint_t)","kind":3,"detail":"int","sortText":"40a7b70biswdigit","filterText":"iswdigit","insertText":"iswdigit(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"iswdigit(${1:wint_t})"}},{"label":" iswgraph_l(wint_t, locale_t)","kind":3,"detail":"int","sortText":"40a7b70biswgraph_l","filterText":"iswgraph_l","insertText":"iswgraph_l(${1:wint_t}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"iswgraph_l(${1:wint_t}, ${2:locale_t})"}},{"label":" iswspace(wint_t)","kind":3,"detail":"int","sortText":"40a7b70biswspace","filterText":"iswspace","insertText":"iswspace(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"iswspace(${1:wint_t})"}},{"label":" initVariant()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Weak empty variant initialization function.  \nMay be redefined by variant files."},"sortText":"40aa2b09initVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"initVariant()"}},{"label":" int16_t","kind":8,"sortText":"40aa2b09int16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"int16_t"}},{"label":" int32_t","kind":8,"sortText":"40aa2b09int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"int32_t"}},{"label":" int64_t","kind":8,"sortText":"40aa2b09int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"int64_t"}},{"label":" int8_t","kind":8,"sortText":"40aa2b09int8_t","filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"int8_t"}},{"label":" intmax_t","kind":8,"sortText":"40aa2b09intmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"intmax_t"}},{"label":" intptr_t","kind":8,"sortText":"40aa2b09intptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"intptr_t"}},{"label":" itimerspec","kind":22,"documentation":{"kind":"markdown","value":"Structure defined by POSIX.1b to be like a itimerval, but with timespecs. Used in the timer\\_\\*() system calls."},"sortText":"40aa2b09itimerspec","filterText":"itimerspec","insertText":"itimerspec","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"itimerspec"}},{"label":" itoa(int value, char *string, int radix)","kind":3,"detail":"char *","sortText":"40aa2b09itoa","filterText":"itoa","insertText":"itoa(${1:int value}, ${2:char *string}, ${3:int radix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"itoa(${1:int value}, ${2:char *string}, ${3:int radix})"}},{"label":" I2C0_IRQn","kind":20,"detail":"IRQn","sortText":"40af2acfI2C0_IRQn","filterText":"I2C0_IRQn","insertText":"I2C0_IRQn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"I2C0_IRQn"}},{"label":" I2C1_IRQn","kind":20,"detail":"IRQn","sortText":"40af2acfI2C1_IRQn","filterText":"I2C1_IRQn","insertText":"I2C1_IRQn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"I2C1_IRQn"}},{"label":" IAR","kind":20,"detail":"mbed_compiler_id_t","documentation":{"kind":"markdown","value":"IAR"},"sortText":"40af2acfIAR","filterText":"IAR","insertText":"IAR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"IAR"}},{"label":" IO_IRQ_BANK0n","kind":20,"detail":"IRQn","sortText":"40af2acfIO_IRQ_BANK0n","filterText":"IO_IRQ_BANK0n","insertText":"IO_IRQ_BANK0n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"IO_IRQ_BANK0n"}},{"label":" IO_IRQ_QSPIn","kind":20,"detail":"IRQn","sortText":"40af2acfIO_IRQ_QSPIn","filterText":"IO_IRQ_QSPIn","insertText":"IO_IRQ_QSPIn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"IO_IRQ_QSPIn"}},{"label":" IRQ_NONE","kind":20,"detail":"gpio_irq_event","sortText":"40af2acfIRQ_NONE","filterText":"IRQ_NONE","insertText":"IRQ_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"IRQ_NONE"}},{"label":" IRQn","kind":13,"sortText":"40af2acfIRQn","filterText":"IRQn","insertText":"IRQn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"IRQn"}},{"label":" IRQn_Type","kind":8,"sortText":"40af2acfIRQn_Type","filterText":"IRQn_Type","insertText":"IRQn_Type","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"IRQn_Type"}},{"label":" i2c_slave_mode(i2c_t *obj, int enable_slave)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Configure I2C as slave or master.  \n@param obj The I2C object  \n@param enable_slave Enable i2c hardware so you can receive events with ::i2c_slave_receive  \n@return non-zero if a value is available"},"sortText":"40af2acfi2c_slave_mode","filterText":"i2c_slave_mode","insertText":"i2c_slave_mode(${1:i2c_t *obj}, ${2:int enable_slave})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"i2c_slave_mode(${1:i2c_t *obj}, ${2:int enable_slave})"}},{"label":" i2c_slave_write(i2c_t *obj, const char *data, int length)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Configure I2C as slave or master.  \n@param obj The I2C object  \n@param data The buffer for sending  \n@param length Number of bytes to write  \n@return non-zero if a value is available"},"sortText":"40af2acfi2c_slave_write","filterText":"i2c_slave_write","insertText":"i2c_slave_write(${1:i2c_t *obj}, ${2:const char *data}, ${3:int length})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"i2c_slave_write(${1:i2c_t *obj}, ${2:const char *data}, ${3:int length})"}},{"label":" i2c_t","kind":8,"documentation":{"kind":"markdown","value":"Non-asynch I2C HAL structure"},"sortText":"40af2acfi2c_t","filterText":"i2c_t","insertText":"i2c_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"i2c_t"}},{"label":" i2c_write(i2c_t *obj, int address, const char *data, int length, int stop)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Blocking sending data  \n@param obj The I2C object  \n@param address 7-bit address (last bit is 0)  \n@param data The buffer for sending  \n@param length Number of bytes to write  \n@param stop Stop to be generated after the transfer is done  \n@return zero or non-zero - Number of written bytes negative - I2C_ERROR_XXX status"},"sortText":"40af2acfi2c_write","filterText":"i2c_write","insertText":"i2c_write(${1:i2c_t *obj}, ${2:int address}, ${3:const char *data}, ${4:int length}, ${5:int stop})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"i2c_write(${1:i2c_t *obj}, ${2:int address}, ${3:const char *data}, ${4:int length}, ${5:int stop})"}},{"label":" ICMPSocket","kind":7,"documentation":{"kind":"markdown","value":"ICMP socket implementation."},"sortText":"40b044fcICMPSocket","filterText":"ICMPSocket","insertText":"ICMPSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"ICMPSocket"}},{"label":" InternetDatagramSocket","kind":7,"documentation":{"kind":"markdown","value":"InternetDatagramSocket socket implementation."},"sortText":"40b044fcInternetDatagramSocket","filterText":"InternetDatagramSocket","insertText":"InternetDatagramSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"InternetDatagramSocket"}},{"label":" i2c_get_write_available(i2c_inst_t *i2c)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\brief Determine non-blocking write space available  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\return 0 if no space is available in the I2C to write more data. If return is nonzero, at least that many bytes can be written without blocking."},"sortText":"40b302d1i2c_get_write_available","filterText":"i2c_get_write_available","insertText":"i2c_get_write_available(${1:i2c_inst_t *i2c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"i2c_get_write_available(${1:i2c_inst_t *i2c})"}},{"label":" i2c_inst","kind":22,"documentation":{"kind":"markdown","value":"\\---------------------------------------------------------------------------- Generic input/output"},"sortText":"40b302d1i2c_inst","filterText":"i2c_inst","insertText":"i2c_inst","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"i2c_inst"}},{"label":" i2c_read_blocking_until(i2c_inst_t *i2c, uint8_t addr, uint8_t *dst, size_t len, bool nostop, absolute_time_t until)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\brief Attempt to read specified number of bytes from address, blocking until the specified absolute time is reached.  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param addr Address of device to read from  \n\\\\param dst Pointer to buffer to receive data  \n\\\\param len Length of data in bytes to receive  \n\\\\param nostop If true, master retains control of the bus at the end of the transfer (no Stop is issued),  \nand the next transfer will begin with a Restart rather than a Start.  \n\\\\param until The absolute time that the block will wait until the entire transaction is complete.  \n\\\\return Number of bytes read, or PICO_ERROR_GENERIC if address not acknowledged, no device present, or PICO_ERROR_TIMEOUT if a timeout occurred."},"sortText":"40b302d1i2c_read_blocking_until","filterText":"i2c_read_blocking_until","insertText":"i2c_read_blocking_until(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:absolute_time_t until})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"i2c_read_blocking_until(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:absolute_time_t until})"}},{"label":" i2c_read_raw_blocking(i2c_inst_t *i2c, uint8_t *dst, size_t len)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\brief Write direct to TX FIFO  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param dst Buffer to accept data  \n\\\\param len Number of bytes to send  \nReads directly from the I2C RX FIFO which us mainly useful for slave-mode operation."},"sortText":"40b302d1i2c_read_raw_blocking","filterText":"i2c_read_raw_blocking","insertText":"i2c_read_raw_blocking(${1:i2c_inst_t *i2c}, ${2:uint8_t *dst}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"i2c_read_raw_blocking(${1:i2c_inst_t *i2c}, ${2:uint8_t *dst}, ${3:size_t len})"}},{"label":" i2c_read_timeout_us(i2c_inst_t *i2c, uint8_t addr, uint8_t *dst, size_t len, bool nostop, uint timeout_us)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\brief Attempt to read specified number of bytes from address, with timeout  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param addr Address of device to read from  \n\\\\param dst Pointer to buffer to receive data  \n\\\\param len Length of data in bytes to receive  \n\\\\param nostop If true, master retains control of the bus at the end of the transfer (no Stop is issued),  \nand the next transfer will begin with a Restart rather than a Start.  \n\\\\param timeout_us The time that the function will wait for the entire transaction to complete  \n\\\\return Number of bytes read, or PICO_ERROR_GENERIC if address not acknowledged, no device present, or PICO_ERROR_TIMEOUT if a timeout occurred."},"sortText":"40b302d1i2c_read_timeout_us","filterText":"i2c_read_timeout_us","insertText":"i2c_read_timeout_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"i2c_read_timeout_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_us})"}},{"label":" i2c_set_baudrate(i2c_inst_t *i2c, uint baudrate)","kind":3,"detail":"uint","documentation":{"kind":"markdown","value":"\\\\brief Set I2C baudrate  \n\\\\ingroup hardware_i2c  \nSet I2C bus frequency as close as possible to requested, and return actual rate set.  \nBaudrate may not be as exactly requested due to clocking limitations.  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param baudrate Baudrate in Hz (e.g. 100kHz is 100000)  \n\\\\return Actual set baudrate"},"sortText":"40b302d1i2c_set_baudrate","filterText":"i2c_set_baudrate","insertText":"i2c_set_baudrate(${1:i2c_inst_t *i2c}, ${2:uint baudrate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"i2c_set_baudrate(${1:i2c_inst_t *i2c}, ${2:uint baudrate})"}},{"label":" i2c_write_timeout_per_char_us(i2c_inst_t *i2c, uint8_t addr, const uint8_t *src, size_t len, bool nostop, uint timeout_per_char_us)","kind":3,"detail":"int","sortText":"40b302d1i2c_write_timeout_per_char_us","filterText":"i2c_write_timeout_per_char_us","insertText":"i2c_write_timeout_per_char_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:const uint8_t *src}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_per_char_us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"i2c_write_timeout_per_char_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:const uint8_t *src}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_per_char_us})"}},{"label":" io_ro_16","kind":8,"sortText":"40b302d1io_ro_16","filterText":"io_ro_16","insertText":"io_ro_16","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"io_ro_16"}},{"label":" io_ro_32","kind":8,"sortText":"40b302d1io_ro_32","filterText":"io_ro_32","insertText":"io_ro_32","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"io_ro_32"}},{"label":" io_ro_8","kind":8,"sortText":"40b302d1io_ro_8","filterText":"io_ro_8","insertText":"io_ro_8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"io_ro_8"}},{"label":" io_rw_16","kind":8,"sortText":"40b302d1io_rw_16","filterText":"io_rw_16","insertText":"io_rw_16","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"io_rw_16"}},{"label":" io_rw_32","kind":8,"sortText":"40b302d1io_rw_32","filterText":"io_rw_32","insertText":"io_rw_32","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"io_rw_32"}},{"label":" io_rw_8","kind":8,"sortText":"40b302d1io_rw_8","filterText":"io_rw_8","insertText":"io_rw_8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"io_rw_8"}},{"label":" io_wo_16","kind":8,"sortText":"40b302d1io_wo_16","filterText":"io_wo_16","insertText":"io_wo_16","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"io_wo_16"}},{"label":" io_wo_32","kind":8,"sortText":"40b302d1io_wo_32","filterText":"io_wo_32","insertText":"io_wo_32","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"io_wo_32"}},{"label":" io_wo_8","kind":8,"sortText":"40b302d1io_wo_8","filterText":"io_wo_8","insertText":"io_wo_8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"io_wo_8"}},{"label":" ioptr","kind":8,"sortText":"40b302d1ioptr","filterText":"ioptr","insertText":"ioptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"ioptr"}},{"label":" irq_get_vtable_handler(uint num)","kind":3,"detail":"irq_handler_t","documentation":{"kind":"markdown","value":"\\\\brief Get the current IRQ handler for the specified IRQ from the currently installed hardware vector table (VTOR) of the execution core  \n\\\\ingroup hardware_irq  \n\\\\param num Interrupt number \\\\ref interrupt_nums  \n\\\\return the address stored in the VTABLE for the given irq number"},"sortText":"40b302d1irq_get_vtable_handler","filterText":"irq_get_vtable_handler","insertText":"irq_get_vtable_handler(${1:uint num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"irq_get_vtable_handler(${1:uint num})"}},{"label":" interp_hw_t","kind":8,"sortText":"40b36a9finterp_hw_t","filterText":"interp_hw_t","insertText":"interp_hw_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"interp_hw_t"}},{"label":" IPAddress","kind":18,"sortText":"40bd9b7dIPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"IPAddress"}},{"label":" arduino::IPAddress","kind":7,"documentation":{"kind":"markdown","value":"A class to make it easier to handle and pass around IP addresses"},"sortText":"40be23ecIPAddress","filterText":"IPAddress","insertText":"arduino::IPAddress","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"arduino::IPAddress"}},{"label":" isgreater","kind":18,"sortText":"40bf6ee9isgreater","filterText":"isgreater","insertText":"isgreater","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"isgreater"}},{"label":" isgreaterequal","kind":18,"sortText":"40bf6ee9isgreaterequal","filterText":"isgreaterequal","insertText":"isgreaterequal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"isgreaterequal"}},{"label":" islessequal","kind":18,"sortText":"40bf6ee9islessequal","filterText":"islessequal","insertText":"islessequal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"islessequal"}},{"label":" arduino::INADDR_NONE","kind":6,"detail":"const IPAddress","sortText":"40cdce88INADDR_NONE","filterText":"INADDR_NONE","insertText":"arduino::INADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"arduino::INADDR_NONE"}},{"label":" arduino::isAlphaNumeric(int c)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"WCharacter.h prototypes"},"sortText":"40cdce88isAlphaNumeric","filterText":"isAlphaNumeric","insertText":"arduino::isAlphaNumeric(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"arduino::isAlphaNumeric(${1:int c})"}},{"label":" arduino::isAscii(int c)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"Checks whether c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"40cdce88isAscii","filterText":"isAscii","insertText":"arduino::isAscii(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"arduino::isAscii(${1:int c})"}},{"label":" arduino::isPunct(int c)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"Checks for any printable character which is not a space or an alphanumeric character."},"sortText":"40cdce88isPunct","filterText":"isPunct","insertText":"arduino::isPunct(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"arduino::isPunct(${1:int c})"}},{"label":"•std::ilogb(long double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7affilogb","filterText":"ilogb","insertText":"std::ilogb(${1:long double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::ilogb(${1:long double __x})"}},{"label":"•std::integral_constant\u003ctypename _Tp, _Tp __v\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nintegral_constant"},"sortText":"40cf7affintegral_constant","filterText":"integral_constant","insertText":"std::integral_constant\u003c${1:typename _Tp}, ${2:_Tp __v}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::integral_constant\u003c${1:typename _Tp}, ${2:_Tp __v}\u003e"}},{"label":"•std::is_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_assignable"},"sortText":"40cf7affis_assignable","filterText":"is_assignable","insertText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_bind_expression\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a function object that should be treated as a subexpression when evaluating calls to function objects returned by bind().  \nC++11 [func.bind.isbind].  \n@ingroup binders"},"sortText":"40cf7affis_bind_expression","filterText":"is_bind_expression","insertText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_class\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_class"},"sortText":"40cf7affis_class","filterText":"is_class","insertText":"std::is_class\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_class\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_compound\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_compound"},"sortText":"40cf7affis_compound","filterText":"is_compound","insertText":"std::is_compound\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_compound\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_convertible\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_convertible"},"sortText":"40cf7affis_convertible","filterText":"is_convertible","insertText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::is_copy_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_copy_assignable"},"sortText":"40cf7affis_copy_assignable","filterText":"is_copy_assignable","insertText":"std::is_copy_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_copy_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_destructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_destructible"},"sortText":"40cf7affis_destructible","filterText":"is_destructible","insertText":"std::is_destructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_destructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_empty\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_empty"},"sortText":"40cf7affis_empty","filterText":"is_empty","insertText":"std::is_empty\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_empty\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_error_code_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csystem_error\u003e`  \nis_error_code_enum"},"sortText":"40cf7affis_error_code_enum","filterText":"is_error_code_enum","insertText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_final\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_final"},"sortText":"40cf7affis_final","filterText":"is_final","insertText":"std::is_final\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_final\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_floating_point\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_floating_point"},"sortText":"40cf7affis_floating_point","filterText":"is_floating_point","insertText":"std::is_floating_point\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_floating_point\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_fundamental\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_fundamental"},"sortText":"40cf7affis_fundamental","filterText":"is_fundamental","insertText":"std::is_fundamental\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_fundamental\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_literal_type\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_literal_type"},"sortText":"40cf7affis_literal_type","filterText":"is_literal_type","insertText":"std::is_literal_type\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_literal_type\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_lvalue_reference\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_lvalue_reference"},"sortText":"40cf7affis_lvalue_reference","filterText":"is_lvalue_reference","insertText":"std::is_lvalue_reference\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_lvalue_reference\u003c${1:typename}\u003e"}},{"label":"•std::is_member_function_pointer\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_member_function_pointer"},"sortText":"40cf7affis_member_function_pointer","filterText":"is_member_function_pointer","insertText":"std::is_member_function_pointer\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_member_function_pointer\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_move_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_move_assignable"},"sortText":"40cf7affis_nothrow_move_assignable","filterText":"is_nothrow_move_assignable","insertText":"std::is_nothrow_move_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_nothrow_move_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_move_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_move_constructible"},"sortText":"40cf7affis_nothrow_move_constructible","filterText":"is_nothrow_move_constructible","insertText":"std::is_nothrow_move_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_nothrow_move_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_swappable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable"},"sortText":"40cf7affis_nothrow_swappable","filterText":"is_nothrow_swappable","insertText":"std::is_nothrow_swappable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_nothrow_swappable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_swappable_with\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable_with"},"sortText":"40cf7affis_nothrow_swappable_with","filterText":"is_nothrow_swappable_with","insertText":"std::is_nothrow_swappable_with\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_nothrow_swappable_with\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_nothrow_swappable_with_v\u003ctypename _Tp, typename _Up\u003e","kind":6,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable_with_v"},"sortText":"40cf7affis_nothrow_swappable_with_v","filterText":"is_nothrow_swappable_with_v","insertText":"std::is_nothrow_swappable_with_v\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_nothrow_swappable_with_v\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_object\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_object"},"sortText":"40cf7affis_object","filterText":"is_object","insertText":"std::is_object\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_object\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_placeholder\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a placeholder in a bind() expression and, if so, which placeholder it is.  \nC++11 [func.bind.isplace].  \n@ingroup binders"},"sortText":"40cf7affis_placeholder","filterText":"is_placeholder","insertText":"std::is_placeholder\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_placeholder\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_pointer\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_pointer"},"sortText":"40cf7affis_pointer","filterText":"is_pointer","insertText":"std::is_pointer\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_pointer\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_polymorphic\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_polymorphic"},"sortText":"40cf7affis_polymorphic","filterText":"is_polymorphic","insertText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_reference\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_reference"},"sortText":"40cf7affis_reference","filterText":"is_reference","insertText":"std::is_reference\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"newText":"std::is_reference\u003c${1:typename _Tp}\u003e"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":103},"contentChanges":[{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":7}},"rangeLength":0,"text":"n"}]}}Content-Length: 282

{"jsonrpc":"2.0","id":195,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":8},"context":{"triggerKind":3}}}Content-Length: 222

{"jsonrpc":"2.0","id":196,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 37175

{"id":195,"result":{"isIncomplete":true,"items":[{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int"}},{"label":" type_info","kind":7,"sortText":"4017ae13type_info","filterText":"type_info","insertText":"type_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"type_info"}},{"label":" index(const char *, int)","kind":3,"detail":"char *","sortText":"40a7b70bindex","filterText":"index","insertText":"index(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"index(${1:const char *}, ${2:int})"}},{"label":" infinity()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"Non ANSI double precision functions."},"sortText":"40a7b70binfinity","filterText":"infinity","insertText":"infinity()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"infinity()"}},{"label":" infinityf()","kind":3,"detail":"float","sortText":"40a7b70binfinityf","filterText":"infinityf","insertText":"infinityf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"infinityf()"}},{"label":" initstate(unsigned int, char *, size_t)","kind":3,"detail":"char *","sortText":"40a7b70binitstate","filterText":"initstate","insertText":"initstate(${1:unsigned int}, ${2:char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"initstate(${1:unsigned int}, ${2:char *}, ${3:size_t})"}},{"label":" int_fast16_t","kind":8,"sortText":"40a7b70bint_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"sortText":"40a7b70bint_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"sortText":"40a7b70bint_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"sortText":"40a7b70bint_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int_fast8_t"}},{"label":" int_least16_t","kind":8,"sortText":"40a7b70bint_least16_t","filterText":"int_least16_t","insertText":"int_least16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int_least16_t"}},{"label":" int_least32_t","kind":8,"sortText":"40a7b70bint_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int_least32_t"}},{"label":" int_least64_t","kind":8,"sortText":"40a7b70bint_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int_least64_t"}},{"label":" int_least8_t","kind":8,"sortText":"40a7b70bint_least8_t","filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int_least8_t"}},{"label":"•in_addr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"40aa2b09in_addr_t","filterText":"in_addr_t","insertText":"in_addr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"in_addr_t"}},{"label":"•in_port_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"40aa2b09in_port_t","filterText":"in_port_t","insertText":"in_port_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"in_port_t"}},{"label":" init()","kind":3,"detail":"void","sortText":"40aa2b09init","filterText":"init","insertText":"init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"init()"}},{"label":" initVariant()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Weak empty variant initialization function.  \nMay be redefined by variant files."},"sortText":"40aa2b09initVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"initVariant()"}},{"label":"•ino_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"40aa2b09ino_t","filterText":"ino_t","insertText":"ino_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"ino_t"}},{"label":" int16_t","kind":8,"sortText":"40aa2b09int16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int16_t"}},{"label":" int32_t","kind":8,"sortText":"40aa2b09int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int32_t"}},{"label":" int64_t","kind":8,"sortText":"40aa2b09int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int64_t"}},{"label":" int8_t","kind":8,"sortText":"40aa2b09int8_t","filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int8_t"}},{"label":" intmax_t","kind":8,"sortText":"40aa2b09intmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"intmax_t"}},{"label":" intptr_t","kind":8,"sortText":"40aa2b09intptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"intptr_t"}},{"label":" int_farptr_t","kind":8,"sortText":"40add229int_farptr_t","filterText":"int_farptr_t","insertText":"int_farptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int_farptr_t"}},{"label":" InternetDatagramSocket","kind":7,"documentation":{"kind":"markdown","value":"InternetDatagramSocket socket implementation."},"sortText":"40b044fcInternetDatagramSocket","filterText":"InternetDatagramSocket","insertText":"InternetDatagramSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"InternetDatagramSocket"}},{"label":" InternetSocket","kind":7,"documentation":{"kind":"markdown","value":"Socket implementation that uses IP network stack.  \nNot to be directly used by applications. Cannot be directly instantiated."},"sortText":"40b044fcInternetSocket","filterText":"InternetSocket","insertText":"InternetSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"InternetSocket"}},{"label":" int_fast24_t","kind":8,"sortText":"40b044fcint_fast24_t","filterText":"int_fast24_t","insertText":"int_fast24_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int_fast24_t"}},{"label":" int_least24_t","kind":8,"sortText":"40b044fcint_least24_t","filterText":"int_least24_t","insertText":"int_least24_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int_least24_t"}},{"label":" interp_hw_t","kind":8,"sortText":"40b36a9finterp_hw_t","filterText":"interp_hw_t","insertText":"interp_hw_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"interp_hw_t"}},{"label":" INPUT","kind":20,"detail":"PinMode","sortText":"40c2c029INPUT","filterText":"INPUT","insertText":"INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"INPUT"}},{"label":" INPUT_PULLDOWN","kind":20,"detail":"PinMode","sortText":"40c2c029INPUT_PULLDOWN","filterText":"INPUT_PULLDOWN","insertText":"INPUT_PULLDOWN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"INPUT_PULLDOWN"}},{"label":" INPUT_PULLUP","kind":20,"detail":"PinMode","sortText":"40c2c029INPUT_PULLUP","filterText":"INPUT_PULLUP","insertText":"INPUT_PULLUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"INPUT_PULLUP"}},{"label":"•std::index_sequence\u003csize_t _Idx\u003e","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \nAlias template index_sequence"},"sortText":"40cf7affindex_sequence","filterText":"index_sequence","insertText":"std::index_sequence\u003c${1:size_t _Idx}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::index_sequence\u003c${1:size_t _Idx}\u003e"}},{"label":"•std::index_sequence_for\u003ctypename _Types\u003e","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \nAlias template index_sequence_for"},"sortText":"40cf7affindex_sequence_for","filterText":"index_sequence_for","insertText":"std::index_sequence_for\u003c${1:typename _Types}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::index_sequence_for\u003c${1:typename _Types}\u003e"}},{"label":"•std::initializer_list\u003cclass _E\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cinitializer_list\u003e`  \ninitializer_list"},"sortText":"40cf7affinitializer_list","filterText":"initializer_list","insertText":"std::initializer_list\u003c${1:class _E}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::initializer_list\u003c${1:class _E}\u003e"}},{"label":"•std::integer_sequence\u003ctypename _Tp, _Tp _Idx\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \nClass template integer_sequence"},"sortText":"40cf7affinteger_sequence","filterText":"integer_sequence","insertText":"std::integer_sequence\u003c${1:typename _Tp}, ${2:_Tp _Idx}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::integer_sequence\u003c${1:typename _Tp}, ${2:_Tp _Idx}\u003e"}},{"label":"•std::integral_constant\u003ctypename _Tp, _Tp __v\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nintegral_constant"},"sortText":"40cf7affintegral_constant","filterText":"integral_constant","insertText":"std::integral_constant\u003c${1:typename _Tp}, ${2:_Tp __v}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::integral_constant\u003c${1:typename _Tp}, ${2:_Tp __v}\u003e"}},{"label":"•std::invalid_argument","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstdexcept\u003e`  \nThrown to report invalid arguments to functions."},"sortText":"40cf7affinvalid_argument","filterText":"invalid_argument","insertText":"std::invalid_argument","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::invalid_argument"}},{"label":"•std::includes(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nfor_each generate generate_n"},"sortText":"40d0d9cdincludes","filterText":"includes","insertText":"std::includes($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::includes($0)"}},{"label":"•std::inplace_merge(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40d0d9cdinplace_merge","filterText":"inplace_merge","insertText":"std::inplace_merge($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::inplace_merge($0)"}},{"label":"•std::input_iterator_tag","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@defgroup iterator_tags Iterator Tags These are empty types, used to distinguish different iterators. The distinction is not made by what they contain, but simply by what they are. Different underlying algorithms can then be used based on the different operations supported by different iterator types.  \n@{ Marking input iterators."},"sortText":"40d0d9cdinput_iterator_tag","filterText":"input_iterator_tag","insertText":"std::input_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::input_iterator_tag"}},{"label":"•std::insert_iterator\u003ctypename _Container\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief Turns assignment into insertion.  \nThese are output iterators, constructed from a container-of-T.  \nAssigning a T to the iterator inserts it in the container at the %iterator's position, rather than overwriting the value at that position.  \n(Sequences will actually insert a @e copy of the value before the %iterator's position.)  \nTip: Using the inserter function to create these iterators can save typing."},"sortText":"40d0d9cdinsert_iterator","filterText":"insert_iterator","insertText":"std::insert_iterator\u003c${1:typename _Container}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::insert_iterator\u003c${1:typename _Container}\u003e"}},{"label":"•std::inserter(_Container \u0026__x, _Iterator __i)","kind":3,"detail":"insert_iterator\u003c_Container\u003e","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@param \\_\\_x A container of arbitrary type.  \n@return An instance of insert_iterator working on @p \\_\\_x.  \nThis wrapper function helps in creating insert_iterator instances.  \nTyping the name of the %iterator requires knowing the precise full type of the container, which can be tedious and impedes generic programming. Using this function lets you take advantage of automatic template parameter deduction, making the compiler match the correct types for you."},"sortText":"40d0d9cdinserter","filterText":"inserter","insertText":"std::inserter(${1:_Container \u0026__x}, ${2:_Iterator __i})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::inserter(${1:_Container \u0026__x}, ${2:_Iterator __i})"}},{"label":"•std::internal(ios_base \u0026__base)","kind":3,"detail":"ios_base \u0026","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \n[27.4.5.2] adjustfield manipulators Calls base.setf(ios_base::internal, ios_base::adjustfield)."},"sortText":"40d0d9cdinternal","filterText":"internal","insertText":"std::internal(${1:ios_base \u0026__base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::internal(${1:ios_base \u0026__base})"}},{"label":" mstd::invoke(F \u0026\u0026f, Args \u0026\u0026args...)","kind":3,"detail":"invoke_result_t\u003cF, Args...\u003e","sortText":"40d0d9cdinvoke","filterText":"invoke","insertText":"mstd::invoke(${1:F \u0026\u0026f}, ${2:Args \u0026\u0026args...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::invoke(${1:F \u0026\u0026f}, ${2:Args \u0026\u0026args...})"}},{"label":" mstd::impl::invoke_result\u003ctypename Void, typename F, typename Args\u003e","kind":22,"sortText":"40d0d9cdinvoke_result","filterText":"invoke_result","insertText":"mstd::impl::invoke_result\u003c${1:typename Void}, ${2:typename F}, ${3:typename Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::impl::invoke_result\u003c${1:typename Void}, ${2:typename F}, ${3:typename Args}\u003e"}},{"label":" mstd::invoke_result\u003ctypename F, typename Args\u003e","kind":22,"sortText":"40d0d9cdinvoke_result","filterText":"invoke_result","insertText":"mstd::invoke_result\u003c${1:typename F}, ${2:typename Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::invoke_result\u003c${1:typename F}, ${2:typename Args}\u003e"}},{"label":" mstd::invoke_result_t\u003cclass F, class Args\u003e","kind":8,"sortText":"40d0d9cdinvoke_result_t","filterText":"invoke_result_t","insertText":"mstd::invoke_result_t\u003c${1:class F}, ${2:class Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::invoke_result_t\u003c${1:class F}, ${2:class Args}\u003e"}},{"label":" mbed::InterruptIn","kind":7,"documentation":{"kind":"markdown","value":"A digital interrupt input, used to call a function on a rising or falling edge  \n@note Synchronization level: Interrupt safe  \nExample:  \n@code // Flash an LED while waiting for events  \n#include \"mbed.h\"  \nInterruptIn event(p16);  \nDigitalOut led(LED1);  \nvoid trigger() { printf(\"triggered!\\\\n\");  \n}  \nint main() { // register trigger() to be called upon the rising edge of event event.rise(\u0026trigger);  \nwhile(1) { led = !led;  \nThisThread::sleep_for(250);  \n} }  \n@endcode"},"sortText":"40d1f902InterruptIn","filterText":"InterruptIn","insertText":"mbed::InterruptIn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mbed::InterruptIn"}},{"label":" mbed::detail::invoke_r\u003ctypename R\u003e(F \u0026\u0026f, Args \u0026\u0026args...)","kind":3,"detail":"[2 overloads]","sortText":"40d1f902invoke_r","filterText":"invoke_r","insertText":"mbed::detail::invoke_r\u003c${1:typename R}\u003e(${2:F \u0026\u0026f}, ${3:Args \u0026\u0026args...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mbed::detail::invoke_r\u003c${1:typename R}\u003e(${2:F \u0026\u0026f}, ${3:Args \u0026\u0026args...})"}},{"label":"•std::int16_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int16_t","filterText":"int16_t","insertText":"std::int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int16_t"}},{"label":"•std::int32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int32_t","filterText":"int32_t","insertText":"std::int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int32_t"}},{"label":"•std::int64_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int64_t","filterText":"int64_t","insertText":"std::int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int64_t"}},{"label":"•std::int8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int8_t","filterText":"int8_t","insertText":"std::int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int8_t"}},{"label":"•std::int_fast16_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_fast16_t","filterText":"int_fast16_t","insertText":"std::int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int_fast16_t"}},{"label":"•std::int_fast32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_fast32_t","filterText":"int_fast32_t","insertText":"std::int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int_fast32_t"}},{"label":"•std::int_fast64_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_fast64_t","filterText":"int_fast64_t","insertText":"std::int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int_fast64_t"}},{"label":"•std::int_fast8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_fast8_t","filterText":"int_fast8_t","insertText":"std::int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int_fast8_t"}},{"label":"•std::int_least16_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_least16_t","filterText":"int_least16_t","insertText":"std::int_least16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int_least16_t"}},{"label":"•std::int_least32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_least32_t","filterText":"int_least32_t","insertText":"std::int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int_least32_t"}},{"label":"•std::int_least64_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_least64_t","filterText":"int_least64_t","insertText":"std::int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int_least64_t"}},{"label":"•std::int_least8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_least8_t","filterText":"int_least8_t","insertText":"std::int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::int_least8_t"}},{"label":"•std::intmax_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717intmax_t","filterText":"intmax_t","insertText":"std::intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::intmax_t"}},{"label":"•std::intptr_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717intptr_t","filterText":"intptr_t","insertText":"std::intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::intptr_t"}},{"label":" mstd::index_sequence","kind":18,"sortText":"40e0c600index_sequence","filterText":"index_sequence","insertText":"mstd::index_sequence","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::index_sequence"}},{"label":" mstd::index_sequence_for","kind":18,"sortText":"40e0c600index_sequence_for","filterText":"index_sequence_for","insertText":"mstd::index_sequence_for","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::index_sequence_for"}},{"label":" mstd::initializer_list","kind":18,"sortText":"40e0c600initializer_list","filterText":"initializer_list","insertText":"mstd::initializer_list","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::initializer_list"}},{"label":" mstd::input_iterator_tag","kind":18,"documentation":{"kind":"markdown","value":"omitting deprecated std::iterator"},"sortText":"40e0c600input_iterator_tag","filterText":"input_iterator_tag","insertText":"mstd::input_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::input_iterator_tag"}},{"label":" mstd::insert_iterator","kind":18,"sortText":"40e0c600insert_iterator","filterText":"insert_iterator","insertText":"mstd::insert_iterator","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::insert_iterator"}},{"label":" mstd::inserter","kind":18,"sortText":"40e0c600inserter","filterText":"inserter","insertText":"mstd::inserter","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::inserter"}},{"label":" mstd::integer_sequence","kind":18,"sortText":"40e0c600integer_sequence","filterText":"integer_sequence","insertText":"mstd::integer_sequence","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::integer_sequence"}},{"label":" arduino::INADDR_NONE","kind":6,"detail":"const IPAddress","sortText":"40e414b6INADDR_NONE","filterText":"INADDR_NONE","insertText":"arduino::INADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"arduino::INADDR_NONE"}},{"label":" mstd::impl::INVOKE(…)","kind":3,"detail":"[7 overloads]","documentation":{"kind":"markdown","value":"F is pointer to member function, and 1st arg decays to matching class"},"sortText":"40e6be93INVOKE","filterText":"INVOKE","insertText":"mstd::impl::INVOKE($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::impl::INVOKE($0)"}},{"label":"•std::is_nothrow_constructible\u003ctypename _Tp, typename _Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_constructible"},"sortText":"40fb9c40is_nothrow_constructible","filterText":"is_nothrow_constructible","insertText":"std::is_nothrow_constructible\u003c${1:typename _Tp}, ${2:typename _Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::is_nothrow_constructible\u003c${1:typename _Tp}, ${2:typename _Args}\u003e"}},{"label":"•std::is_nothrow_copy_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_copy_assignable"},"sortText":"40fb9c40is_nothrow_copy_assignable","filterText":"is_nothrow_copy_assignable","insertText":"std::is_nothrow_copy_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::is_nothrow_copy_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_copy_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_copy_constructible"},"sortText":"40fb9c40is_nothrow_copy_constructible","filterText":"is_nothrow_copy_constructible","insertText":"std::is_nothrow_copy_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::is_nothrow_copy_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_default_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_default_constructible"},"sortText":"40fb9c40is_nothrow_default_constructible","filterText":"is_nothrow_default_constructible","insertText":"std::is_nothrow_default_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::is_nothrow_default_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_move_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_move_constructible"},"sortText":"40fb9c40is_nothrow_move_constructible","filterText":"is_nothrow_move_constructible","insertText":"std::is_nothrow_move_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::is_nothrow_move_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_swappable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable"},"sortText":"40fb9c40is_nothrow_swappable","filterText":"is_nothrow_swappable","insertText":"std::is_nothrow_swappable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::is_nothrow_swappable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_swappable_v\u003ctypename _Tp\u003e","kind":6,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable_v"},"sortText":"40fb9c40is_nothrow_swappable_v","filterText":"is_nothrow_swappable_v","insertText":"std::is_nothrow_swappable_v\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::is_nothrow_swappable_v\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_swappable_with\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable_with"},"sortText":"40fb9c40is_nothrow_swappable_with","filterText":"is_nothrow_swappable_with","insertText":"std::is_nothrow_swappable_with\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"std::is_nothrow_swappable_with\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":" mstd::is_nothrow_constructible\u003ctypename T, typename Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"Exceptions are disabled in mbed, so short-circuit nothrow tests (Compilers don't make noexcept() return false with exceptions disabled, presumably to preserve binary compatibility, so the std versions of these are unduly pessimistic)."},"sortText":"40fca359is_nothrow_constructible","filterText":"is_nothrow_constructible","insertText":"mstd::is_nothrow_constructible\u003c${1:typename T}, ${2:typename Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::is_nothrow_constructible\u003c${1:typename T}, ${2:typename Args}\u003e"}},{"label":" mstd::is_nothrow_copy_assignable\u003ctypename T\u003e","kind":22,"sortText":"40fca359is_nothrow_copy_assignable","filterText":"is_nothrow_copy_assignable","insertText":"mstd::is_nothrow_copy_assignable\u003c${1:typename T}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::is_nothrow_copy_assignable\u003c${1:typename T}\u003e"}},{"label":" mstd::is_nothrow_copy_constructible\u003ctypename T\u003e","kind":22,"sortText":"40fca359is_nothrow_copy_constructible","filterText":"is_nothrow_copy_constructible","insertText":"mstd::is_nothrow_copy_constructible\u003c${1:typename T}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::is_nothrow_copy_constructible\u003c${1:typename T}\u003e"}},{"label":" mstd::is_nothrow_invocable\u003cclass F, class Args\u003e","kind":22,"sortText":"40fca359is_nothrow_invocable","filterText":"is_nothrow_invocable","insertText":"mstd::is_nothrow_invocable\u003c${1:class F}, ${2:class Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::is_nothrow_invocable\u003c${1:class F}, ${2:class Args}\u003e"}},{"label":" mstd::impl::is_nothrow_invocable_r\u003ctypename R, typename InvokeResult, typename\u003e","kind":22,"sortText":"40fca359is_nothrow_invocable_r","filterText":"is_nothrow_invocable_r","insertText":"mstd::impl::is_nothrow_invocable_r\u003c${1:typename R}, ${2:typename InvokeResult}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::impl::is_nothrow_invocable_r\u003c${1:typename R}, ${2:typename InvokeResult}\u003e"}},{"label":" arduino::internal","kind":9,"sortText":"40fe67a9internal","filterText":"internal","insertText":"arduino::internal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"arduino::internal"}},{"label":" mbed::internal","kind":9,"sortText":"4102de8einternal","filterText":"internal","insertText":"mbed::internal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mbed::internal"}},{"label":" rtos::internal","kind":9,"sortText":"4102de8einternal","filterText":"internal","insertText":"rtos::internal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"rtos::internal"}},{"label":" mbed::interface","kind":9,"sortText":"41043496interface","filterText":"interface","insertText":"mbed::interface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mbed::interface"}},{"label":" mstd::is_null_pointer","kind":18,"sortText":"411128ffis_null_pointer","filterText":"is_null_pointer","insertText":"mstd::is_null_pointer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"mstd::is_null_pointer"}},{"label":" interrupts()","kind":1,"sortText":"413b6096interrupts","filterText":"interrupts","insertText":"interrupts()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"interrupts()"}},{"label":" int","kind":1,"sortText":"413d9b7dint","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"int"}},{"label":" invalid_params_if(x, test)","kind":1,"sortText":"4145a578invalid_params_if","filterText":"invalid_params_if","insertText":"invalid_params_if(${1:x}, ${2:test})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"invalid_params_if(${1:x}, ${2:test})"}},{"label":" interp0_hw","kind":1,"sortText":"414603d7interp0_hw","filterText":"interp0_hw","insertText":"interp0_hw","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"interp0_hw"}},{"label":" interp1_hw","kind":1,"sortText":"414603d7interp1_hw","filterText":"interp1_hw","insertText":"interp1_hw","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"interp1_hw"}},{"label":" interp_hw_array","kind":1,"sortText":"414603d7interp_hw_array","filterText":"interp_hw_array","insertText":"interp_hw_array","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"interp_hw_array"}},{"label":" INT16_C(x)","kind":1,"sortText":"4153f483INT16_C","filterText":"INT16_C","insertText":"INT16_C(${1:x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"newText":"INT16_C(${1:x})"}}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":196,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 748

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'in'"},{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":9}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":104},"contentChanges":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"rangeLength":0,"text":"t"}]}}Content-Length: 282

{"jsonrpc":"2.0","id":197,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":9},"context":{"triggerKind":3}}}Content-Length: 222

{"jsonrpc":"2.0","id":198,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 33563

{"id":197,"result":{"isIncomplete":true,"items":[{"label":" int","kind":14,"sortText":"3e800000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int"}},{"label":" int_fast16_t","kind":8,"sortText":"40a7b70bint_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"sortText":"40a7b70bint_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"sortText":"40a7b70bint_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"sortText":"40a7b70bint_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int_fast8_t"}},{"label":" int_least16_t","kind":8,"sortText":"40a7b70bint_least16_t","filterText":"int_least16_t","insertText":"int_least16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int_least16_t"}},{"label":" int_least32_t","kind":8,"sortText":"40a7b70bint_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int_least32_t"}},{"label":" int_least64_t","kind":8,"sortText":"40a7b70bint_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int_least64_t"}},{"label":" int_least8_t","kind":8,"sortText":"40a7b70bint_least8_t","filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int_least8_t"}},{"label":" int16_t","kind":8,"sortText":"40aa2b09int16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int16_t"}},{"label":" int32_t","kind":8,"sortText":"40aa2b09int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int32_t"}},{"label":" int64_t","kind":8,"sortText":"40aa2b09int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int64_t"}},{"label":" int8_t","kind":8,"sortText":"40aa2b09int8_t","filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int8_t"}},{"label":" intmax_t","kind":8,"sortText":"40aa2b09intmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"intmax_t"}},{"label":" intptr_t","kind":8,"sortText":"40aa2b09intptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"intptr_t"}},{"label":" int_farptr_t","kind":8,"sortText":"40add229int_farptr_t","filterText":"int_farptr_t","insertText":"int_farptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int_farptr_t"}},{"label":" InternetDatagramSocket","kind":7,"documentation":{"kind":"markdown","value":"InternetDatagramSocket socket implementation."},"sortText":"40b044fcInternetDatagramSocket","filterText":"InternetDatagramSocket","insertText":"InternetDatagramSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"InternetDatagramSocket"}},{"label":" InternetSocket","kind":7,"documentation":{"kind":"markdown","value":"Socket implementation that uses IP network stack.  \nNot to be directly used by applications. Cannot be directly instantiated."},"sortText":"40b044fcInternetSocket","filterText":"InternetSocket","insertText":"InternetSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"InternetSocket"}},{"label":" int_fast24_t","kind":8,"sortText":"40b044fcint_fast24_t","filterText":"int_fast24_t","insertText":"int_fast24_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int_fast24_t"}},{"label":" int_least24_t","kind":8,"sortText":"40b044fcint_least24_t","filterText":"int_least24_t","insertText":"int_least24_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int_least24_t"}},{"label":" interp_hw_t","kind":8,"sortText":"40b36a9finterp_hw_t","filterText":"interp_hw_t","insertText":"interp_hw_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"interp_hw_t"}},{"label":" int","kind":1,"sortText":"40bd9b7dint","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"int"}},{"label":"•ino_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"40cdce87ino_t","filterText":"ino_t","insertText":"ino_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"ino_t"}},{"label":"•std::integer_sequence\u003ctypename _Tp, _Tp _Idx\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \nClass template integer_sequence"},"sortText":"40cf7affinteger_sequence","filterText":"integer_sequence","insertText":"std::integer_sequence\u003c${1:typename _Tp}, ${2:_Tp _Idx}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::integer_sequence\u003c${1:typename _Tp}, ${2:_Tp _Idx}\u003e"}},{"label":"•std::integral_constant\u003ctypename _Tp, _Tp __v\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nintegral_constant"},"sortText":"40cf7affintegral_constant","filterText":"integral_constant","insertText":"std::integral_constant\u003c${1:typename _Tp}, ${2:_Tp __v}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::integral_constant\u003c${1:typename _Tp}, ${2:_Tp __v}\u003e"}},{"label":"•std::internal(ios_base \u0026__base)","kind":3,"detail":"ios_base \u0026","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \n[27.4.5.2] adjustfield manipulators Calls base.setf(ios_base::internal, ios_base::adjustfield)."},"sortText":"40d0d9cdinternal","filterText":"internal","insertText":"std::internal(${1:ios_base \u0026__base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::internal(${1:ios_base \u0026__base})"}},{"label":" mbed::InterruptIn","kind":7,"documentation":{"kind":"markdown","value":"A digital interrupt input, used to call a function on a rising or falling edge  \n@note Synchronization level: Interrupt safe  \nExample:  \n@code // Flash an LED while waiting for events  \n#include \"mbed.h\"  \nInterruptIn event(p16);  \nDigitalOut led(LED1);  \nvoid trigger() { printf(\"triggered!\\\\n\");  \n}  \nint main() { // register trigger() to be called upon the rising edge of event event.rise(\u0026trigger);  \nwhile(1) { led = !led;  \nThisThread::sleep_for(250);  \n} }  \n@endcode"},"sortText":"40d1f902InterruptIn","filterText":"InterruptIn","insertText":"mbed::InterruptIn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"mbed::InterruptIn"}},{"label":"•std::int16_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int16_t","filterText":"int16_t","insertText":"std::int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int16_t"}},{"label":"•std::int32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int32_t","filterText":"int32_t","insertText":"std::int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int32_t"}},{"label":"•std::int64_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int64_t","filterText":"int64_t","insertText":"std::int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int64_t"}},{"label":"•std::int8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int8_t","filterText":"int8_t","insertText":"std::int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int8_t"}},{"label":"•std::int_fast16_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_fast16_t","filterText":"int_fast16_t","insertText":"std::int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int_fast16_t"}},{"label":"•std::int_fast32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_fast32_t","filterText":"int_fast32_t","insertText":"std::int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int_fast32_t"}},{"label":"•std::int_fast64_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_fast64_t","filterText":"int_fast64_t","insertText":"std::int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int_fast64_t"}},{"label":"•std::int_fast8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_fast8_t","filterText":"int_fast8_t","insertText":"std::int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int_fast8_t"}},{"label":"•std::int_least16_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_least16_t","filterText":"int_least16_t","insertText":"std::int_least16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int_least16_t"}},{"label":"•std::int_least32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_least32_t","filterText":"int_least32_t","insertText":"std::int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int_least32_t"}},{"label":"•std::int_least64_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_least64_t","filterText":"int_least64_t","insertText":"std::int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int_least64_t"}},{"label":"•std::int_least8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717int_least8_t","filterText":"int_least8_t","insertText":"std::int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::int_least8_t"}},{"label":"•std::intmax_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717intmax_t","filterText":"intmax_t","insertText":"std::intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::intmax_t"}},{"label":"•std::intptr_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40df8717intptr_t","filterText":"intptr_t","insertText":"std::intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::intptr_t"}},{"label":" mstd::integer_sequence","kind":18,"sortText":"40e0c600integer_sequence","filterText":"integer_sequence","insertText":"mstd::integer_sequence","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"mstd::integer_sequence"}},{"label":" is_nil_time(absolute_time_t t)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"\\\\brief Determine if the given timestamp is nil  \n\\\\ingroup timestamp  \n\\\\param t the timestamp  \n\\\\return true if the timestamp is nil  \n\\\\sa nil_time()"},"sortText":"40f75735is_nil_time","filterText":"is_nil_time","insertText":"is_nil_time(${1:absolute_time_t t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"is_nil_time(${1:absolute_time_t t})"}},{"label":" arduino::internal","kind":9,"sortText":"40fe67a9internal","filterText":"internal","insertText":"arduino::internal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"arduino::internal"}},{"label":" mbed::internal","kind":9,"sortText":"4102de8einternal","filterText":"internal","insertText":"mbed::internal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"mbed::internal"}},{"label":" rtos::internal","kind":9,"sortText":"4102de8einternal","filterText":"internal","insertText":"rtos::internal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"rtos::internal"}},{"label":" attachInterrupt(…)","kind":3,"detail":"[2 overloads]","sortText":"4103aae2attachInterrupt","filterText":"attachInterrupt","insertText":"attachInterrupt($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"attachInterrupt($0)"}},{"label":" attachInterruptParam(…)","kind":3,"detail":"[2 overloads]","sortText":"4103aae2attachInterruptParam","filterText":"attachInterruptParam","insertText":"attachInterruptParam($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"attachInterruptParam($0)"}},{"label":" detachInterrupt(…)","kind":3,"detail":"[2 overloads]","sortText":"4103aae2detachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"detachInterrupt($0)"}},{"label":" mbed::interface","kind":9,"sortText":"41043496interface","filterText":"interface","insertText":"mbed::interface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"mbed::interface"}},{"label":"•u_int","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"41068789u_int","filterText":"u_int","insertText":"u_int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"u_int"}},{"label":"•u_int16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"41068789u_int16_t","filterText":"u_int16_t","insertText":"u_int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"u_int16_t"}},{"label":"•u_int32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"41068789u_int32_t","filterText":"u_int32_t","insertText":"u_int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"u_int32_t"}},{"label":"•u_int64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"41068789u_int64_t","filterText":"u_int64_t","insertText":"u_int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"u_int64_t"}},{"label":"•u_int8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"41068789u_int8_t","filterText":"u_int8_t","insertText":"u_int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"u_int8_t"}},{"label":" prog_int16_t","kind":8,"sortText":"410aca83prog_int16_t","filterText":"prog_int16_t","insertText":"prog_int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"prog_int16_t"}},{"label":" prog_int32_t","kind":8,"sortText":"410aca83prog_int32_t","filterText":"prog_int32_t","insertText":"prog_int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"prog_int32_t"}},{"label":" prog_int64_t","kind":8,"sortText":"410aca83prog_int64_t","filterText":"prog_int64_t","insertText":"prog_int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"prog_int64_t"}},{"label":" prog_int8_t","kind":8,"sortText":"410aca83prog_int8_t","filterText":"prog_int8_t","insertText":"prog_int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"prog_int8_t"}},{"label":" ticker_interface_t","kind":8,"documentation":{"kind":"markdown","value":"Ticker's interface structure - required API for a ticker"},"sortText":"410c5c9aticker_interface_t","filterText":"ticker_interface_t","insertText":"ticker_interface_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"ticker_interface_t"}},{"label":" CellularInterface","kind":7,"sortText":"410da5d0CellularInterface","filterText":"CellularInterface","insertText":"CellularInterface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"CellularInterface"}},{"label":" EMACInterface","kind":7,"sortText":"410da5d0EMACInterface","filterText":"EMACInterface","insertText":"EMACInterface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"EMACInterface"}},{"label":" EthInterface","kind":7,"sortText":"410da5d0EthInterface","filterText":"EthInterface","insertText":"EthInterface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"EthInterface"}},{"label":" MeshInterface","kind":7,"sortText":"410da5d0MeshInterface","filterText":"MeshInterface","insertText":"MeshInterface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"MeshInterface"}},{"label":" NetworkInterface","kind":7,"sortText":"410da5d0NetworkInterface","filterText":"NetworkInterface","insertText":"NetworkInterface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"NetworkInterface"}},{"label":" PPPInterface","kind":7,"sortText":"410da5d0PPPInterface","filterText":"PPPInterface","insertText":"PPPInterface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"PPPInterface"}},{"label":" mbedtls_internal_aes_decrypt(mbedtls_aes_context *ctx, const unsigned char *input, unsigned char *output)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\brief Internal AES block decryption function. This is only exposed to allow overriding it using see  \n\\\\c MBEDTLS_AES_DECRYPT_ALT.  \n\\\\param ctx The AES context to use for decryption.  \n\\\\param input The ciphertext block.  \n\\\\param output The output (plaintext) block.  \n\\\\return \\\\c 0 on success."},"sortText":"410da5d0mbedtls_internal_aes_decrypt","filterText":"mbedtls_internal_aes_decrypt","insertText":"mbedtls_internal_aes_decrypt(${1:mbedtls_aes_context *ctx}, ${2:const unsigned char *input}, ${3:unsigned char *output})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"mbedtls_internal_aes_decrypt(${1:mbedtls_aes_context *ctx}, ${2:const unsigned char *input}, ${3:unsigned char *output})"}},{"label":" mbedtls_internal_aes_encrypt(mbedtls_aes_context *ctx, const unsigned char *input, unsigned char *output)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\brief Internal AES block encryption function. This is only exposed to allow overriding it using  \n\\\\c MBEDTLS_AES_ENCRYPT_ALT.  \n\\\\param ctx The AES context to use for encryption.  \n\\\\param input The plaintext block.  \n\\\\param output The output (ciphertext) block.  \n\\\\return \\\\c 0 on success."},"sortText":"410da5d0mbedtls_internal_aes_encrypt","filterText":"mbedtls_internal_aes_encrypt","insertText":"mbedtls_internal_aes_encrypt(${1:mbedtls_aes_context *ctx}, ${2:const unsigned char *input}, ${3:unsigned char *output})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"mbedtls_internal_aes_encrypt(${1:mbedtls_aes_context *ctx}, ${2:const unsigned char *input}, ${3:unsigned char *output})"}},{"label":" mbedtls_internal_sha512_process(mbedtls_sha512_context *ctx, const unsigned char *data)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\brief This function processes a single data block within the ongoing SHA-512 computation.  \nThis function is for internal use only.  \n\\\\param ctx The SHA-512 context. This must be initialized.  \n\\\\param data The buffer holding one block of data. This must be a readable buffer of length \\\\c 128 Bytes.  \n\\\\return \\\\c 0 on success.  \n\\\\return A negative error code on failure."},"sortText":"410da5d0mbedtls_internal_sha512_process","filterText":"mbedtls_internal_sha512_process","insertText":"mbedtls_internal_sha512_process(${1:mbedtls_sha512_context *ctx}, ${2:const unsigned char *data})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"mbedtls_internal_sha512_process(${1:mbedtls_sha512_context *ctx}, ${2:const unsigned char *data})"}},{"label":" NonMaskableInt_IRQn","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"2 Cortex-M0 Non Maskable Interrupt"},"sortText":"412f2acfNonMaskableInt_IRQn","filterText":"NonMaskableInt_IRQn","insertText":"NonMaskableInt_IRQn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"NonMaskableInt_IRQn"}},{"label":" mbed_assert_internal(const char *expr, const char *file, int line)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Internal mbed assert function which is invoked when MBED_ASSERT macro fails.  \nThis function is active only if NDEBUG is not defined prior to including this assert header file.  \nIn case of MBED_ASSERT failing condition, error() is called with the assertation message.  \n@param expr Expression to be checked.  \n@param file File where assertation failed.  \n@param line Failing assertation line number."},"sortText":"412f2acfmbed_assert_internal","filterText":"mbed_assert_internal","insertText":"mbed_assert_internal(${1:const char *expr}, ${2:const char *file}, ${3:int line})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"mbed_assert_internal(${1:const char *expr}, ${2:const char *file}, ${3:int line})"}},{"label":" arduino::attachInterrupt(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"C++ only overloaded version of attachInterrupt function"},"sortText":"41301b9dattachInterrupt","filterText":"attachInterrupt","insertText":"arduino::attachInterrupt($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"arduino::attachInterrupt($0)"}},{"label":"•std::is_integral\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_integral"},"sortText":"41320f7fis_integral","filterText":"is_integral","insertText":"std::is_integral\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::is_integral\u003c${1:typename _Tp}\u003e"}},{"label":"•std::make_integer_sequence\u003ctypename _Tp, _Tp _Num\u003e","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \nAlias template make_integer_sequence"},"sortText":"41320f7fmake_integer_sequence","filterText":"make_integer_sequence","insertText":"std::make_integer_sequence\u003c${1:typename _Tp}, ${2:_Tp _Num}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::make_integer_sequence\u003c${1:typename _Tp}, ${2:_Tp _Num}\u003e"}},{"label":"•std::set_intersection(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"4133a8c4set_intersection","filterText":"set_intersection","insertText":"std::set_intersection($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::set_intersection($0)"}},{"label":"•std::uniform_int_distribution\u003ctypename _IntType\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003crandom\u003e`  \n@brief Uniform discrete distribution for random numbers.  \nA discrete random distribution on the range @f$[min, max]@f$ with equal probability throughout the range."},"sortText":"4133a8c4uniform_int_distribution","filterText":"uniform_int_distribution","insertText":"std::uniform_int_distribution\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"std::uniform_int_distribution\u003c\u003e"}},{"label":" interrupts()","kind":1,"sortText":"413b6096interrupts","filterText":"interrupts","insertText":"interrupts()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"interrupts()"}},{"label":" interp0_hw","kind":1,"sortText":"414603d7interp0_hw","filterText":"interp0_hw","insertText":"interp0_hw","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"interp0_hw"}},{"label":" interp1_hw","kind":1,"sortText":"414603d7interp1_hw","filterText":"interp1_hw","insertText":"interp1_hw","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"interp1_hw"}},{"label":" interp_hw_array","kind":1,"sortText":"414603d7interp_hw_array","filterText":"interp_hw_array","insertText":"interp_hw_array","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"interp_hw_array"}},{"label":" mstd::is_integral","kind":18,"sortText":"41463c55is_integral","filterText":"is_integral","insertText":"mstd::is_integral","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"mstd::is_integral"}},{"label":" mstd::make_integer_sequence","kind":18,"sortText":"41463c55make_integer_sequence","filterText":"make_integer_sequence","insertText":"mstd::make_integer_sequence","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"mstd::make_integer_sequence"}},{"label":" INT16_C(x)","kind":1,"sortText":"414bc333INT16_C","filterText":"INT16_C","insertText":"INT16_C(${1:x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT16_C(${1:x})"}},{"label":" INT16_MAX","kind":1,"sortText":"414bc333INT16_MAX","filterText":"INT16_MAX","insertText":"INT16_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT16_MAX"}},{"label":" INT16_MIN","kind":1,"sortText":"414bc333INT16_MIN","filterText":"INT16_MIN","insertText":"INT16_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT16_MIN"}},{"label":" INT32_C(x)","kind":1,"sortText":"414bc333INT32_C","filterText":"INT32_C","insertText":"INT32_C(${1:x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT32_C(${1:x})"}},{"label":" INT32_MAX","kind":1,"sortText":"414bc333INT32_MAX","filterText":"INT32_MAX","insertText":"INT32_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT32_MAX"}},{"label":" INT32_MIN","kind":1,"sortText":"414bc333INT32_MIN","filterText":"INT32_MIN","insertText":"INT32_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT32_MIN"}},{"label":" INT64_C(x)","kind":1,"sortText":"414bc333INT64_C","filterText":"INT64_C","insertText":"INT64_C(${1:x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT64_C(${1:x})"}},{"label":" INT64_MAX","kind":1,"sortText":"414bc333INT64_MAX","filterText":"INT64_MAX","insertText":"INT64_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT64_MAX"}},{"label":" INT64_MIN","kind":1,"sortText":"414bc333INT64_MIN","filterText":"INT64_MIN","insertText":"INT64_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT64_MIN"}},{"label":" INT8_C(x)","kind":1,"sortText":"414bc333INT8_C","filterText":"INT8_C","insertText":"INT8_C(${1:x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT8_C(${1:x})"}},{"label":" INT8_MAX","kind":1,"sortText":"414bc333INT8_MAX","filterText":"INT8_MAX","insertText":"INT8_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT8_MAX"}},{"label":" INT8_MIN","kind":1,"sortText":"414bc333INT8_MIN","filterText":"INT8_MIN","insertText":"INT8_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT8_MIN"}},{"label":" INTMAX_C(x)","kind":1,"sortText":"415c25d2INTMAX_C","filterText":"INTMAX_C","insertText":"INTMAX_C(${1:x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INTMAX_C(${1:x})"}},{"label":" INTMAX_MAX","kind":1,"sortText":"415c25d2INTMAX_MAX","filterText":"INTMAX_MAX","insertText":"INTMAX_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INTMAX_MAX"}},{"label":" INTMAX_MIN","kind":1,"sortText":"415c25d2INTMAX_MIN","filterText":"INTMAX_MIN","insertText":"INTMAX_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INTMAX_MIN"}},{"label":" INTPTR_MAX","kind":1,"sortText":"415c25d2INTPTR_MAX","filterText":"INTPTR_MAX","insertText":"INTPTR_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INTPTR_MAX"}},{"label":" INTPTR_MIN","kind":1,"sortText":"415c25d2INTPTR_MIN","filterText":"INTPTR_MIN","insertText":"INTPTR_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INTPTR_MIN"}},{"label":" INT_FAST16_MAX","kind":1,"sortText":"415c25d2INT_FAST16_MAX","filterText":"INT_FAST16_MAX","insertText":"INT_FAST16_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":9}},"newText":"INT_FAST16_MAX"}}]},"jsonrpc":"2.0"}Content-Length: 223

{"id":198,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 1088

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":10}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":6}},"severity":3,"message":"To match this '('\n\nsketch_nov24a.ino.cpp:17:1: error: expected ')'"},{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":14}},"severity":3,"message":"To match this '{'\n\nsketch_nov24a.ino.cpp:17:1: error: expected '}'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":105},"contentChanges":[{"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":9}},"rangeLength":0,"text":" "}]}}Content-Length: 222

{"jsonrpc":"2.0","id":199,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 223

{"id":199,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 1089

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":11}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":6}},"severity":3,"message":"To match this '('\n\nsketch_nov24a.ino.cpp:17:1: error: expected ')'"},{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":14}},"severity":3,"message":"To match this '{'\n\nsketch_nov24a.ino.cpp:17:1: error: expected '}'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 499

{"jsonrpc":"2.0","id":200,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":11}},"message":"Expected unqualified-id","severity":1,"code":"expected_unqualified_id","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":200,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":105}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":106},"contentChanges":[{"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":201,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":6,"jsonrpc":"2.0"}Content-Length: 223

{"id":201,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 321

{"jsonrpc":"2.0","id":202,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":106}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":201}}Content-Length: 222

{"jsonrpc":"2.0","id":203,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":203}}Content-Length: 222

{"jsonrpc":"2.0","id":204,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":202}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":204}}Content-Length: 222

{"jsonrpc":"2.0","id":205,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":205}}Content-Length: 222

{"jsonrpc":"2.0","id":206,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 261

{"jsonrpc":"2.0","id":207,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":2}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":206}}Content-Length: 222

{"jsonrpc":"2.0","id":208,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":208}}Content-Length: 222

{"jsonrpc":"2.0","id":209,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":209}}Content-Length: 222

{"jsonrpc":"2.0","id":210,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":210}}Content-Length: 222

{"jsonrpc":"2.0","id":211,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":207}}Content-Length: 261

{"jsonrpc":"2.0","id":212,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":6}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":211}}Content-Length: 222

{"jsonrpc":"
>>>
Content-Length: 38

{"id":202,"result":[],"jsonrpc":"2.0"}Content-Length: 223

{"id":203,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":204,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":205,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":206,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":207,"result":[],"jsonrpc":"2.0"}Content-Length: 223

{"id":208,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":209,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":210,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":211,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":212,"result":[],"jsonrpc":"2.0"}
<<<
2.0","id":213,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 490

{"jsonrpc":"2.0","id":214,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":6}},"message":"To match this '('\n\nsketch_nov24a.ino.cpp:17:1: error: expected ')'","severity":3}]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":213}}Content-Length: 222

{"jsonrpc":"2.0","id":215,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":215}}Content-Length: 222

{"jsonrpc":"2.0","id":216,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 321

{"jsonrpc":"2.0","id":217,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":214}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":216}}Content-Length: 222

{"jsonrpc":"2.0","id":218,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":212}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":218}}Content-Length: 222

{"jsonrpc":"2.0","id":219,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 499

{"jsonrpc":"2.0","id":220,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":11}},"message":"Expected unqualified-id","severity":1,"code":"expected_unqualified_id","source":"clang"}]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":217}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":107},"contentChanges":[{"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":219}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":220}}Content-Length: 222

{"jsonrpc":"2.0","id":221,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/L
>>>
Content-Length: 223

{"id":213,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":214,"result":[],"jsonrpc":"2.0"}Content-Length: 223

{"id":215,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":216,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":217,"result":[],"jsonrpc":"2.0"}Content-Length: 223

{"id":218,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":219,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":220,"result":[],"jsonrpc":"2.0"}Content-Length: 223

{"id":221,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}
<<<
ocal/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":108},"contentChanges":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":221}}Content-Length: 222

{"jsonrpc":"2.0","id":222,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":109},"contentChanges":[{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":222}}Content-Length: 222

{"jsonrpc":"2.0","id":223,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":110},"contentChanges":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":223}}Content-Length: 222

{"jsonrpc":"2.0","id":224,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":111},"contentChanges":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":224}}Content-Length: 222

{"jsonrpc":"2.0","id":225,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":112},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":225}}Content-Length: 222

{"jsonrpc":"2.0","id":226,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":113},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":226}}Content-Length: 222

{"jsonrpc":"2.0","id":227,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textD
>>>
Content-Length: 223

{"id":222,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":223,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":224,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":225,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":226,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":227,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
ocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":114},"contentChanges":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":227}}Content-Length: 222

{"jsonrpc":"2.0","id":228,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":115},"contentChanges":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"rangeLength":0,"text":"w"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":228}}Content-Length: 222

{"jsonrpc":"2.0","id":229,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 282

{"jsonrpc":"2.0","id":230,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":3},"context":{"triggerKind":1}}}Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}Content-Length: 321

{"jsonrpc":"2.0","id":231,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":115}}}
>>>
Content-Length: 406

{"id":228,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 406

{"id":229,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 40626

{"id":230,"result":{"isIncomplete":true,"items":[{"label":" wchar_t","kind":14,"sortText":"3f000000wchar_t","filterText":"wchar_t","insertText":"wchar_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wchar_t"}},{"label":" while (condition) {statements}","kind":15,"sortText":"3f000000while","filterText":"while","insertText":"while (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"while (${1:condition}) {\n${0:statements}\n}"}},{"label":" wcscmp(const wchar_t *, const wchar_t *)","kind":3,"detail":"int","sortText":"40a7b70bwcscmp","filterText":"wcscmp","insertText":"wcscmp(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcscmp(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcscoll(const wchar_t *, const wchar_t *)","kind":3,"detail":"int","sortText":"40a7b70bwcscoll","filterText":"wcscoll","insertText":"wcscoll(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcscoll(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcscoll_l(const wchar_t *, const wchar_t *, locale_t)","kind":3,"detail":"int","sortText":"40a7b70bwcscoll_l","filterText":"wcscoll_l","insertText":"wcscoll_l(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcscoll_l(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:locale_t})"}},{"label":" wcscpy(wchar_t *, const wchar_t *)","kind":3,"detail":"wchar_t *","sortText":"40a7b70bwcscpy","filterText":"wcscpy","insertText":"wcscpy(${1:wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcscpy(${1:wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcscspn(const wchar_t *, const wchar_t *)","kind":3,"detail":"size_t","sortText":"40a7b70bwcscspn","filterText":"wcscspn","insertText":"wcscspn(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcscspn(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcsftime(wchar_t *, size_t, const wchar_t *, const struct tm *)","kind":3,"detail":"size_t","sortText":"40a7b70bwcsftime","filterText":"wcsftime","insertText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})"}},{"label":" wcslcat(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"size_t","sortText":"40a7b70bwcslcat","filterText":"wcslcat","insertText":"wcslcat(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcslcat(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcslcpy(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"size_t","sortText":"40a7b70bwcslcpy","filterText":"wcslcpy","insertText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcslen(const wchar_t *)","kind":3,"detail":"size_t","sortText":"40a7b70bwcslen","filterText":"wcslen","insertText":"wcslen(${1:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcslen(${1:const wchar_t *})"}},{"label":" wcsncasecmp_l(const wchar_t *, const wchar_t *, size_t, locale_t)","kind":3,"detail":"int","sortText":"40a7b70bwcsncasecmp_l","filterText":"wcsncasecmp_l","insertText":"wcsncasecmp_l(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsncasecmp_l(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t}, ${4:locale_t})"}},{"label":" wcsncat(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"wchar_t *","sortText":"40a7b70bwcsncat","filterText":"wcsncat","insertText":"wcsncat(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsncat(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcsncpy(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"wchar_t *","sortText":"40a7b70bwcsncpy","filterText":"wcsncpy","insertText":"wcsncpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsncpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcsnlen(const wchar_t *, size_t)","kind":3,"detail":"size_t","sortText":"40a7b70bwcsnlen","filterText":"wcsnlen","insertText":"wcsnlen(${1:const wchar_t *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsnlen(${1:const wchar_t *}, ${2:size_t})"}},{"label":" wcsnrtombs(char *, const wchar_t **, size_t, size_t, mbstate_t *)","kind":3,"detail":"size_t","sortText":"40a7b70bwcsnrtombs","filterText":"wcsnrtombs","insertText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})"}},{"label":" wcspbrk(const wchar_t *, const wchar_t *)","kind":3,"detail":"wchar_t *","sortText":"40a7b70bwcspbrk","filterText":"wcspbrk","insertText":"wcspbrk(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcspbrk(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcsrchr(const wchar_t *, wchar_t)","kind":3,"detail":"wchar_t *","sortText":"40a7b70bwcsrchr","filterText":"wcsrchr","insertText":"wcsrchr(${1:const wchar_t *}, ${2:wchar_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsrchr(${1:const wchar_t *}, ${2:wchar_t})"}},{"label":" wcsrtombs(char *, const wchar_t **, size_t, mbstate_t *)","kind":3,"detail":"size_t","sortText":"40a7b70bwcsrtombs","filterText":"wcsrtombs","insertText":"wcsrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:mbstate_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:mbstate_t *})"}},{"label":" wcsspn(const wchar_t *, const wchar_t *)","kind":3,"detail":"size_t","sortText":"40a7b70bwcsspn","filterText":"wcsspn","insertText":"wcsspn(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsspn(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcsstr(const wchar_t *, const wchar_t *)","kind":3,"detail":"wchar_t *","sortText":"40a7b70bwcsstr","filterText":"wcsstr","insertText":"wcsstr(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsstr(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcstod(const wchar_t *, wchar_t **)","kind":3,"detail":"double","sortText":"40a7b70bwcstod","filterText":"wcstod","insertText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})"}},{"label":" wcstof(const wchar_t *, wchar_t **)","kind":3,"detail":"float","sortText":"40a7b70bwcstof","filterText":"wcstof","insertText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})"}},{"label":" wcstoimax(const wchar_t *, wchar_t **, int)","kind":3,"detail":"intmax_t","sortText":"40a7b70bwcstoimax","filterText":"wcstoimax","insertText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":" wcstoimax_l(const wchar_t *, wchar_t **_restrict, int, locale_t)","kind":3,"detail":"intmax_t","sortText":"40a7b70bwcstoimax_l","filterText":"wcstoimax_l","insertText":"wcstoimax_l(${1:const wchar_t *}, ${2:wchar_t **_restrict}, ${3:int}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstoimax_l(${1:const wchar_t *}, ${2:wchar_t **_restrict}, ${3:int}, ${4:locale_t})"}},{"label":" wcstok(wchar_t *, const wchar_t *, wchar_t **)","kind":3,"detail":"wchar_t *","sortText":"40a7b70bwcstok","filterText":"wcstok","insertText":"wcstok(${1:wchar_t *}, ${2:const wchar_t *}, ${3:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstok(${1:wchar_t *}, ${2:const wchar_t *}, ${3:wchar_t **})"}},{"label":" wcstol(const wchar_t *, wchar_t **, int)","kind":3,"detail":"long","sortText":"40a7b70bwcstol","filterText":"wcstol","insertText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":" wcstold(const wchar_t *, wchar_t **)","kind":3,"detail":"long double","sortText":"40a7b70bwcstold","filterText":"wcstold","insertText":"wcstold(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstold(${1:const wchar_t *}, ${2:wchar_t **})"}},{"label":" wcstoll(const wchar_t *, wchar_t **, int)","kind":3,"detail":"long long","sortText":"40a7b70bwcstoll","filterText":"wcstoll","insertText":"wcstoll(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstoll(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":" wcstombs(char *, const wchar_t *, size_t)","kind":3,"detail":"size_t","sortText":"40a7b70bwcstombs","filterText":"wcstombs","insertText":"wcstombs(${1:char *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstombs(${1:char *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcstoumax(const wchar_t *, wchar_t **, int)","kind":3,"detail":"uintmax_t","sortText":"40a7b70bwcstoumax","filterText":"wcstoumax","insertText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":" wcstoumax_l(const wchar_t *, wchar_t **_restrict, int, locale_t)","kind":3,"detail":"uintmax_t","sortText":"40a7b70bwcstoumax_l","filterText":"wcstoumax_l","insertText":"wcstoumax_l(${1:const wchar_t *}, ${2:wchar_t **_restrict}, ${3:int}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstoumax_l(${1:const wchar_t *}, ${2:wchar_t **_restrict}, ${3:int}, ${4:locale_t})"}},{"label":" wcsxfrm(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"size_t","sortText":"40a7b70bwcsxfrm","filterText":"wcsxfrm","insertText":"wcsxfrm(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsxfrm(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcsxfrm_l(wchar_t *, const wchar_t *, size_t, locale_t)","kind":3,"detail":"size_t","sortText":"40a7b70bwcsxfrm_l","filterText":"wcsxfrm_l","insertText":"wcsxfrm_l(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcsxfrm_l(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t}, ${4:locale_t})"}},{"label":" wctob(wint_t)","kind":3,"detail":"int","sortText":"40a7b70bwctob","filterText":"wctob","insertText":"wctob(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wctob(${1:wint_t})"}},{"label":" wctomb(char *, wchar_t)","kind":3,"detail":"int","sortText":"40a7b70bwctomb","filterText":"wctomb","insertText":"wctomb(${1:char *}, ${2:wchar_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wctomb(${1:char *}, ${2:wchar_t})"}},{"label":" wctrans(const char *)","kind":3,"detail":"wctrans_t","sortText":"40a7b70bwctrans","filterText":"wctrans","insertText":"wctrans(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wctrans(${1:const char *})"}},{"label":" wctrans_l(const char *, locale_t)","kind":3,"detail":"wctrans_t","sortText":"40a7b70bwctrans_l","filterText":"wctrans_l","insertText":"wctrans_l(${1:const char *}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wctrans_l(${1:const char *}, ${2:locale_t})"}},{"label":" wctrans_t","kind":8,"sortText":"40a7b70bwctrans_t","filterText":"wctrans_t","insertText":"wctrans_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wctrans_t"}},{"label":" wctype(const char *)","kind":3,"detail":"wctype_t","sortText":"40a7b70bwctype","filterText":"wctype","insertText":"wctype(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wctype(${1:const char *})"}},{"label":" wctype_l(const char *, locale_t)","kind":3,"detail":"wctype_t","sortText":"40a7b70bwctype_l","filterText":"wctype_l","insertText":"wctype_l(${1:const char *}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wctype_l(${1:const char *}, ${2:locale_t})"}},{"label":" wctype_t","kind":8,"sortText":"40a7b70bwctype_t","filterText":"wctype_t","insertText":"wctype_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wctype_t"}},{"label":" wmemchr(const wchar_t *, wchar_t, size_t)","kind":3,"detail":"wchar_t *","sortText":"40a7b70bwmemchr","filterText":"wmemchr","insertText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})"}},{"label":" wmemcmp(const wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"int","sortText":"40a7b70bwmemcmp","filterText":"wmemcmp","insertText":"wmemcmp(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wmemcmp(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wmemcpy(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"wchar_t *","sortText":"40a7b70bwmemcpy","filterText":"wmemcpy","insertText":"wmemcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wmemcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wmemmove(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"wchar_t *","sortText":"40a7b70bwmemmove","filterText":"wmemmove","insertText":"wmemmove(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wmemmove(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wmemset(wchar_t *, wchar_t, size_t)","kind":3,"detail":"wchar_t *","sortText":"40a7b70bwmemset","filterText":"wmemset","insertText":"wmemset(${1:wchar_t *}, ${2:wchar_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wmemset(${1:wchar_t *}, ${2:wchar_t}, ${3:size_t})"}},{"label":" wscanf(const wchar_t *, ...)","kind":3,"detail":"int","sortText":"40a7b70bwscanf","filterText":"wscanf","insertText":"wscanf(${1:const wchar_t *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wscanf(${1:const wchar_t *, ...})"}},{"label":"•word","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40aa2b09word","filterText":"word","insertText":"word","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"word"}},{"label":" wint_t","kind":8,"sortText":"40add229wint_t","filterText":"wint_t","insertText":"wint_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wint_t"}},{"label":"•WATCHDOG_STATUS_INVALID_ARGUMENT","kind":20,"detail":"watchdog_status_t","documentation":{"kind":"markdown","value":"From `\"watchdog_api.h\"`  \nInvalid argument. *"},"sortText":"40af2acfWATCHDOG_STATUS_INVALID_ARGUMENT","filterText":"WATCHDOG_STATUS_INVALID_ARGUMENT","insertText":"WATCHDOG_STATUS_INVALID_ARGUMENT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"WATCHDOG_STATUS_INVALID_ARGUMENT"}},{"label":"•wait_ns(unsigned int ns)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_wait_api.h\"`  \nWaits a number of nanoseconds.  \nThis function spins the CPU to produce a small delay. It should normally only be used for delays of 10us (10000ns) or less. As it is calculated based on the expected execution time of a software loop, it may well run slower than requested based on activity from other threads and interrupts.  \nIf greater precision is required, this can be called from inside a critical section.  \n@param ns the number of nanoseconds to wait  \n@note wait_us() will likely give more precise time than wait_ns for large-enough delays, as it is based on a timer, but its set-up time may be excessive for the smallest microsecond counts, at which point wait_ns() is better.  \n@note Any delay larger than a millisecond (1000000ns) is liable to cause overflow in the internal loop calculation. You shouldn't normally be using this for such large delays anyway in real code, but be aware if calibrating. Make repeated calls for longer test runs.  \n@note You may call this function from ISR context."},"sortText":"40af2acfwait_ns","filterText":"wait_ns","insertText":"wait_ns(${1:unsigned int ns})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wait_ns(${1:unsigned int ns})"}},{"label":"•wait_us(int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_wait_api.h\"`  \nWaits a number of microseconds.  \n@param us the whole number of microseconds to wait  \n@note This function always spins to get the exact number of microseconds.  \nThis will affect power and multithread performance. Therefore, spinning for millisecond wait is not recommended, and ThisThread::sleep_for should be used instead.  \n@note You may call this function from ISR context, but large delays may impact system stability - interrupt handlers should take less than 50us."},"sortText":"40af2acfwait_us","filterText":"wait_us","insertText":"wait_us(${1:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wait_us(${1:int us})"}},{"label":"•watchdog_features_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"watchdog_api.h\"`  \nWatchdog features."},"sortText":"40af2acfwatchdog_features_t","filterText":"watchdog_features_t","insertText":"watchdog_features_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"watchdog_features_t"}},{"label":"•watchdog_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"watchdog_api.h\"`  \nStatus of a watchdog operation."},"sortText":"40af2acfwatchdog_status_t","filterText":"watchdog_status_t","insertText":"watchdog_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"watchdog_status_t"}},{"label":"•write(int fildes, const void *buf, size_t nbyte)","kind":3,"detail":"ssize_t","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40af2acfwrite","filterText":"write","insertText":"write(${1:int fildes}, ${2:const void *buf}, ${3:size_t nbyte})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"write(${1:int fildes}, ${2:const void *buf}, ${3:size_t nbyte})"}},{"label":"•WiFiInterface","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiInterface.h\"`"},"sortText":"40b044fcWiFiInterface","filterText":"WiFiInterface","insertText":"WiFiInterface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"WiFiInterface"}},{"label":" wcstombs","kind":18,"sortText":"40bf6ee9wcstombs","filterText":"wcstombs","insertText":"wcstombs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wcstombs"}},{"label":" wctomb","kind":18,"sortText":"40bf6ee9wctomb","filterText":"wctomb","insertText":"wctomb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"wctomb"}},{"label":"•std::wcschr(wchar_t *__p, wchar_t __c)","kind":3,"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40cf7affwcschr","filterText":"wcschr","insertText":"std::wcschr(${1:wchar_t *__p}, ${2:wchar_t __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcschr(${1:wchar_t *__p}, ${2:wchar_t __c})"}},{"label":"•std::wcspbrk(wchar_t *__s1, const wchar_t *__s2)","kind":3,"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40cf7affwcspbrk","filterText":"wcspbrk","insertText":"std::wcspbrk(${1:wchar_t *__s1}, ${2:const wchar_t *__s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcspbrk(${1:wchar_t *__s1}, ${2:const wchar_t *__s2})"}},{"label":"•std::wcsrchr(wchar_t *__p, wchar_t __c)","kind":3,"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40cf7affwcsrchr","filterText":"wcsrchr","insertText":"std::wcsrchr(${1:wchar_t *__p}, ${2:wchar_t __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcsrchr(${1:wchar_t *__p}, ${2:wchar_t __c})"}},{"label":"•std::wcsstr(wchar_t *__s1, const wchar_t *__s2)","kind":3,"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40cf7affwcsstr","filterText":"wcsstr","insertText":"std::wcsstr(${1:wchar_t *__s1}, ${2:const wchar_t *__s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcsstr(${1:wchar_t *__s1}, ${2:const wchar_t *__s2})"}},{"label":"•std::wfilebuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nClass for @c wchar_t file buffers."},"sortText":"40cf7affwfilebuf","filterText":"wfilebuf","insertText":"std::wfilebuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wfilebuf"}},{"label":"•std::wfstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`  \nClass for @c wchar_t mixed input and output file streams."},"sortText":"40cf7affwfstream","filterText":"wfstream","insertText":"std::wfstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wfstream"}},{"label":"•std::wifstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`  \nClass for @c wchar_t input file streams."},"sortText":"40cf7affwifstream","filterText":"wifstream","insertText":"std::wifstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wifstream"}},{"label":"•std::wios","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nBase class for @c wchar_t streams."},"sortText":"40cf7affwios","filterText":"wios","insertText":"std::wios","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wios"}},{"label":"•std::wiostream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \nBase class for @c wchar_t mixed input and output streams."},"sortText":"40cf7affwiostream","filterText":"wiostream","insertText":"std::wiostream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wiostream"}},{"label":"•std::wistream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \nBase class for @c wchar_t input streams."},"sortText":"40cf7affwistream","filterText":"wistream","insertText":"std::wistream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wistream"}},{"label":"•std::wistringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c wchar_t input memory streams."},"sortText":"40cf7affwistringstream","filterText":"wistringstream","insertText":"std::wistringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wistringstream"}},{"label":"•std::wmemchr(wchar_t *__p, wchar_t __c, size_t __n)","kind":3,"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40cf7affwmemchr","filterText":"wmemchr","insertText":"std::wmemchr(${1:wchar_t *__p}, ${2:wchar_t __c}, ${3:size_t __n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wmemchr(${1:wchar_t *__p}, ${2:wchar_t __c}, ${3:size_t __n})"}},{"label":"•std::wofstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`  \nClass for @c wchar_t output file streams."},"sortText":"40cf7affwofstream","filterText":"wofstream","insertText":"std::wofstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wofstream"}},{"label":"•std::wostream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003costream\u003e`  \nBase class for @c wchar_t output streams."},"sortText":"40cf7affwostream","filterText":"wostream","insertText":"std::wostream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wostream"}},{"label":"•std::wostringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c wchar_t output memory streams."},"sortText":"40cf7affwostringstream","filterText":"wostringstream","insertText":"std::wostringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wostringstream"}},{"label":"•std::ws(basic_istream\u003c_CharT, _Traits\u003e \u0026__is)","kind":3,"detail":"basic_istream\u003c_CharT, _Traits\u003e \u0026","documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \n@brief Quick and easy way to eat whitespace  \nThis manipulator extracts whitespace characters, stopping when the next character is non-whitespace, or when the input sequence is empty.  \nIf the sequence is empty, @c eofbit is set in the stream, but not  \n@c failbit.  \nThe current locale is used to distinguish whitespace characters.  \nExample:  \n@code MyClass mc;  \nstd::cin \u003e\u003e std::ws \u003e\u003e mc;  \n@endcode will skip leading whitespace before calling operator\u003e\u003e on cin and your object. Note that the same effect can be achieved by creating a std::basic_istream::sentry inside your definition of operator\u003e\u003e."},"sortText":"40cf7affws","filterText":"ws","insertText":"std::ws(${1:basic_istream\u003c_CharT, _Traits\u003e \u0026__is})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::ws(${1:basic_istream\u003c_CharT, _Traits\u003e \u0026__is})"}},{"label":"•std::wstreambuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nBase class for @c wchar_t buffers."},"sortText":"40cf7affwstreambuf","filterText":"wstreambuf","insertText":"std::wstreambuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wstreambuf"}},{"label":"•std::wstringbuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c wchar_t memory buffers."},"sortText":"40cf7affwstringbuf","filterText":"wstringbuf","insertText":"std::wstringbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wstringbuf"}},{"label":"•std::wstringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c wchar_t mixed input and output memory streams."},"sortText":"40cf7affwstringstream","filterText":"wstringstream","insertText":"std::wstringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wstringstream"}},{"label":"•std::weak_ptr\u003ctypename _Tp\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n@brief A smart pointer with weak semantics.  \nWith forwarding constructors and assignment operators."},"sortText":"40d0d9cdweak_ptr","filterText":"weak_ptr","insertText":"std::weak_ptr\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::weak_ptr\u003c${1:typename _Tp}\u003e"}},{"label":"•std::wstreampos","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nFile position for wchar_t streams."},"sortText":"40d0d9cdwstreampos","filterText":"wstreampos","insertText":"std::wstreampos","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wstreampos"}},{"label":"•std::wstring","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \nA string of @c wchar_t"},"sortText":"40d0d9cdwstring","filterText":"wstring","insertText":"std::wstring","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wstring"}},{"label":"•rtos::Waiter","kind":22,"documentation":{"kind":"markdown","value":"From `\"ConditionVariable.h\"`"},"sortText":"40d1f902Waiter","filterText":"Waiter","insertText":"rtos::Waiter","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"rtos::Waiter"}},{"label":"•mbed::Watchdog","kind":7,"documentation":{"kind":"markdown","value":"From `\"Watchdog.h\"`  \nA hardware watchdog timer that resets the system in the case of system failures or malfunctions. If you fail to refresh the Watchdog timer periodically,  \nit resets the system after a set period of time.  \nThere is only one instance of the Watchdog class in the system, which directly maps to the hardware.  \nUse Watchdog::get_instance to obtain a reference.  \nWatchdog::start initializes a system timer with a time period specified in  \n@a timeout param. This timer counts down and triggers a system reset when it wraps. To prevent the system reset, you must periodically kick or refresh the timer by calling Watchdog::kick, which resets the countdown to the initial value.  \nExample:  \n@code Watchdog \u0026watchdog = Watchdog::get_instance();  \nwatchdog.start(500);  \nwhile (true) { // kick watchdog regularly within provided timeout watchdog.kick();  \n// Application code }  \n@endcode  \n@note Synchronization level: Interrupt safe"},"sortText":"40d1f902Watchdog","filterText":"Watchdog","insertText":"mbed::Watchdog","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"mbed::Watchdog"}},{"label":"•rtos::Kernel::wait_for_u32_forever","kind":6,"detail":"const Clock::duration_u32","documentation":{"kind":"markdown","value":"From `\"Kernel.h\"`  \nMagic \"wait forever\" constant for Kernel::Clock::duration_u32-based APIs  \nMany duration_u32-based APIs treat duration_u32(0xFFFFFFFF) as \"wait forever\"."},"sortText":"40d1f902wait_for_u32_forever","filterText":"wait_for_u32_forever","insertText":"rtos::Kernel::wait_for_u32_forever","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"rtos::Kernel::wait_for_u32_forever"}},{"label":"•rtos::Kernel::wait_for_u32_max","kind":6,"detail":"const Clock::duration_u32","documentation":{"kind":"markdown","value":"From `\"Kernel.h\"`  \nMaximum duration for Kernel::Clock::duration_u32-based APIs  \n@note As duration_u32-based APIs pass through straight to CMSIS-RTOS, they will interpret duration_u32(0xFFFFFFFF) as \"wait forever\". Indicate maximum wait time of 0xFFFFFFFE for these calls (which is ~49 days)."},"sortText":"40d1f902wait_for_u32_max","filterText":"wait_for_u32_max","insertText":"rtos::Kernel::wait_for_u32_max","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"rtos::Kernel::wait_for_u32_max"}},{"label":"•std::wcrtomb","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcrtomb","filterText":"wcrtomb","insertText":"std::wcrtomb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcrtomb"}},{"label":"•std::wcscat","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcscat","filterText":"wcscat","insertText":"std::wcscat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcscat"}},{"label":"•std::wcschr","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcschr","filterText":"wcschr","insertText":"std::wcschr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcschr"}},{"label":"•std::wcscmp","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcscmp","filterText":"wcscmp","insertText":"std::wcscmp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcscmp"}},{"label":"•std::wcscoll","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcscoll","filterText":"wcscoll","insertText":"std::wcscoll","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcscoll"}},{"label":"•std::wcscpy","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcscpy","filterText":"wcscpy","insertText":"std::wcscpy","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcscpy"}},{"label":"•std::wcscspn","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcscspn","filterText":"wcscspn","insertText":"std::wcscspn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcscspn"}},{"label":"•std::wcsftime","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcsftime","filterText":"wcsftime","insertText":"std::wcsftime","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcsftime"}},{"label":"•std::wcslen","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcslen","filterText":"wcslen","insertText":"std::wcslen","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcslen"}},{"label":"•std::wcsncat","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcsncat","filterText":"wcsncat","insertText":"std::wcsncat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcsncat"}},{"label":"•std::wcsncmp","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcsncmp","filterText":"wcsncmp","insertText":"std::wcsncmp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcsncmp"}},{"label":"•std::wcsncpy","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcsncpy","filterText":"wcsncpy","insertText":"std::wcsncpy","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcsncpy"}},{"label":"•std::wcspbrk","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcspbrk","filterText":"wcspbrk","insertText":"std::wcspbrk","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcspbrk"}},{"label":"•std::wcsrchr","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcsrchr","filterText":"wcsrchr","insertText":"std::wcsrchr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcsrchr"}},{"label":"•std::wcsrtombs","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40df8717wcsrtombs","filterText":"wcsrtombs","insertText":"std::wcsrtombs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"newText":"std::wcsrtombs"}}]},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 38

{"id":231,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":116},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"rangeLength":0,"text":"b"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":231}}Content-Length: 222

{"jsonrpc":"2.0","id":232,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":232,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":233,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":4},"context":{"triggerKind":3}}}Content-Length: 321

{"jsonrpc":"2.0","id":234,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 69

{"id":233,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 38

{"id":234,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":117},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"rangeLength":0,"text":"j"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":235,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":235,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":236,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":5},"context":{"triggerKind":1}}}
>>>
Content-Length: 69

{"id":236,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 490

{"jsonrpc":"2.0","id":237,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":6}},"message":"To match this '('\n\nsketch_nov24a.ino.cpp:17:1: error: expected ')'","severity":3}]}}}
>>>
Content-Length: 38

{"id":237,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":118},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":238,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":238,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":119},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":239,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":239,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":120},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"rangeLength":0,"text":"j"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":240,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":240,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":241,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":4},"context":{"triggerKind":1}}}
>>>
Content-Length: 69

{"id":241,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 321

{"jsonrpc":"2.0","id":242,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":242,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":121},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"rangeLength":0,"text":"i"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":243,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":243,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":244,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":5},"context":{"triggerKind":1}}}
>>>
Content-Length: 69

{"id":244,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 490

{"jsonrpc":"2.0","id":245,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":6}},"message":"To match this '('\n\nsketch_nov24a.ino.cpp:17:1: error: expected ')'","severity":3}]}}}
>>>
Content-Length: 38

{"id":245,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":122},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":246,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":246,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1670

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":10}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":0}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nsketch_nov24a.ino.cpp:13:6: note: to match this '('"},{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":6}},"severity":3,"message":"To match this '('\n\nsketch_nov24a.ino.cpp:22:1: error: expected ')'"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'\n\nsketch_nov24a.ino.cpp:11:14: note: to match this '{'"},{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":14}},"severity":3,"message":"To match this '{'\n\nsketch_nov24a.ino.cpp:22:1: error: expected '}'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":123},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":247,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'wj'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":247,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'w'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 499

{"jsonrpc":"2.0","id":248,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":3}},"message":"Use of undeclared identifier 'w'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":248,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":123}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":124},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"rangeLength":0,"text":"h"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":249,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":249,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":250,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":4},"context":{"triggerKind":1}}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'wh'"}]},"jsonrpc":"2.0"}Content-Length: 394

{"id":250,"result":{"isIncomplete":true,"items":[{"label":" while (condition) {statements}","kind":15,"sortText":"3f000000while","filterText":"while","insertText":"while (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":4}},"newText":"while (${1:condition}) {\n${0:statements}\n}"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":125},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"rangeLength":0,"text":"i"}]}}Content-Length: 282

{"jsonrpc":"2.0","id":251,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":5},"context":{"triggerKind":3}}}Content-Length: 222

{"jsonrpc":"2.0","id":252,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 1286

{"id":251,"result":{"isIncomplete":false,"items":[{"label":" while (condition) {statements}","kind":15,"sortText":"3f000000while","filterText":"while","insertText":"while (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":5}},"newText":"while (${1:condition}) {\n${0:statements}\n}"}},{"label":"•isWhitespace(int c)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"api/WCharacter.h\"`  \nChecks for a blank character, that is, a space or a tab."},"sortText":"4062118fisWhitespace","filterText":"isWhitespace","insertText":"isWhitespace(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":5}},"newText":"isWhitespace(${1:int c})"}},{"label":"•SKIP_WHITESPACE","kind":20,"detail":"arduino::LookaheadMode","documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`  \nOnly tabs, spaces, line feeds \u0026 carriage returns are skipped."},"sortText":"409e623aSKIP_WHITESPACE","filterText":"SKIP_WHITESPACE","insertText":"SKIP_WHITESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":5}},"newText":"SKIP_WHITESPACE"}}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":252,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'whi'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":126},"contentChanges":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"rangeLength":0,"text":"e"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":253,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":253,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 398

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'whie'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":127},"contentChanges":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":6}},"rangeLength":0,"text":"l"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":254,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 406

{"id":254,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 399

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'whiel'"}]},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 503

{"jsonrpc":"2.0","id":255,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":7}},"message":"Use of undeclared identifier 'whiel'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":8,"jsonrpc":"2.0"}Content-Length: 38

{"id":255,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":128},"contentChanges":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":255}}Content-Length: 222

{"jsonrpc":"2.0","id":256,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":129},"contentChanges":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":256}}Content-Length: 222

{"jsonrpc":"2.0","id":257,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 503

{"jsonrpc":"2.0","id":258,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":7}},"message":"Use of undeclared identifier 'whiel'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":130},"contentChanges":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"rangeLength":0,"text":"l"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":257}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":258}}Content-Length: 222

{"jsonrpc":"2.0","id":259,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":131},"contentChanges":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":6}},"rangeLength":0,"text":"e"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":259}}Content-Length: 222

{"jsonrpc":"2.0","id":260,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 503

{"jsonrpc":"2.0","id":261,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":7}},"message":"Use of undeclared identifier 'whiel'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved
>>>
Content-Length: 406

{"id":256,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 399

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'whiel'"}]},"jsonrpc":"2.0"}Content-Length: 398

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'whie'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":257,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'whi'"}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":258,"result":[],"jsonrpc":"2.0"}Content-Length: 398

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'whil'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":259,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 223

{"id":260,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":261,"result":[],"jsonrpc":"2.0"}
<<<
20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":131}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":132},"contentChanges":[{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":7}},"rangeLength":0,"text":"()"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":260}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":261}}Content-Length: 222

{"jsonrpc":"2.0","id":262,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 328

{"jsonrpc":"2.0","id":263,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":8},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}Content-Length: 321

{"jsonrpc":"2.0","id":264,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"context":{"diagnostics":[]}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":133},"contentChanges":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"rangeLength":0,"text":"1"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":262}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":264}}Content-Length: 222

{"jsonrpc":"2.0","id":265,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":263}}Content-Length: 304

{"jsonrpc":"2.0","id":266,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":9},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 321

{"jsonrpc":"2.0","id":267,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":133}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":265}}Content-Length: 222

{"jsonrpc":"2.0","id":268,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":266}}Content-Length: 305

{"jsonrpc":"2.0","id":269,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":10},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Leng
>>>
Content-Length: 771

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'while'"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'\n\nsketch_nov24a.ino.cpp:11:14: note: to match this '{'"},{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":14}},"severity":3,"message":"To match this '{'\n\nsketch_nov24a.ino.cpp:22:1: error: expected '}'"}]},"jsonrpc":"2.0"}Content-Length: 406

{"id":262,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 548

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":9}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 93

{"id":263,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 38

{"id":264,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":265,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 381

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 93

{"id":266,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 38

{"id":267,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":268,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 93

{"id":269,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
th: 323

{"jsonrpc":"2.0","id":270,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":267}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":134},"contentChanges":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":268}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":270}}Content-Length: 222

{"jsonrpc":"2.0","id":271,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":269}}Content-Length: 305

{"jsonrpc":"2.0","id":272,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":11},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":135},"contentChanges":[{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"rangeLength":0,"text":"*"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":271}}Content-Length: 222

{"jsonrpc":"2.0","id":273,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":272}}Content-Length: 305

{"jsonrpc":"2.0","id":274,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":12},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 323

{"jsonrpc":"2.0","id":275,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":12}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":136},"contentChanges":[{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":273}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":275}}Content-Length: 222

{"jsonrpc":"2.0","id":276,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":274}}Content-Length: 305

{"jsonrpc":"2.0","id":277,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/
>>>
Content-Length: 38

{"id":270,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":271,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 381

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 93

{"id":272,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 406

{"id":273,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 383

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 93

{"id":274,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 38

{"id":275,"result":[],"jsonrpc":"2.0"}Content-Length: 406

{"id":276,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}
<<<
Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":11},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":137},"contentChanges":[{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"rangeLength":0,"text":"{}"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":276}}Content-Length: 222

{"jsonrpc":"2.0","id":278,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":138},"contentChanges":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":13}},"rangeLength":1,"text":"}"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":278}}Content-Length: 222

{"jsonrpc":"2.0","id":279,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":277}}Content-Length: 305

{"jsonrpc":"2.0","id":280,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":13},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 323

{"jsonrpc":"2.0","id":281,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":13}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":138}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":139},"contentChanges":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":279}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":281}}Content-Length: 222

{"jsonrpc":"2.0","id":282,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":280}}Content-Length: 305

{"jsonrpc":"2.0","id":283,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":12},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 323

{"jsonrpc":"2.0","id":284,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":12},"end":{"line":5
>>>
Content-Length: 381

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 93

{"id":277,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 406

{"id":278,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 406

{"id":279,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":7,"character":1}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":9,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":9,"character":5},"end":{"line":9,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 93

{"id":280,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 38

{"id":281,"result":[],"jsonrpc":"2.0"}Content-Length: 223

{"id":282,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":13,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 796

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":12},"end":{"line":9,"character":13}},"severity":1,"code":"function_definition_not_allowed","source":"clang","message":"Function definition is not allowed here"},{"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'\n\nsketch_nov24a.ino.cpp:11:14: note: to match this '{'"},{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":14}},"severity":3,"message":"To match this '{'\n\nsketch_nov24a.ino.cpp:22:1: error: expected '}'"}]},"jsonrpc":"2.0"}Content-Length: 93

{"id":283,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
,"character":12}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":139}}}Content-Length: 351

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":140},"contentChanges":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":12}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":282}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":284}}Content-Length: 222

{"jsonrpc":"2.0","id":285,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":283}}Content-Length: 304

{"jsonrpc":"2.0","id":286,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":6,"character":4},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":140}}}Content-Length: 451

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":141},"contentChanges":[{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":4}},"rangeLength":0,"text":"\n    "},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":4}},"rangeLength":4,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":285}}Content-Length: 222

{"jsonrpc":"2.0","id":287,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":286}}Content-Length: 304

{"jsonrpc":"2.0","id":288,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":4},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":141}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":142},"contentChanges":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":4}},"rangeLength":4,"text":"  }"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":287}}Content-Length: 222

{"jsonrpc":"2.0","id":289,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":288}}Content-Length: 304

{"jsonrpc":"2.0","id":290,"method":"textDocument/signatureHelp","params":{"textDocument"
>>>
Content-Length: 38

{"id":284,"result":[],"jsonrpc":"2.0"}Content-Length: 223

{"id":285,"result":[{"name":"setup","kind":12,"range":{"start":{"line":3,"character":0},"end":{"line":14,"character":0}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}}],"jsonrpc":"2.0"}Content-Length: 591

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":12},"end":{"line":10,"character":13}},"severity":1,"code":"function_definition_not_allowed","source":"clang","message":"Function definition is not allowed here"},{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":14}},"severity":3,"message":"To match this '{'\n\nsketch_nov24a.ino.cpp:23:1: error: expected '}'"}]},"jsonrpc":"2.0"}Content-Length: 93

{"id":286,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3207

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10760,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\mirko\\AppData\\Local\\Temp\\.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh\\sketch_nov24a","rootUri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","name":"sketch_nov24a"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 373

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","languageId":"cpp","version":150,"text":"#define LEDBLUE 2\n#define BUTTON_1 12\n\nbool s\n\nvoid setup() {\n  \n  while(1) {\n\n  }\n\n}\n\nvoid loop() {\n  \n\n}\n"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":151},"contentChanges":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":6}},"rangeLength":0,"text":"t"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":152},"contentChanges":[{"range":{"start":{"line":3,"character":7},"end":{"line":3,"character":7}},"rangeLength":0,"text":"a"}]}}Content-Length: 319

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":8},"end":{"line":3,"character":8}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":153},"contentChanges":[{"range":{"start":{"line":3,"character":8},"end":{"line":3,"character":8}},"rangeLength":0,"text":"t"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 220

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 280

{"jsonrpc":"2.0","id":4,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":3,"character":9},"context":{"triggerKind":1}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":154},"contentChanges":[{"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}},"rangeLength":0,"text":"y"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 220

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 321

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":10}},"context":{"diagnostics":[]}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":155},"contentChanges":[{"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 220

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 619

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'boolstatusvoid'"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 619

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'boolstatusvoid'"},{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 590

{"id":2,"result":[{"name":"sta","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":8}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":8}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 591

{"id":3,"result":[{"name":"stat","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":9}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 6881

{"id":4,"result":{"isIncomplete":true,"items":[{"label":"•stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ee51eb8stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"stat"}},{"label":"•stat(const char *__path, struct stat *__sbuf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3fff2f3bstat","filterText":"stat","insertText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})"}},{"label":"•statvfs(const char *path, struct statvfs *buf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})"}},{"label":"•statvfs","kind":22,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"statvfs"}},{"label":"•PinStatus","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40a0a3cfPinStatus","filterText":"PinStatus","insertText":"PinStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"PinStatus"}},{"label":"•std::static_pointer_cast(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40a94eb8static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"std::static_pointer_cast($0)"}},{"label":"•pwm_get_irq_status_mask()","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Get PWM interrupt status, raw  \n\\\\ingroup hardware_pwm  \n\\\\return Bitmask of all PWM interrupts currently set"},"sortText":"410029b5pwm_get_irq_status_mask","filterText":"pwm_get_irq_status_mask","insertText":"pwm_get_irq_status_mask()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"pwm_get_irq_status_mask()"}},{"label":"•std::__static_abs\u003cintmax_t _Pn\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`"},"sortText":"4288b34c__static_abs","filterText":"__static_abs","insertText":"std::__static_abs\u003c${1:intmax_t _Pn}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"std::__static_abs\u003c${1:intmax_t _Pn}\u003e"}},{"label":"•std::__static_gcd\u003cintmax_t _Pn, intmax_t _Qn\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`"},"sortText":"4288b34c__static_gcd","filterText":"__static_gcd","insertText":"std::__static_gcd\u003c${1:intmax_t _Pn}, ${2:intmax_t _Qn}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"std::__static_gcd\u003c${1:intmax_t _Pn}, ${2:intmax_t _Qn}\u003e"}},{"label":"•std::__static_sign\u003cintmax_t _Pn\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`  \n@defgroup ratio Rational Arithmetic  \n@ingroup utilities  \nCompile time representation of finite rational numbers.  \n@{"},"sortText":"4288b34c__static_sign","filterText":"__static_sign","insertText":"std::__static_sign\u003c${1:intmax_t _Pn}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"std::__static_sign\u003c${1:intmax_t _Pn}\u003e"}},{"label":"•std::__is_static_castable\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \n\\_\\_is_static_castable"},"sortText":"429f2ea3__is_static_castable","filterText":"__is_static_castable","insertText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::__is_static_castable_impl\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"429f2ea3__is_static_castable_impl","filterText":"__is_static_castable_impl","insertText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::__is_static_castable_safe\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"429f2ea3__is_static_castable_safe","filterText":"__is_static_castable_safe","insertText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::__do_is_static_castable_impl","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nThe hardest part of this trait is the binary direct-initialization case, because we hit into a functional cast of the form T(arg).  \nThis implementation uses different strategies depending on the target type to reduce the test overhead as much as possible:  \na) For a reference target type, we use a static_cast expression modulo its extra cases.  \nb) For a non-reference target type we use a ::new expression."},"sortText":"42b5a9f9__do_is_static_castable_impl","filterText":"__do_is_static_castable_impl","insertText":"std::__do_is_static_castable_impl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}},"newText":"std::__do_is_static_castable_impl"}}]},"jsonrpc":"2.0"}Content-Length: 594

{"id":5,"result":[{"name":"staty","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":10}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 36

{"id":6,"result":[],"jsonrpc":"2.0"}
<<<
:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 319

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":156},"contentChanges":[{"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}},"rangeLength":0,"text":"u"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}Content-Length: 220

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":10}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":156}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":157},"contentChanges":[{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":10}},"rangeLength":0,"text":"s"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 221

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":11},"end":{"line":3,"character":11}},"context":{"diagnostics":[]}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":158},"contentChanges":[{"range":{"start":{"line":3,"character":11},"end":{"line":3,"character":11}},"rangeLength":0,"text":"B"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 221

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":12},"end":{"line":3,"character":12}},"context":{"diagnostics":[]}}}Content-Lengt
>>>
Content-Length: 591

{"id":7,"result":[{"name":"stat","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":9}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 36

{"id":8,"result":[],"jsonrpc":"2.0"}Content-Length: 594

{"id":9,"result":[{"name":"statu","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":10}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":10}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}Content-Length: 596

{"id":11,"result":[{"name":"status","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":11}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":11}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":12,"result":[],"jsonrpc":"2.0"}Content-Length: 597

{"id":13,"result":[{"name":"statusB","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":12}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":14,"result":[],"jsonrpc":"2.0"}
<<<
h: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":159},"contentChanges":[{"range":{"start":{"line":3,"character":12},"end":{"line":3,"character":12}},"rangeLength":0,"text":"l"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":13}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}Content-Length: 221

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 493

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":14}},"message":"To match this '{'\n\nsketch_nov24a.ino.cpp:23:1: error: expected '}'","severity":3}]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":160},"contentChanges":[{"range":{"start":{"line":3,"character":12},"end":{"line":3,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}Content-Length: 221

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":12},"end":{"line":3,"character":12}},"context":{"diagnostics":[]}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":161},"contentChanges":[{"range":{"start":{"line":3,"character":12},"end":{"line":3,"character":12}},"rangeLength":0,"text":"L"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}Content-Length: 221

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 493

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":14}},"message":"To match this '{'\n\nsketch_nov24a.ino.cpp:23:1: error: expected '}'","severity":3}]}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":162},"contentChanges":[{"range":{"start":{"line":3,"character":13},"end":{"line":3,"character":13}},"rangeLength":0,"text":"U"}]}}Co
>>>
Content-Length: 598

{"id":15,"result":[{"name":"statusBl","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":13}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":13}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}Content-Length: 597

{"id":17,"result":[{"name":"statusB","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":12}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}Content-Length: 598

{"id":19,"result":[{"name":"statusBL","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":13}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":13}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":20,"result":[],"jsonrpc":"2.0"}
<<<
ntent-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}Content-Length: 221

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":163},"contentChanges":[{"range":{"start":{"line":3,"character":14},"end":{"line":3,"character":14}},"rangeLength":0,"text":"Y"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}Content-Length: 221

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":164},"contentChanges":[{"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}},"rangeLength":0,"text":"E"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 221

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":16},"end":{"line":3,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":165},"contentChanges":[{"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":16}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":23}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}Content-Length: 221

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":166},"contentChanges":[{"range":{"start":{"line":3,"character":14},"end":{"line":3,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 221

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":167},"contentChanges":[{"range":{"start":{"line":3,"character":14},"end":{"line":3,"character":14}},"rangeLength":0,"text":"E"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":26}}Content-
>>>
Content-Length: 599

{"id":21,"result":[{"name":"statusBLU","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":14}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":22,"result":[{"name":"statusBLUY","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":15}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 601

{"id":23,"result":[{"name":"statusBLUYE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":16}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":24,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":25,"result":[{"name":"statusBLUY","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":15}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 599

{"id":26,"result":[{"name":"statusBLU","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":14}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":14}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Length: 221

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":168},"contentChanges":[{"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}Content-Length: 221

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":169},"contentChanges":[{"range":{"start":{"line":3,"character":16},"end":{"line":3,"character":16}},"rangeLength":0,"text":"="}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":28}}Content-Length: 221

{"jsonrpc":"2.0","id":29,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":170},"contentChanges":[{"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":29}}Content-Length: 221

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":171},"contentChanges":[{"range":{"start":{"line":3,"character":18},"end":{"line":3,"character":18}},"rangeLength":0,"text":"f"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":30}}Content-Length: 221

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":172},"contentChanges":[{"range":{"start":{"line":3,"character":19},"end":{"line":3,"character":19}},"rangeLength":0,"text":"a"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 221

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":173},"contentChanges":[{"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":20}},"rangeLength":0,"text":
>>>
Content-Length: 600

{"id":27,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":15}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":28,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":15}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":29,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":15}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":30,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":15}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":31,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":19}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":32,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":20}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
"l"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":32}}Content-Length: 221

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":174},"contentChanges":[{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"rangeLength":0,"text":"s"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":33}}Content-Length: 221

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":175},"contentChanges":[{"range":{"start":{"line":3,"character":22},"end":{"line":3,"character":22}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 221

{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":23},"end":{"line":3,"character":23}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":175}}}Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":176},"contentChanges":[{"range":{"start":{"line":3,"character":23},"end":{"line":3,"character":23}},"rangeLength":0,"text":";"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":35}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}Content-Length: 221

{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":3,"character":24},"end":{"line":3,"character":24}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":176}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":37}}Content-Length: 221

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-
>>>
Content-Length: 600

{"id":33,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":21}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":34,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":22}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":35,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":36,"result":[],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/31","percentage":87.09677419354838,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}Content-Length: 600

{"id":37,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":38,"result":[],"jsonrpc":"2.0"}
<<<
unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":38}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":177},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":0}},"rangeLength":0,"text":"    "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":39}}Content-Length: 221

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":177}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 221

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 451

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":178},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":4}},"rangeLength":4,"text":""},{"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":41}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}Content-Length: 221

{"jsonrpc":"2.0","id":43,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 449

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":179},"contentChanges":[{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":43}}Content-Length: 221

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":179}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":180},"contentChanges":[{"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 63

{"jsonr
>>>
Content-Length: 600

{"id":39,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":40,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":41,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":42,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":43,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":44,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":13,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":15,"character":0},"end":{"line":18,"character":1}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}}],"jsonrpc":"2.0"}
<<<
pc":"2.0","method":"$/cancelRequest","params":{"id":44}}Content-Length: 221

{"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":181},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":45}}Content-Length: 221

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":182},"contentChanges":[{"range":{"start":{"line":5,"character":14},"end":{"line":6,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":46}}Content-Length: 221

{"jsonrpc":"2.0","id":47,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":182}}}Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":47}}Content-Length: 221

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":45,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":13,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":15,"character":0},"end":{"line":18,"character":1}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":46,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":47,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":48,"result":[],"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 600

{"id":49,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":48}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":183},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":0}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":49}}Content-Length: 221

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":50,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":184},"contentChanges":[{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":1}},"rangeLength":0,"text":" "}]}}Content-Length: 221

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":51,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":185},"contentChanges":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":2}},"rangeLength":0,"text":" "}]}}Content-Length: 221

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":52,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":186},"contentChanges":[{"range":{"start":{"line":8,"character":3},"end":{"line":8,"character":3}},"rangeLength":0,"text":" "}]}}Content-Length: 221

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":53,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/31","percentage":93.54838709677419,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":186}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":187},"contentChanges":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":4}},"rangeLength":0,"text":"s"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":54,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":55,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":5},"context":{"triggerKind":1}}}
>>>
Content-Length: 38782

{"id":55,"result":{"isIncomplete":true,"items":[{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"3f000000sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"3f000000sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"struct"}},{"label":" switch (condition) {cases}","kind":15,"sortText":"3f000000switch","filterText":"switch","insertText":"switch (${1:condition}) {\n${0:cases}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"switch (${1:condition}) {\n${0:cases}\n}"}},{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3f2cccccsetup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"setup()"}},{"label":" statusBLUE","kind":6,"detail":"bool","sortText":"3f2cccccstatusBLUE","filterText":"statusBLUE","insertText":"statusBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"statusBLUE"}},{"label":" std","kind":9,"sortText":"3f9eb851std","filterText":"std","insertText":"std","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"std"}},{"label":"•SKIP_ALL","kind":20,"detail":"arduino::LookaheadMode","documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`  \nAll invalid characters are ignored."},"sortText":"3ff8a156SKIP_ALL","filterText":"SKIP_ALL","insertText":"SKIP_ALL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SKIP_ALL"}},{"label":"•Server","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Server.h\"`"},"sortText":"3ff8a156Server","filterText":"Server","insertText":"Server","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"Server"}},{"label":"•Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`"},"sortText":"3ff8a156Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"Stream"}},{"label":"•serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/HardwareSerial.h\"`  \nXXX: Are we keeping the serialEvent API?"},"sortText":"3ff8a156serialEventRun","filterText":"serialEventRun","insertText":"serialEventRun()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"serialEventRun()"}},{"label":" strchr(const char *, int)","kind":3,"detail":"char *","sortText":"405d8e68strchr","filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strchr(${1:const char *}, ${2:int})"}},{"label":" strcmp(const char *, const char *)","kind":3,"detail":"int","sortText":"405d8e68strcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":" strcoll(const char *, const char *)","kind":3,"detail":"int","sortText":"405d8e68strcoll","filterText":"strcoll","insertText":"strcoll(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strcoll(${1:const char *}, ${2:const char *})"}},{"label":" strcspn(const char *, const char *)","kind":3,"detail":"size_t","sortText":"405d8e68strcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strcspn(${1:const char *}, ${2:const char *})"}},{"label":" strdup(const char *)","kind":3,"detail":"char *","sortText":"405d8e68strdup","filterText":"strdup","insertText":"strdup(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strdup(${1:const char *})"}},{"label":" strerror_l(int, locale_t)","kind":3,"detail":"char *","sortText":"405d8e68strerror_l","filterText":"strerror_l","insertText":"strerror_l(${1:int}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strerror_l(${1:int}, ${2:locale_t})"}},{"label":" strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strlcat","filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncat(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strncat","filterText":"strncat","insertText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strnstr(const char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strnstr","filterText":"strnstr","insertText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strpbrk(const char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strpbrk","filterText":"strpbrk","insertText":"strpbrk(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strpbrk(${1:const char *}, ${2:const char *})"}},{"label":" strrchr(const char *, int)","kind":3,"detail":"char *","sortText":"405d8e68strrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":" strtok_r(char *, const char *, char **)","kind":3,"detail":"char *","sortText":"405d8e68strtok_r","filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})"}},{"label":" shiftOut(PinName dataPin, PinName clockPin, BitOrder bitOrder, uint8_t val)","kind":3,"detail":"void","sortText":"4068a03fshiftOut","filterText":"shiftOut","insertText":"shiftOut(${1:PinName dataPin}, ${2:PinName clockPin}, ${3:BitOrder bitOrder}, ${4:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"shiftOut(${1:PinName dataPin}, ${2:PinName clockPin}, ${3:BitOrder bitOrder}, ${4:uint8_t val})"}},{"label":" srand","kind":18,"sortText":"406c52easrand","filterText":"srand","insertText":"srand","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"srand"}},{"label":"•SIO_IRQ_PROC0n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4071b066SIO_IRQ_PROC0n","filterText":"SIO_IRQ_PROC0n","insertText":"SIO_IRQ_PROC0n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SIO_IRQ_PROC0n"}},{"label":"•SysTick_IRQn","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`  \n15 Cortex-M0 System Tick Interrupt"},"sortText":"4071b066SysTick_IRQn","filterText":"SysTick_IRQn","insertText":"SysTick_IRQn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SysTick_IRQn"}},{"label":"•SystemCoreClock","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`  \nSystem Clock Frequency (Core Clock)"},"sortText":"4071b066SystemCoreClock","filterText":"SystemCoreClock","insertText":"SystemCoreClock","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SystemCoreClock"}},{"label":" scanf(const char *, ...)","kind":3,"detail":"int","sortText":"4071b066scanf","filterText":"scanf","insertText":"scanf(${1:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"scanf(${1:const char *, ...})"}},{"label":" setbuf(FILE *, char *)","kind":3,"detail":"void","sortText":"4071b066setbuf","filterText":"setbuf","insertText":"setbuf(${1:FILE *}, ${2:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"setbuf(${1:FILE *}, ${2:char *})"}},{"label":" setbuffer(FILE *, char *, int)","kind":3,"detail":"void","sortText":"4071b066setbuffer","filterText":"setbuffer","insertText":"setbuffer(${1:FILE *}, ${2:char *}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"setbuffer(${1:FILE *}, ${2:char *}, ${3:int})"}},{"label":" setlinebuf(FILE *)","kind":3,"detail":"int","sortText":"4071b066setlinebuf","filterText":"setlinebuf","insertText":"setlinebuf(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"setlinebuf(${1:FILE *})"}},{"label":" setvbuf(FILE *, char *, int, size_t)","kind":3,"detail":"int","sortText":"4071b066setvbuf","filterText":"setvbuf","insertText":"setvbuf(${1:FILE *}, ${2:char *}, ${3:int}, ${4:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"setvbuf(${1:FILE *}, ${2:char *}, ${3:int}, ${4:size_t})"}},{"label":" siprintf(char *, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066siprintf","filterText":"siprintf","insertText":"siprintf(${1:char *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"siprintf(${1:char *}, ${2:const char *, ...})"}},{"label":" siscanf(const char *, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066siscanf","filterText":"siscanf","insertText":"siscanf(${1:const char *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"siscanf(${1:const char *}, ${2:const char *, ...})"}},{"label":" size_t","kind":8,"sortText":"4071b066size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"size_t"}},{"label":" sniprintf(char *, size_t, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066sniprintf","filterText":"sniprintf","insertText":"sniprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sniprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})"}},{"label":" snprintf(char *, size_t, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066snprintf","filterText":"snprintf","insertText":"snprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"snprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})"}},{"label":" sprintf(char *, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066sprintf","filterText":"sprintf","insertText":"sprintf(${1:char *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sprintf(${1:char *}, ${2:const char *, ...})"}},{"label":" sscanf(const char *, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066sscanf","filterText":"sscanf","insertText":"sscanf(${1:const char *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sscanf(${1:const char *}, ${2:const char *, ...})"}},{"label":" strcasecmp(const char *, const char *)","kind":3,"detail":"int","sortText":"4071b066strcasecmp","filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strcasecmp(${1:const char *}, ${2:const char *})"}},{"label":" strncasecmp(const char *, const char *, size_t)","kind":3,"detail":"int","sortText":"4071b066strncasecmp","filterText":"strncasecmp","insertText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncasecmp_l(const char *, const char *, size_t, locale_t)","kind":3,"detail":"int","sortText":"4071b066strncasecmp_l","filterText":"strncasecmp_l","insertText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})"}},{"label":" scalbln(double, long)","kind":3,"detail":"double","sortText":"40791bfcscalbln","filterText":"scalbln","insertText":"scalbln(${1:double}, ${2:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"scalbln(${1:double}, ${2:long})"}},{"label":" seed48(unsigned short *)","kind":3,"detail":"unsigned short *","sortText":"40791bfcseed48","filterText":"seed48","insertText":"seed48(${1:unsigned short *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"seed48(${1:unsigned short *})"}},{"label":" setenv(const char *__string, const char *__value, int __overwrite)","kind":3,"detail":"int","sortText":"40791bfcsetenv","filterText":"setenv","insertText":"setenv(${1:const char *__string}, ${2:const char *__value}, ${3:int __overwrite})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"setenv(${1:const char *__string}, ${2:const char *__value}, ${3:int __overwrite})"}},{"label":" setstate(char *)","kind":3,"detail":"char *","sortText":"40791bfcsetstate","filterText":"setstate","insertText":"setstate(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"setstate(${1:char *})"}},{"label":" sinh(double)","kind":3,"detail":"double","sortText":"40791bfcsinh","filterText":"sinh","insertText":"sinh(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sinh(${1:double})"}},{"label":" sinhf(float)","kind":3,"detail":"float","sortText":"40791bfcsinhf","filterText":"sinhf","insertText":"sinhf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sinhf(${1:float})"}},{"label":" sinl(long double)","kind":3,"detail":"long double","sortText":"40791bfcsinl","filterText":"sinl","insertText":"sinl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sinl(${1:long double})"}},{"label":" sqrt(double)","kind":3,"detail":"double","sortText":"40791bfcsqrt","filterText":"sqrt","insertText":"sqrt(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sqrt(${1:double})"}},{"label":" srand(unsigned int __seed)","kind":3,"detail":"void","sortText":"40791bfcsrand","filterText":"srand","insertText":"srand(${1:unsigned int __seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"srand(${1:unsigned int __seed})"}},{"label":" srand48(long)","kind":3,"detail":"void","sortText":"40791bfcsrand48","filterText":"srand48","insertText":"srand48(${1:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"srand48(${1:long})"}},{"label":" srandom(unsigned int)","kind":3,"detail":"void","sortText":"40791bfcsrandom","filterText":"srandom","insertText":"srandom(${1:unsigned int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"srandom(${1:unsigned int})"}},{"label":" strtod(const char *__n, char **__end_PTR)","kind":3,"detail":"double","sortText":"40791bfcstrtod","filterText":"strtod","insertText":"strtod(${1:const char *__n}, ${2:char **__end_PTR})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strtod(${1:const char *__n}, ${2:char **__end_PTR})"}},{"label":" strtof(const char *__n, char **__end_PTR)","kind":3,"detail":"float","sortText":"40791bfcstrtof","filterText":"strtof","insertText":"strtof(${1:const char *__n}, ${2:char **__end_PTR})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strtof(${1:const char *__n}, ${2:char **__end_PTR})"}},{"label":" strtol(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"long","sortText":"40791bfcstrtol","filterText":"strtol","insertText":"strtol(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strtol(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtold(const char *, char **)","kind":3,"detail":"long double","sortText":"40791bfcstrtold","filterText":"strtold","insertText":"strtold(${1:const char *}, ${2:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strtold(${1:const char *}, ${2:char **})"}},{"label":" strtoll(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"long long","sortText":"40791bfcstrtoll","filterText":"strtoll","insertText":"strtoll(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strtoll(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtoul(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"unsigned long","sortText":"40791bfcstrtoul","filterText":"strtoul","insertText":"strtoul(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strtoul(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtoull(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"unsigned long long","sortText":"40791bfcstrtoull","filterText":"strtoull","insertText":"strtoull(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"strtoull(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" suboptarg","kind":6,"detail":"char *","documentation":{"kind":"markdown","value":"getsubopt(3) external variable"},"sortText":"40791bfcsuboptarg","filterText":"suboptarg","insertText":"suboptarg","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"suboptarg"}},{"label":" system(const char *__string)","kind":3,"detail":"int","sortText":"40791bfcsystem","filterText":"system","insertText":"system(${1:const char *__string})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"system(${1:const char *__string})"}},{"label":" SCB_Type","kind":8,"documentation":{"kind":"markdown","value":"\\\\brief Structure type to access the System Control Block (SCB)."},"sortText":"407f2f3bSCB_Type","filterText":"SCB_Type","insertText":"SCB_Type","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SCB_Type"}},{"label":" SysTick_Type","kind":8,"documentation":{"kind":"markdown","value":"\\\\brief Structure type to access the System Timer (SysTick)."},"sortText":"407f2f3bSysTick_Type","filterText":"SysTick_Type","insertText":"SysTick_Type","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SysTick_Type"}},{"label":"•ssize_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"407f2f3bssize_t","filterText":"ssize_t","insertText":"ssize_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"ssize_t"}},{"label":"•stat(const char *__path, struct stat *__sbuf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"407f2f3bstat","filterText":"stat","insertText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})"}},{"label":" suseconds_t","kind":8,"sortText":"407f2f3bsuseconds_t","filterText":"suseconds_t","insertText":"suseconds_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"suseconds_t"}},{"label":"•std::scalbln(long double __x, long __ex)","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aascalbln","filterText":"scalbln","insertText":"std::scalbln(${1:long double __x}, ${2:long __ex})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"std::scalbln(${1:long double __x}, ${2:long __ex})"}},{"label":"•std::scalbn(long double __x, int __ex)","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aascalbn","filterText":"scalbn","insertText":"std::scalbn(${1:long double __x}, ${2:int __ex})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"std::scalbn(${1:long double __x}, ${2:int __ex})"}},{"label":"•std::signbit(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aasignbit","filterText":"signbit","insertText":"std::signbit($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"std::signbit($0)"}},{"label":"•std::sin(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aasin","filterText":"sin","insertText":"std::sin($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"std::sin($0)"}},{"label":"•std::sinh(float __x)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aasinh","filterText":"sinh","insertText":"std::sinh(${1:float __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"std::sinh(${1:float __x})"}},{"label":"•std::sqrt(long double __x)","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aasqrt","filterText":"sqrt","insertText":"std::sqrt(${1:long double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"std::sqrt(${1:long double __x})"}},{"label":"•SPI_CPHA_0","kind":20,"detail":"spi_cpha_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_CPHA_0","filterText":"SPI_CPHA_0","insertText":"SPI_CPHA_0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SPI_CPHA_0"}},{"label":"•SPI_CPHA_1","kind":20,"detail":"spi_cpha_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_CPHA_1","filterText":"SPI_CPHA_1","insertText":"SPI_CPHA_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SPI_CPHA_1"}},{"label":"•SPI_CPOL_0","kind":20,"detail":"spi_cpol_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_CPOL_0","filterText":"SPI_CPOL_0","insertText":"SPI_CPOL_0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SPI_CPOL_0"}},{"label":"•SPI_CPOL_1","kind":20,"detail":"spi_cpol_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_CPOL_1","filterText":"SPI_CPOL_1","insertText":"SPI_CPOL_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SPI_CPOL_1"}},{"label":"•SPI_LSB_FIRST","kind":20,"detail":"spi_order_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_LSB_FIRST","filterText":"SPI_LSB_FIRST","insertText":"SPI_LSB_FIRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SPI_LSB_FIRST"}},{"label":"•SPI_MSB_FIRST","kind":20,"detail":"spi_order_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_MSB_FIRST","filterText":"SPI_MSB_FIRST","insertText":"SPI_MSB_FIRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SPI_MSB_FIRST"}},{"label":"•SysTick_Handler()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"rtx_os.h\"`"},"sortText":"409c96d9SysTick_Handler","filterText":"SysTick_Handler","insertText":"SysTick_Handler()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"SysTick_Handler()"}},{"label":"•sleep_ms(uint32_t ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Wait for the given number of milliseconds before returning  \n\\\\ingroup sleep  \n\\\\note This method attempts to perform a lower power sleep (using WFE) as much as possible.  \n\\\\param ms the number of milliseconds to sleep"},"sortText":"409c96d9sleep_ms","filterText":"sleep_ms","insertText":"sleep_ms(${1:uint32_t ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sleep_ms(${1:uint32_t ms})"}},{"label":"•sleep_until(absolute_time_t target)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Wait until after the given timestamp to return  \n\\\\ingroup sleep  \n\\\\note This method attempts to perform a lower power (WFE) sleep  \n\\\\param target the time after which to return  \n\\\\sa sleep_us()  \n\\\\sa busy_wait_until()"},"sortText":"409c96d9sleep_until","filterText":"sleep_until","insertText":"sleep_until(${1:absolute_time_t target})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sleep_until(${1:absolute_time_t target})"}},{"label":"•sleep_us(uint64_t us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Wait for the given number of microseconds before returning  \n\\\\ingroup sleep  \n\\\\note This method attempts to perform a lower power (WFE) sleep  \n\\\\param us the number of microseconds to sleep  \n\\\\sa busy_wait_us()"},"sortText":"409c96d9sleep_us","filterText":"sleep_us","insertText":"sleep_us(${1:uint64_t us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"sleep_us(${1:uint64_t us})"}},{"label":"•spi_cpha_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9spi_cpha_t","filterText":"spi_cpha_t","insertText":"spi_cpha_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"spi_cpha_t"}},{"label":"•spi_cpol_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9spi_cpol_t","filterText":"spi_cpol_t","insertText":"spi_cpol_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"spi_cpol_t"}},{"label":"•spi_deinit(spi_inst_t *spi)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`  \n\\\\brief Deinitialise SPI instances  \n\\\\ingroup hardware_spi Puts the SPI into a disabled state. Init will need to be called to reenable the device functions.  \n\\\\param spi SPI instance specifier, either \\\\ref spi0 or \\\\ref spi1"},"sortText":"409c96d9spi_deinit","filterText":"spi_deinit","insertText":"spi_deinit(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"spi_deinit(${1:spi_inst_t *spi})"}},{"label":"•spi_get_hw(spi_inst_t *spi)","kind":3,"detail":"spi_hw_t *","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9spi_get_hw","filterText":"spi_get_hw","insertText":"spi_get_hw(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"spi_get_hw(${1:spi_inst_t *spi})"}},{"label":"•spi_get_index(spi_inst_t *spi)","kind":3,"detail":"uint","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`  \n\\\\brief Convert I2c instance to hardware instance number  \n\\\\ingroup hardware_spi  \n\\\\param spi SPI instance  \n\\\\return Number of SPI, 0 or 1."},"sortText":"409c96d9spi_get_index","filterText":"spi_get_index","insertText":"spi_get_index(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"spi_get_index(${1:spi_inst_t *spi})"}},{"label":"•spi_inst_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`  \nOpaque type representing an SPI instance."},"sortText":"409c96d9spi_inst_t","filterText":"spi_inst_t","insertText":"spi_inst_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"spi_inst_t"}},{"label":"•spi_is_readable(spi_inst_t *spi)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`  \n\\\\brief Check whether a read can be done on SPI device  \n\\\\ingroup hardware_spi  \n\\\\param spi SPI instance specifier, either \\\\ref spi0 or \\\\ref spi1  \n\\\\return Non-zero if a read is possible i.e. data is present  \n\\\\note Although the controllers each have a 8 deep RX FIFO, the current HW implementation can only return 0 or 1 rather than the data available."},"sortText":"409c96d9spi_is_readable","filterText":"spi_is_readable","insertText":"spi_is_readable(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"spi_is_readable(${1:spi_inst_t *spi})"}},{"label":"•spi_is_writable(spi_inst_t *spi)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`  \n\\\\brief Check whether a write can be done on SPI device  \n\\\\ingroup hardware_spi  \n\\\\param spi SPI instance specifier, either \\\\ref spi0 or \\\\ref spi1  \n\\\\return 0 if no space is available to write. Non-zero if a write is possible  \n\\\\note Although the controllers each have a 8 deep TX FIFO, the current HW implementation can only return 0 or 1 rather than the space available."},"sortText":"409c96d9spi_is_writable","filterText":"spi_is_writable","insertText":"spi_is_writable(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"spi_is_writable(${1:spi_inst_t *spi})"}},{"label":"•spi_order_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9spi_order_t","filterText":"spi_order_t","insertText":"spi_order_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"spi_order_t"}},{"label":"•spi_read16_blocking(spi_inst_t *spi, uint16_t repeated_tx_data, uint16_t *dst, size_t len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`  \n\\\\brief Read from an SPI device  \n\\\\ingroup hardware_spi  \nRead \\\\p len halfwords from SPI to \\\\p dst.  \nBlocks until all data is transferred. No timeout, as SPI hardware always transfers at a known data rate.  \n\\\\p repeated_tx_data is output repeatedly on TX as data is read in from RX.  \nGenerally this can be 0, but some devices require a specific value here,  \ne.g. SD cards expect 0xff  \n\\\\note SPI should be initialised with 16 data_bits using \\\\ref spi_set_format first, otherwise this function will only read 8 data_bits.  \n\\\\param spi SPI instance specifier, either \\\\ref spi0 or \\\\ref spi1  \n\\\\param repeated_tx_data Buffer of data to write  \n\\\\param dst Buffer for read data  \n\\\\param len Length of buffer \\\\p dst in halfwords  \n\\\\return Number of bytes written/read"},"sortText":"409c96d9spi_read16_blocking","filterText":"spi_read16_blocking","insertText":"spi_read16_blocking(${1:spi_inst_t *spi}, ${2:uint16_t repeated_tx_data}, ${3:uint16_t *dst}, ${4:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"spi_read16_blocking(${1:spi_inst_t *spi}, ${2:uint16_t repeated_tx_data}, ${3:uint16_t *dst}, ${4:size_t len})"}},{"label":"•spi_read_blocking(spi_inst_t *spi, uint8_t repeated_tx_data, uint8_t *dst, size_t len)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`  \n\\\\brief Read from an SPI device  \n\\\\ingroup hardware_spi  \nRead \\\\p len bytes from SPI to \\\\p dst.  \nBlocks until all data is transferred. No timeout, as SPI hardware always transfers at a known data rate.  \n\\\\p repeated_tx_data is output repeatedly on TX as data is read in from RX.  \nGenerally this can be 0, but some devices require a specific value here,  \ne.g. SD cards expect 0xff  \n\\\\param spi SPI instance specifier, either \\\\ref spi0 or \\\\ref spi1  \n\\\\param repeated_tx_data Buffer of data to write  \n\\\\param dst Buffer for read data  \n\\\\param len Length of buffer \\\\p dst  \n\\\\return Number of bytes written/read"},"sortText":"409c96d9spi_read_blocking","filterText":"spi_read_blocking","insertText":"spi_read_blocking(${1:spi_inst_t *spi}, ${2:uint8_t repeated_tx_data}, ${3:uint8_t *dst}, ${4:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":5}},"newText":"spi_read_blocking(${1:spi_inst_t *spi}, ${2:uint8_t repeated_tx_data}, ${3:uint8_t *dst}, ${4:size_t len})"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":188},"contentChanges":[{"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"rangeLength":0,"text":"t"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":56,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":57,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":6},"context":{"triggerKind":3}}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'st'"}]},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/31","percentage":96.7741935483871,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 35164

{"id":57,"result":{"isIncomplete":true,"items":[{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"struct"}},{"label":" statusBLUE","kind":6,"detail":"bool","sortText":"3f2cccccstatusBLUE","filterText":"statusBLUE","insertText":"statusBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"statusBLUE"}},{"label":" std","kind":9,"sortText":"3f9eb851std","filterText":"std","insertText":"std","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std"}},{"label":"•Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`"},"sortText":"3ff8a156Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"Stream"}},{"label":" String","kind":7,"documentation":{"kind":"markdown","value":"The string class"},"sortText":"3ff8a156String","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"String"}},{"label":" StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"An inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"3ff8a156StringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"StringSumHelper"}},{"label":" stpcpy(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68stpcpy","filterText":"stpcpy","insertText":"stpcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"stpcpy(${1:char *}, ${2:const char *})"}},{"label":" stpncpy(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68stpncpy","filterText":"stpncpy","insertText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strcat(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strcat","filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strcat(${1:char *}, ${2:const char *})"}},{"label":" strchr(const char *, int)","kind":3,"detail":"char *","sortText":"405d8e68strchr","filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strchr(${1:const char *}, ${2:int})"}},{"label":" strcmp(const char *, const char *)","kind":3,"detail":"int","sortText":"405d8e68strcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":" strcoll(const char *, const char *)","kind":3,"detail":"int","sortText":"405d8e68strcoll","filterText":"strcoll","insertText":"strcoll(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strcoll(${1:const char *}, ${2:const char *})"}},{"label":" strcoll_l(const char *, const char *, locale_t)","kind":3,"detail":"int","sortText":"405d8e68strcoll_l","filterText":"strcoll_l","insertText":"strcoll_l(${1:const char *}, ${2:const char *}, ${3:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strcoll_l(${1:const char *}, ${2:const char *}, ${3:locale_t})"}},{"label":" strcpy(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strcpy","filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strcpy(${1:char *}, ${2:const char *})"}},{"label":" strcspn(const char *, const char *)","kind":3,"detail":"size_t","sortText":"405d8e68strcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strcspn(${1:const char *}, ${2:const char *})"}},{"label":" strdup(const char *)","kind":3,"detail":"char *","sortText":"405d8e68strdup","filterText":"strdup","insertText":"strdup(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strdup(${1:const char *})"}},{"label":" strerror(int)","kind":3,"detail":"char *","sortText":"405d8e68strerror","filterText":"strerror","insertText":"strerror(${1:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strerror(${1:int})"}},{"label":" strerror_l(int, locale_t)","kind":3,"detail":"char *","sortText":"405d8e68strerror_l","filterText":"strerror_l","insertText":"strerror_l(${1:int}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strerror_l(${1:int}, ${2:locale_t})"}},{"label":" strerror_r(int, char *, size_t)","kind":3,"detail":"int","sortText":"405d8e68strerror_r","filterText":"strerror_r","insertText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})"}},{"label":" strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strlcat","filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strlcpy","filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","sortText":"405d8e68strlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strlen(${1:const char *})"}},{"label":" strlwr(char *)","kind":3,"detail":"char *","sortText":"405d8e68strlwr","filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strlwr(${1:char *})"}},{"label":" strncat(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strncat","filterText":"strncat","insertText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncmp(const char *, const char *, size_t)","kind":3,"detail":"int","sortText":"405d8e68strncmp","filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strncpy","filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strndup(const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strndup","filterText":"strndup","insertText":"strndup(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strndup(${1:const char *}, ${2:size_t})"}},{"label":" strnlen(const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strnlen","filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strnlen(${1:const char *}, ${2:size_t})"}},{"label":" strnstr(const char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strnstr","filterText":"strnstr","insertText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strpbrk(const char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strpbrk","filterText":"strpbrk","insertText":"strpbrk(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strpbrk(${1:const char *}, ${2:const char *})"}},{"label":" strrchr(const char *, int)","kind":3,"detail":"char *","sortText":"405d8e68strrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":" strsep(char **, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strsep","filterText":"strsep","insertText":"strsep(${1:char **}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strsep(${1:char **}, ${2:const char *})"}},{"label":" strsignal(int __signo)","kind":3,"detail":"char *","sortText":"405d8e68strsignal","filterText":"strsignal","insertText":"strsignal(${1:int __signo})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strsignal(${1:int __signo})"}},{"label":" strspn(const char *, const char *)","kind":3,"detail":"size_t","sortText":"405d8e68strspn","filterText":"strspn","insertText":"strspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strspn(${1:const char *}, ${2:const char *})"}},{"label":" strstr(const char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strstr","filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strstr(${1:const char *}, ${2:const char *})"}},{"label":" strtok(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strtok","filterText":"strtok","insertText":"strtok(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtok(${1:char *}, ${2:const char *})"}},{"label":" strtok_r(char *, const char *, char **)","kind":3,"detail":"char *","sortText":"405d8e68strtok_r","filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})"}},{"label":" strupr(char *)","kind":3,"detail":"char *","sortText":"405d8e68strupr","filterText":"strupr","insertText":"strupr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strupr(${1:char *})"}},{"label":" strxfrm(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strxfrm","filterText":"strxfrm","insertText":"strxfrm(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strxfrm(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strxfrm_l(char *, const char *, size_t, locale_t)","kind":3,"detail":"size_t","sortText":"405d8e68strxfrm_l","filterText":"strxfrm_l","insertText":"strxfrm_l(${1:char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strxfrm_l(${1:char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})"}},{"label":"•Stream","kind":18,"documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`"},"sortText":"406c52eaStream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"Stream"}},{"label":" String","kind":18,"sortText":"406c52eaString","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"String"}},{"label":" strtod","kind":18,"sortText":"406c52eastrtod","filterText":"strtod","insertText":"strtod","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtod"}},{"label":" strtol","kind":18,"sortText":"406c52eastrtol","filterText":"strtol","insertText":"strtol","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtol"}},{"label":" strtoul","kind":18,"sortText":"406c52eastrtoul","filterText":"strtoul","insertText":"strtoul","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtoul"}},{"label":" strcasecmp(const char *, const char *)","kind":3,"detail":"int","sortText":"4071b066strcasecmp","filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strcasecmp(${1:const char *}, ${2:const char *})"}},{"label":" strcasecmp_l(const char *, const char *, locale_t)","kind":3,"detail":"int","sortText":"4071b066strcasecmp_l","filterText":"strcasecmp_l","insertText":"strcasecmp_l(${1:const char *}, ${2:const char *}, ${3:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strcasecmp_l(${1:const char *}, ${2:const char *}, ${3:locale_t})"}},{"label":" strncasecmp(const char *, const char *, size_t)","kind":3,"detail":"int","sortText":"4071b066strncasecmp","filterText":"strncasecmp","insertText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncasecmp_l(const char *, const char *, size_t, locale_t)","kind":3,"detail":"int","sortText":"4071b066strncasecmp_l","filterText":"strncasecmp_l","insertText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})"}},{"label":"•strtoimax(const char *, char **, int)","kind":3,"detail":"intmax_t","documentation":{"kind":"markdown","value":"From `\u003cinttypes.h\u003e`"},"sortText":"4071b066strtoimax","filterText":"strtoimax","insertText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":" strtoimax_l(const char *, char **_restrict, int, locale_t)","kind":3,"detail":"intmax_t","sortText":"4071b066strtoimax_l","filterText":"strtoimax_l","insertText":"strtoimax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtoimax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})"}},{"label":"•strtoumax(const char *, char **, int)","kind":3,"detail":"uintmax_t","documentation":{"kind":"markdown","value":"From `\u003cinttypes.h\u003e`"},"sortText":"4071b066strtoumax","filterText":"strtoumax","insertText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":" strtoumax_l(const char *, char **_restrict, int, locale_t)","kind":3,"detail":"uintmax_t","sortText":"4071b066strtoumax_l","filterText":"strtoumax_l","insertText":"strtoumax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtoumax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})"}},{"label":"•statvfs","kind":22,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"statvfs"}},{"label":"•statvfs(const char *path, struct statvfs *buf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})"}},{"label":" strftime(char *_s, size_t _maxsize, const char *_fmt, const struct tm *_t)","kind":3,"detail":"size_t","sortText":"40791bfcstrftime","filterText":"strftime","insertText":"strftime(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strftime(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t})"}},{"label":" strftime_l(char *_s, size_t _maxsize, const char *_fmt, const struct tm *_t, locale_t _l)","kind":3,"detail":"size_t","sortText":"40791bfcstrftime_l","filterText":"strftime_l","insertText":"strftime_l(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t}, ${5:locale_t _l})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strftime_l(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t}, ${5:locale_t _l})"}},{"label":" strtod(const char *__n, char **__end_PTR)","kind":3,"detail":"double","sortText":"40791bfcstrtod","filterText":"strtod","insertText":"strtod(${1:const char *__n}, ${2:char **__end_PTR})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtod(${1:const char *__n}, ${2:char **__end_PTR})"}},{"label":" strtof(const char *__n, char **__end_PTR)","kind":3,"detail":"float","sortText":"40791bfcstrtof","filterText":"strtof","insertText":"strtof(${1:const char *__n}, ${2:char **__end_PTR})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtof(${1:const char *__n}, ${2:char **__end_PTR})"}},{"label":" strtol(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"long","sortText":"40791bfcstrtol","filterText":"strtol","insertText":"strtol(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtol(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtold(const char *, char **)","kind":3,"detail":"long double","sortText":"40791bfcstrtold","filterText":"strtold","insertText":"strtold(${1:const char *}, ${2:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtold(${1:const char *}, ${2:char **})"}},{"label":" strtoll(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"long long","sortText":"40791bfcstrtoll","filterText":"strtoll","insertText":"strtoll(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtoll(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtoul(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"unsigned long","sortText":"40791bfcstrtoul","filterText":"strtoul","insertText":"strtoul(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtoul(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtoull(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"unsigned long long","sortText":"40791bfcstrtoull","filterText":"strtoull","insertText":"strtoull(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"strtoull(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":"•stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"407f2f3bstat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"stat"}},{"label":"•stat(const char *__path, struct stat *__sbuf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"407f2f3bstat","filterText":"stat","insertText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})"}},{"label":"•std::chrono::steady_clock","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`  \n@brief Monotonic clock  \nTime returned has the property of only increasing at a uniform rate."},"sortText":"409f2ea4steady_clock","filterText":"steady_clock","insertText":"std::chrono::steady_clock","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::chrono::steady_clock"}},{"label":"•std::strchr(char *__s, int __n)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"409f2ea4strchr","filterText":"strchr","insertText":"std::strchr(${1:char *__s}, ${2:int __n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::strchr(${1:char *__s}, ${2:int __n})"}},{"label":"•std::streambuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nBase class for @c char buffers."},"sortText":"409f2ea4streambuf","filterText":"streambuf","insertText":"std::streambuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::streambuf"}},{"label":"•std::stringbuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char memory buffers."},"sortText":"409f2ea4stringbuf","filterText":"stringbuf","insertText":"std::stringbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::stringbuf"}},{"label":"•std::stringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char mixed input and output memory streams."},"sortText":"409f2ea4stringstream","filterText":"stringstream","insertText":"std::stringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::stringstream"}},{"label":"•std::strpbrk(char *__s1, const char *__s2)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"409f2ea4strpbrk","filterText":"strpbrk","insertText":"std::strpbrk(${1:char *__s1}, ${2:const char *__s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::strpbrk(${1:char *__s1}, ${2:const char *__s2})"}},{"label":"•std::strrchr(char *__s, int __n)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"409f2ea4strrchr","filterText":"strrchr","insertText":"std::strrchr(${1:char *__s}, ${2:int __n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::strrchr(${1:char *__s}, ${2:int __n})"}},{"label":"•std::strstr(char *__s1, const char *__s2)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"409f2ea4strstr","filterText":"strstr","insertText":"std::strstr(${1:char *__s1}, ${2:const char *__s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::strstr(${1:char *__s1}, ${2:const char *__s2})"}},{"label":"•std::strtod","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtod","filterText":"strtod","insertText":"std::strtod","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::strtod"}},{"label":"•std::strtof","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtof","filterText":"strtof","insertText":"std::strtof","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::strtof"}},{"label":"•std::strtol","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtol","filterText":"strtol","insertText":"std::strtol","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::strtol"}},{"label":"•std::strtold","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtold","filterText":"strtold","insertText":"std::strtold","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::strtold"}},{"label":"•std::strtoll","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtoll","filterText":"strtoll","insertText":"std::strtoll","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::strtoll"}},{"label":"•std::strtoul","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtoul","filterText":"strtoul","insertText":"std::strtoul","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::strtoul"}},{"label":"•std::strtoull","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtoull","filterText":"strtoull","insertText":"std::strtoull","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::strtoull"}},{"label":"•std::static_pointer_cast(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40a94eb8static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::static_pointer_cast($0)"}},{"label":"•std::stod(const string \u0026__str, size_t *__idx = 0)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stod","filterText":"stod","insertText":"std::stod(${1:const string \u0026__str})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::stod(${1:const string \u0026__str})"}},{"label":"•std::stof(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \nNB: wcstof vs wcstod."},"sortText":"40a94eb8stof","filterText":"stof","insertText":"std::stof($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::stof($0)"}},{"label":"•std::stoi(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \n21.4 Numeric Conversions [string.conversions]."},"sortText":"40a94eb8stoi","filterText":"stoi","insertText":"std::stoi($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::stoi($0)"}},{"label":"•std::stol(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stol","filterText":"stol","insertText":"std::stol($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::stol($0)"}},{"label":"•std::stold(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stold","filterText":"stold","insertText":"std::stold($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::stold($0)"}},{"label":"•std::stoll(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stoll","filterText":"stoll","insertText":"std::stoll($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::stoll($0)"}},{"label":"•std::stoul(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stoul","filterText":"stoul","insertText":"std::stoul($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::stoul($0)"}},{"label":"•std::stoull(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stoull","filterText":"stoull","insertText":"std::stoull($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::stoull($0)"}},{"label":"•std::streamoff","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"40a94eb8streamoff","filterText":"streamoff","insertText":"std::streamoff","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::streamoff"}},{"label":"•std::streampos","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nClauses 21.1.3.1 and 21.1.3.2 describe streampos and wstreampos as implementation defined types, but clause 27.2 requires that they must both be typedefs for fpos\\\u003cmbstate_t\u003e File position for char streams."},"sortText":"40a94eb8streampos","filterText":"streampos","insertText":"std::streampos","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::streampos"}},{"label":"•std::streamsize","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nIntegral type for I/O operation counts and buffer sizes."},"sortText":"40a94eb8streamsize","filterText":"streamsize","insertText":"std::streamsize","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::streamsize"}},{"label":"•std::string","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \nA string of @c char"},"sortText":"40a94eb8string","filterText":"string","insertText":"std::string","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":6}},"newText":"std::string"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":189},"contentChanges":[{"range":{"start":{"line":8,"character":6},"end":{"line":8,"character":6}},"rangeLength":0,"text":"a"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":58,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 595

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'sta'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":58,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":190},"contentChanges":[{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":7}},"rangeLength":0,"text":"t"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":58}}Content-Length: 221

{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 281

{"jsonrpc":"2.0","id":60,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":8},"context":{"triggerKind":3}}}
>>>
Content-Length: 600

{"id":59,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 8066

{"id":60,"result":{"isIncomplete":false,"items":[{"label":"•stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ee51eb8stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"stat"}},{"label":"•stat(const char *path, struct stat *st)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ee51eb8stat","filterText":"stat","insertText":"stat(${1:const char *path}, ${2:struct stat *st})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"stat(${1:const char *path}, ${2:struct stat *st})"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" statusBLUE","kind":6,"detail":"bool","sortText":"3f2cccccstatusBLUE","filterText":"statusBLUE","insertText":"statusBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"statusBLUE"}},{"label":"•statvfs(const char *path, struct statvfs *buf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})"}},{"label":"•statvfs","kind":22,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"statvfs"}},{"label":"•PinStatus","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40a0a3cfPinStatus","filterText":"PinStatus","insertText":"PinStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"PinStatus"}},{"label":"•std::static_pointer_cast(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40a94eb8static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"std::static_pointer_cast($0)"}},{"label":"•pwm_get_irq_status_mask()","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Get PWM interrupt status, raw  \n\\\\ingroup hardware_pwm  \n\\\\return Bitmask of all PWM interrupts currently set"},"sortText":"410029b5pwm_get_irq_status_mask","filterText":"pwm_get_irq_status_mask","insertText":"pwm_get_irq_status_mask()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"pwm_get_irq_status_mask()"}},{"label":"•std::__static_abs\u003cintmax_t _Pn\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`"},"sortText":"4288b34c__static_abs","filterText":"__static_abs","insertText":"std::__static_abs\u003c${1:intmax_t _Pn}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"std::__static_abs\u003c${1:intmax_t _Pn}\u003e"}},{"label":"•std::__static_gcd\u003cintmax_t _Pn, intmax_t _Qn\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`"},"sortText":"4288b34c__static_gcd","filterText":"__static_gcd","insertText":"std::__static_gcd\u003c${1:intmax_t _Pn}, ${2:intmax_t _Qn}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"std::__static_gcd\u003c${1:intmax_t _Pn}, ${2:intmax_t _Qn}\u003e"}},{"label":"•std::__static_sign\u003cintmax_t _Pn\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`  \n@defgroup ratio Rational Arithmetic  \n@ingroup utilities  \nCompile time representation of finite rational numbers.  \n@{"},"sortText":"4288b34c__static_sign","filterText":"__static_sign","insertText":"std::__static_sign\u003c${1:intmax_t _Pn}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"std::__static_sign\u003c${1:intmax_t _Pn}\u003e"}},{"label":"•std::__is_static_castable\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \n\\_\\_is_static_castable"},"sortText":"429f2ea3__is_static_castable","filterText":"__is_static_castable","insertText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::__is_static_castable_impl\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"429f2ea3__is_static_castable_impl","filterText":"__is_static_castable_impl","insertText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::__is_static_castable_safe\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"429f2ea3__is_static_castable_safe","filterText":"__is_static_castable_safe","insertText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::__do_is_static_castable_impl","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nThe hardest part of this trait is the binary direct-initialization case, because we hit into a functional cast of the form T(arg).  \nThis implementation uses different strategies depending on the target type to reduce the test overhead as much as possible:  \na) For a reference target type, we use a static_cast expression modulo its extra cases.  \nb) For a non-reference target type we use a ::new expression."},"sortText":"42b5a9f9__do_is_static_castable_impl","filterText":"__do_is_static_castable_impl","insertText":"std::__do_is_static_castable_impl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":8}},"newText":"std::__do_is_static_castable_impl"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":191},"contentChanges":[{"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":8}},"rangeLength":0,"text":"u"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":61,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 840

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'statu'; did you mean 'stat'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\mbed\\platform\\include\\platform\\mbed_retarget.h:750:9:\nnote: 'stat' declared here"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":61,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":192},"contentChanges":[{"range":{"start":{"line":8,"character":9},"end":{"line":8,"character":9}},"rangeLength":0,"text":"s"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":61}}Content-Length: 221

{"jsonrpc":"2.0","id":62,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":62,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'status'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 506

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":10}},"message":"Use of undeclared identifier 'status'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":63,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":192}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":193},"contentChanges":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"rangeLength":0,"text":"F"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":64,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 402

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'statusF'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":64,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 507

{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":11},"end":{"line":8,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":11}},"message":"Use of undeclared identifier 'statusF'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":65,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":193}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":194},"contentChanges":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 221

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'status'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":66,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":195},"contentChanges":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"rangeLength":0,"text":"B"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":67,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":67,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":68,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":11},"context":{"triggerKind":1}}}
>>>
Content-Length: 402

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'statusB'"}]},"jsonrpc":"2.0"}Content-Length: 945

{"id":68,"result":{"isIncomplete":false,"items":[{"label":" statusBLUE","kind":6,"detail":"bool","sortText":"3f2cccccstatusBLUE","filterText":"statusBLUE","insertText":"statusBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":11}},"newText":"statusBLUE"}},{"label":"•NSAPI_EVENT_CELLULAR_STATUS_BASE","kind":20,"detail":"nsapi_event","documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nCellular modem status has changed, See the enum values from enum cellular_connection_status_t in /connectivity/cellular/framework/common/CellularCommon.h"},"sortText":"41107626NSAPI_EVENT_CELLULAR_STATUS_BASE","filterText":"NSAPI_EVENT_CELLULAR_STATUS_BASE","insertText":"NSAPI_EVENT_CELLULAR_STATUS_BASE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":11}},"newText":"NSAPI_EVENT_CELLULAR_STATUS_BASE"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":196},"contentChanges":[{"range":{"start":{"line":8,"character":11},"end":{"line":8,"character":11}},"rangeLength":0,"text":"L"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":69,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":69,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 951

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":12}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'statusBL'; did you mean 'statusBLUE'? (fix available)\n\nsketch_nov24a.ino.cpp:6:6: note: 'statusBLUE' declared here"},{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}},"severity":3,"message":"'statusBLUE' declared here\n\nsketch_nov24a.ino.cpp:14:5: error: use of undeclared identifier 'statusBL'; did you mean 'statusBLUE'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":197},"contentChanges":[{"range":{"start":{"line":8,"character":12},"end":{"line":8,"character":12}},"rangeLength":0,"text":"U"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":70,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":70,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 953

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":13}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'statusBLU'; did you mean 'statusBLUE'? (fix available)\n\nsketch_nov24a.ino.cpp:6:6: note: 'statusBLUE' declared here"},{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}},"severity":3,"message":"'statusBLUE' declared here\n\nsketch_nov24a.ino.cpp:14:5: error: use of undeclared identifier 'statusBLU'; did you mean 'statusBLUE'?"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":198},"contentChanges":[{"range":{"start":{"line":8,"character":13},"end":{"line":8,"character":13}},"rangeLength":0,"text":"E"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":71,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":71,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":199},"contentChanges":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":14}},"rangeLength":10,"text":"statusBLUE"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":72,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":72,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":73,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":14},"end":{"line":8,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":73,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":200},"contentChanges":[{"range":{"start":{"line":8,"character":14},"end":{"line":8,"character":14}},"rangeLength":0,"text":" "}]}}Content-Length: 221

{"jsonrpc":"2.0","id":74,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":74,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":201},"contentChanges":[{"range":{"start":{"line":8,"character":15},"end":{"line":8,"character":15}},"rangeLength":0,"text":"="}]}}Content-Length: 221

{"jsonrpc":"2.0","id":75,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":75,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 383

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":202},"contentChanges":[{"range":{"start":{"line":8,"character":16},"end":{"line":8,"character":16}},"rangeLength":0,"text":" "}]}}Content-Length: 221

{"jsonrpc":"2.0","id":76,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":76,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 383

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":202}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":203},"contentChanges":[{"range":{"start":{"line":8,"character":17},"end":{"line":8,"character":17}},"rangeLength":0,"text":"!"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":77,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":77,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 383

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":78,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":78,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":204},"contentChanges":[{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":18}},"rangeLength":0,"text":"s"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":79,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":79,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":80,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":19},"context":{"triggerKind":1}}}
>>>
Content-Length: 595

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}Content-Length: 39943

{"id":80,"result":{"isIncomplete":true,"items":[{"label":" statusBLUE","kind":6,"detail":"bool","sortText":"3da26878statusBLUE","filterText":"statusBLUE","insertText":"statusBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"statusBLUE"}},{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"3f000000sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"3f000000sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"struct"}},{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3f2cccccsetup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"setup()"}},{"label":"•sleep_manager_can_deep_sleep()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_power_mgmt.h\"`  \nGet the status of deep sleep allowance for a target  \n@return true if a target can go to deepsleep, false otherwise"},"sortText":"3f5762fbsleep_manager_can_deep_sleep","filterText":"sleep_manager_can_deep_sleep","insertText":"sleep_manager_can_deep_sleep()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sleep_manager_can_deep_sleep()"}},{"label":"•sleep_manager_can_deep_sleep_test_check()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_power_mgmt.h\"`  \nCheck if the target can deep sleep within a period of time  \nThis function in intended for use in testing. The amount of time this functions waits for deeps sleep to be available is currently 2ms. This may change in the future depending on testing requirements.  \n@return true if a target can go to deepsleep, false otherwise"},"sortText":"3f5762fbsleep_manager_can_deep_sleep_test_check","filterText":"sleep_manager_can_deep_sleep_test_check","insertText":"sleep_manager_can_deep_sleep_test_check()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sleep_manager_can_deep_sleep_test_check()"}},{"label":"•std::signbit(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`  \nNote: middle-end/36757 is fixed, \\_\\_builtin_signbit is type-generic."},"sortText":"3f6bc26asignbit","filterText":"signbit","insertText":"std::signbit($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"std::signbit($0)"}},{"label":" std","kind":9,"sortText":"3f9eb851std","filterText":"std","insertText":"std","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"std"}},{"label":" String","kind":7,"documentation":{"kind":"markdown","value":"The string class"},"sortText":"3fbcac85String","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"String"}},{"label":" StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"An inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"3fd45177StringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"StringSumHelper"}},{"label":"•Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`"},"sortText":"3fecba8fStream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"Stream"}},{"label":"•SKIP_ALL","kind":20,"detail":"arduino::LookaheadMode","documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`  \nAll invalid characters are ignored."},"sortText":"3ff8a156SKIP_ALL","filterText":"SKIP_ALL","insertText":"SKIP_ALL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SKIP_ALL"}},{"label":" size_t","kind":8,"sortText":"404027c7size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"size_t"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","sortText":"405cf012strlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strlen(${1:const char *})"}},{"label":" strcat(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strcat","filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strcat(${1:char *}, ${2:const char *})"}},{"label":" strchr(const char *, int)","kind":3,"detail":"char *","sortText":"405d8e68strchr","filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strchr(${1:const char *}, ${2:int})"}},{"label":" strcmp(const char *, const char *)","kind":3,"detail":"int","sortText":"405d8e68strcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":" strcoll(const char *, const char *)","kind":3,"detail":"int","sortText":"405d8e68strcoll","filterText":"strcoll","insertText":"strcoll(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strcoll(${1:const char *}, ${2:const char *})"}},{"label":" strcspn(const char *, const char *)","kind":3,"detail":"size_t","sortText":"405d8e68strcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strcspn(${1:const char *}, ${2:const char *})"}},{"label":" strerror_l(int, locale_t)","kind":3,"detail":"char *","sortText":"405d8e68strerror_l","filterText":"strerror_l","insertText":"strerror_l(${1:int}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strerror_l(${1:int}, ${2:locale_t})"}},{"label":" strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strlcat","filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncmp(const char *, const char *, size_t)","kind":3,"detail":"int","sortText":"405d8e68strncmp","filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strnstr(const char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strnstr","filterText":"strnstr","insertText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strpbrk(const char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strpbrk","filterText":"strpbrk","insertText":"strpbrk(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strpbrk(${1:const char *}, ${2:const char *})"}},{"label":" strrchr(const char *, int)","kind":3,"detail":"char *","sortText":"405d8e68strrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":" strstr(const char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strstr","filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strstr(${1:const char *}, ${2:const char *})"}},{"label":" scalbln","kind":18,"sortText":"406c52eascalbln","filterText":"scalbln","insertText":"scalbln","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"scalbln"}},{"label":" sin","kind":18,"sortText":"406c52easin","filterText":"sin","insertText":"sin","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sin"}},{"label":"•SIO_IRQ_PROC0n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4071b066SIO_IRQ_PROC0n","filterText":"SIO_IRQ_PROC0n","insertText":"SIO_IRQ_PROC0n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SIO_IRQ_PROC0n"}},{"label":"•SysTick_IRQn","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`  \n15 Cortex-M0 System Tick Interrupt"},"sortText":"4071b066SysTick_IRQn","filterText":"SysTick_IRQn","insertText":"SysTick_IRQn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SysTick_IRQn"}},{"label":"•SystemCoreClock","kind":6,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`  \nSystem Clock Frequency (Core Clock)"},"sortText":"4071b066SystemCoreClock","filterText":"SystemCoreClock","insertText":"SystemCoreClock","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SystemCoreClock"}},{"label":" scanf(const char *, ...)","kind":3,"detail":"int","sortText":"4071b066scanf","filterText":"scanf","insertText":"scanf(${1:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"scanf(${1:const char *, ...})"}},{"label":" setbuf(FILE *, char *)","kind":3,"detail":"void","sortText":"4071b066setbuf","filterText":"setbuf","insertText":"setbuf(${1:FILE *}, ${2:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"setbuf(${1:FILE *}, ${2:char *})"}},{"label":" setbuffer(FILE *, char *, int)","kind":3,"detail":"void","sortText":"4071b066setbuffer","filterText":"setbuffer","insertText":"setbuffer(${1:FILE *}, ${2:char *}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"setbuffer(${1:FILE *}, ${2:char *}, ${3:int})"}},{"label":" setlinebuf(FILE *)","kind":3,"detail":"int","sortText":"4071b066setlinebuf","filterText":"setlinebuf","insertText":"setlinebuf(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"setlinebuf(${1:FILE *})"}},{"label":" setvbuf(FILE *, char *, int, size_t)","kind":3,"detail":"int","sortText":"4071b066setvbuf","filterText":"setvbuf","insertText":"setvbuf(${1:FILE *}, ${2:char *}, ${3:int}, ${4:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"setvbuf(${1:FILE *}, ${2:char *}, ${3:int}, ${4:size_t})"}},{"label":" siprintf(char *, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066siprintf","filterText":"siprintf","insertText":"siprintf(${1:char *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"siprintf(${1:char *}, ${2:const char *, ...})"}},{"label":" siscanf(const char *, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066siscanf","filterText":"siscanf","insertText":"siscanf(${1:const char *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"siscanf(${1:const char *}, ${2:const char *, ...})"}},{"label":" sniprintf(char *, size_t, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066sniprintf","filterText":"sniprintf","insertText":"sniprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sniprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})"}},{"label":" snprintf(char *, size_t, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066snprintf","filterText":"snprintf","insertText":"snprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"snprintf(${1:char *}, ${2:size_t}, ${3:const char *, ...})"}},{"label":" sprintf(char *, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066sprintf","filterText":"sprintf","insertText":"sprintf(${1:char *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sprintf(${1:char *}, ${2:const char *, ...})"}},{"label":" sscanf(const char *, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066sscanf","filterText":"sscanf","insertText":"sscanf(${1:const char *}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sscanf(${1:const char *}, ${2:const char *, ...})"}},{"label":" strncasecmp(const char *, const char *, size_t)","kind":3,"detail":"int","sortText":"4071b066strncasecmp","filterText":"strncasecmp","insertText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncasecmp_l(const char *, const char *, size_t, locale_t)","kind":3,"detail":"int","sortText":"4071b066strncasecmp_l","filterText":"strncasecmp_l","insertText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})"}},{"label":" strtoumax(const char *, char **, int)","kind":3,"detail":"uintmax_t","sortText":"4071b066strtoumax","filterText":"strtoumax","insertText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":" seed48(unsigned short *)","kind":3,"detail":"unsigned short *","sortText":"40791bfcseed48","filterText":"seed48","insertText":"seed48(${1:unsigned short *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"seed48(${1:unsigned short *})"}},{"label":" setenv(const char *__string, const char *__value, int __overwrite)","kind":3,"detail":"int","sortText":"40791bfcsetenv","filterText":"setenv","insertText":"setenv(${1:const char *__string}, ${2:const char *__value}, ${3:int __overwrite})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"setenv(${1:const char *__string}, ${2:const char *__value}, ${3:int __overwrite})"}},{"label":" setstate(char *)","kind":3,"detail":"char *","sortText":"40791bfcsetstate","filterText":"setstate","insertText":"setstate(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"setstate(${1:char *})"}},{"label":"•singleton_lock()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"SingletonPtr.h\"`  \nLock the singleton mutex  \nThis function is typically used to provide exclusive access when initializing a global object."},"sortText":"40791bfcsingleton_lock","filterText":"singleton_lock","insertText":"singleton_lock()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"singleton_lock()"}},{"label":" sinh(double)","kind":3,"detail":"double","sortText":"40791bfcsinh","filterText":"sinh","insertText":"sinh(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sinh(${1:double})"}},{"label":" sinhf(float)","kind":3,"detail":"float","sortText":"40791bfcsinhf","filterText":"sinhf","insertText":"sinhf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sinhf(${1:float})"}},{"label":"•sleep_manager_lock_deep_sleep_internal()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_power_mgmt.h\"`  \nLock the deep sleep mode  \nThis locks the automatic deep mode selection.  \nsleep_manager_sleep_auto() will ignore deepsleep mode if this function is invoked at least once (the internal counter is non-zero)  \nUse this locking mechanism for interrupt driven API that are running in the background and deepsleep could affect their functionality  \nThe lock is a counter, can be locked up to USHRT_MAX This function is IRQ and thread safe"},"sortText":"40791bfcsleep_manager_lock_deep_sleep_internal","filterText":"sleep_manager_lock_deep_sleep_internal","insertText":"sleep_manager_lock_deep_sleep_internal()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sleep_manager_lock_deep_sleep_internal()"}},{"label":" srand(unsigned int __seed)","kind":3,"detail":"void","sortText":"40791bfcsrand","filterText":"srand","insertText":"srand(${1:unsigned int __seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"srand(${1:unsigned int __seed})"}},{"label":" srand48(long)","kind":3,"detail":"void","sortText":"40791bfcsrand48","filterText":"srand48","insertText":"srand48(${1:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"srand48(${1:long})"}},{"label":" srandom(unsigned int)","kind":3,"detail":"void","sortText":"40791bfcsrandom","filterText":"srandom","insertText":"srandom(${1:unsigned int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"srandom(${1:unsigned int})"}},{"label":" strtod(const char *__n, char **__end_PTR)","kind":3,"detail":"double","sortText":"40791bfcstrtod","filterText":"strtod","insertText":"strtod(${1:const char *__n}, ${2:char **__end_PTR})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strtod(${1:const char *__n}, ${2:char **__end_PTR})"}},{"label":" strtof(const char *__n, char **__end_PTR)","kind":3,"detail":"float","sortText":"40791bfcstrtof","filterText":"strtof","insertText":"strtof(${1:const char *__n}, ${2:char **__end_PTR})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strtof(${1:const char *__n}, ${2:char **__end_PTR})"}},{"label":" strtol(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"long","sortText":"40791bfcstrtol","filterText":"strtol","insertText":"strtol(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strtol(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtold(const char *, char **)","kind":3,"detail":"long double","sortText":"40791bfcstrtold","filterText":"strtold","insertText":"strtold(${1:const char *}, ${2:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strtold(${1:const char *}, ${2:char **})"}},{"label":" strtoll(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"long long","sortText":"40791bfcstrtoll","filterText":"strtoll","insertText":"strtoll(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strtoll(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtoul(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"unsigned long","sortText":"40791bfcstrtoul","filterText":"strtoul","insertText":"strtoul(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strtoul(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtoull(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"unsigned long long","sortText":"40791bfcstrtoull","filterText":"strtoull","insertText":"strtoull(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"strtoull(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" suboptarg","kind":6,"detail":"char *","documentation":{"kind":"markdown","value":"getsubopt(3) external variable"},"sortText":"40791bfcsuboptarg","filterText":"suboptarg","insertText":"suboptarg","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"suboptarg"}},{"label":" swscanf(const wchar_t *, const wchar_t *, ...)","kind":3,"detail":"int","sortText":"40791bfcswscanf","filterText":"swscanf","insertText":"swscanf(${1:const wchar_t *}, ${2:const wchar_t *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"swscanf(${1:const wchar_t *}, ${2:const wchar_t *, ...})"}},{"label":" system(const char *__string)","kind":3,"detail":"int","sortText":"40791bfcsystem","filterText":"system","insertText":"system(${1:const char *__string})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"system(${1:const char *__string})"}},{"label":"•system_reset()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_power_mgmt.h\"`  \nResets the processor and most of the sub-system  \n@note Does not affect the debug sub-system"},"sortText":"40791bfcsystem_reset","filterText":"system_reset","insertText":"system_reset()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"system_reset()"}},{"label":" SCB_Type","kind":8,"documentation":{"kind":"markdown","value":"\\\\brief Structure type to access the System Control Block (SCB)."},"sortText":"407f2f3bSCB_Type","filterText":"SCB_Type","insertText":"SCB_Type","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SCB_Type"}},{"label":" SysTick_Type","kind":8,"documentation":{"kind":"markdown","value":"\\\\brief Structure type to access the System Timer (SysTick)."},"sortText":"407f2f3bSysTick_Type","filterText":"SysTick_Type","insertText":"SysTick_Type","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SysTick_Type"}},{"label":"•stat(const char *__path, struct stat *__sbuf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"407f2f3bstat","filterText":"stat","insertText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})"}},{"label":"•serial_free(serial_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nRelease the serial peripheral, not currently invoked. It requires further resource management.  \n@param obj The serial object"},"sortText":"4088511fserial_free","filterText":"serial_free","insertText":"serial_free(${1:serial_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"serial_free(${1:serial_t *obj})"}},{"label":"•serial_irq_set(serial_t *obj, SerialIrq irq, uint32_t enable)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nConfigure serial interrupt. This function is used for word-approach  \n@param obj The serial object  \n@param irq The serial IRQ type (RX or TX)  \n@param enable Set to non-zero to enable events, or zero to disable them"},"sortText":"4088511fserial_irq_set","filterText":"serial_irq_set","insertText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"serial_irq_set(${1:serial_t *obj}, ${2:SerialIrq irq}, ${3:uint32_t enable})"}},{"label":"•serial_pinmap_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fserial_pinmap_t","filterText":"serial_pinmap_t","insertText":"serial_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"serial_pinmap_t"}},{"label":"•serial_set_flow_control_direct(serial_t *obj, FlowControl type, const serial_fc_pinmap_t *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nConfigure the serial for the flow control. It sets flow control in the hardware if a serial peripheral supports it, otherwise software emulation is used.  \n@param obj The serial object  \n@param type The type of the flow control. Look at the available FlowControl types.  \n@param pinmap Pointer to structure which holds static pinmap"},"sortText":"4088511fserial_set_flow_control_direct","filterText":"serial_set_flow_control_direct","insertText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"serial_set_flow_control_direct(${1:serial_t *obj}, ${2:FlowControl type}, ${3:const serial_fc_pinmap_t *pinmap})"}},{"label":"•serial_tx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nGet the pins that support Serial TX  \nReturn a PinMap array of pins that support Serial TX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"4088511fserial_tx_pinmap","filterText":"serial_tx_pinmap","insertText":"serial_tx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"serial_tx_pinmap()"}},{"label":"•spi_master_miso_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI MISO  \nReturn a PinMap array of pins that support SPI MISO in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"4088511fspi_master_miso_pinmap","filterText":"spi_master_miso_pinmap","insertText":"spi_master_miso_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"spi_master_miso_pinmap()"}},{"label":"•SOCK_CONNECTED","kind":20,"detail":"socket_state","documentation":{"kind":"markdown","value":"From `\"SocketStats.h\"`  \nSocket is associated to peer address, either by connect() or sendto()/recvfrom() calls"},"sortText":"40907626SOCK_CONNECTED","filterText":"SOCK_CONNECTED","insertText":"SOCK_CONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SOCK_CONNECTED"}},{"label":"•SOCK_LISTEN","kind":20,"detail":"socket_state","documentation":{"kind":"markdown","value":"From `\"SocketStats.h\"`  \nSocket is listening for incoming connections"},"sortText":"40907626SOCK_LISTEN","filterText":"SOCK_LISTEN","insertText":"SOCK_LISTEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SOCK_LISTEN"}},{"label":"•std::sin(float __x)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aasin","filterText":"sin","insertText":"std::sin(${1:float __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"std::sin(${1:float __x})"}},{"label":"•std::sinh(float __x)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aasinh","filterText":"sinh","insertText":"std::sinh(${1:float __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"std::sinh(${1:float __x})"}},{"label":"•std::sqrt(long double __x)","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aasqrt","filterText":"sqrt","insertText":"std::sqrt(${1:long double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"std::sqrt(${1:long double __x})"}},{"label":"•SPI_CPHA_0","kind":20,"detail":"spi_cpha_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_CPHA_0","filterText":"SPI_CPHA_0","insertText":"SPI_CPHA_0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SPI_CPHA_0"}},{"label":"•SPI_CPHA_1","kind":20,"detail":"spi_cpha_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_CPHA_1","filterText":"SPI_CPHA_1","insertText":"SPI_CPHA_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SPI_CPHA_1"}},{"label":"•SPI_CPOL_0","kind":20,"detail":"spi_cpol_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_CPOL_0","filterText":"SPI_CPOL_0","insertText":"SPI_CPOL_0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SPI_CPOL_0"}},{"label":"•SPI_CPOL_1","kind":20,"detail":"spi_cpol_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_CPOL_1","filterText":"SPI_CPOL_1","insertText":"SPI_CPOL_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SPI_CPOL_1"}},{"label":"•SPI_LSB_FIRST","kind":20,"detail":"spi_order_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_LSB_FIRST","filterText":"SPI_LSB_FIRST","insertText":"SPI_LSB_FIRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SPI_LSB_FIRST"}},{"label":"•SPI_MSB_FIRST","kind":20,"detail":"spi_order_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9SPI_MSB_FIRST","filterText":"SPI_MSB_FIRST","insertText":"SPI_MSB_FIRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"SPI_MSB_FIRST"}},{"label":"•sleep_ms(uint32_t ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Wait for the given number of milliseconds before returning  \n\\\\ingroup sleep  \n\\\\note This method attempts to perform a lower power sleep (using WFE) as much as possible.  \n\\\\param ms the number of milliseconds to sleep"},"sortText":"409c96d9sleep_ms","filterText":"sleep_ms","insertText":"sleep_ms(${1:uint32_t ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sleep_ms(${1:uint32_t ms})"}},{"label":"•sleep_until(absolute_time_t target)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Wait until after the given timestamp to return  \n\\\\ingroup sleep  \n\\\\note This method attempts to perform a lower power (WFE) sleep  \n\\\\param target the time after which to return  \n\\\\sa sleep_us()  \n\\\\sa busy_wait_until()"},"sortText":"409c96d9sleep_until","filterText":"sleep_until","insertText":"sleep_until(${1:absolute_time_t target})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sleep_until(${1:absolute_time_t target})"}},{"label":"•sleep_us(uint64_t us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Wait for the given number of microseconds before returning  \n\\\\ingroup sleep  \n\\\\note This method attempts to perform a lower power (WFE) sleep  \n\\\\param us the number of microseconds to sleep  \n\\\\sa busy_wait_us()"},"sortText":"409c96d9sleep_us","filterText":"sleep_us","insertText":"sleep_us(${1:uint64_t us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"sleep_us(${1:uint64_t us})"}},{"label":"•spi_cpha_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9spi_cpha_t","filterText":"spi_cpha_t","insertText":"spi_cpha_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"spi_cpha_t"}},{"label":"•spi_cpol_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9spi_cpol_t","filterText":"spi_cpol_t","insertText":"spi_cpol_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"spi_cpol_t"}},{"label":"•spi_deinit(spi_inst_t *spi)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`  \n\\\\brief Deinitialise SPI instances  \n\\\\ingroup hardware_spi Puts the SPI into a disabled state. Init will need to be called to reenable the device functions.  \n\\\\param spi SPI instance specifier, either \\\\ref spi0 or \\\\ref spi1"},"sortText":"409c96d9spi_deinit","filterText":"spi_deinit","insertText":"spi_deinit(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"spi_deinit(${1:spi_inst_t *spi})"}},{"label":"•spi_get_hw(spi_inst_t *spi)","kind":3,"detail":"spi_hw_t *","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`"},"sortText":"409c96d9spi_get_hw","filterText":"spi_get_hw","insertText":"spi_get_hw(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"spi_get_hw(${1:spi_inst_t *spi})"}},{"label":"•spi_get_index(spi_inst_t *spi)","kind":3,"detail":"uint","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`  \n\\\\brief Convert I2c instance to hardware instance number  \n\\\\ingroup hardware_spi  \n\\\\param spi SPI instance  \n\\\\return Number of SPI, 0 or 1."},"sortText":"409c96d9spi_get_index","filterText":"spi_get_index","insertText":"spi_get_index(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"spi_get_index(${1:spi_inst_t *spi})"}},{"label":"•spi_inst_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`  \nOpaque type representing an SPI instance."},"sortText":"409c96d9spi_inst_t","filterText":"spi_inst_t","insertText":"spi_inst_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"spi_inst_t"}},{"label":"•spi_is_readable(spi_inst_t *spi)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"hardware/spi.h\"`  \n\\\\brief Check whether a read can be done on SPI device  \n\\\\ingroup hardware_spi  \n\\\\param spi SPI instance specifier, either \\\\ref spi0 or \\\\ref spi1  \n\\\\return Non-zero if a read is possible i.e. data is present  \n\\\\note Although the controllers each have a 8 deep RX FIFO, the current HW implementation can only return 0 or 1 rather than the data available."},"sortText":"409c96d9spi_is_readable","filterText":"spi_is_readable","insertText":"spi_is_readable(${1:spi_inst_t *spi})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":19}},"newText":"spi_is_readable(${1:spi_inst_t *spi})"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":205},"contentChanges":[{"range":{"start":{"line":8,"character":19},"end":{"line":8,"character":19}},"rangeLength":0,"text":"t"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":81,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":81,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":82,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":20},"context":{"triggerKind":3}}}
>>>
Content-Length: 596

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'st'"}]},"jsonrpc":"2.0"}Content-Length: 35638

{"id":82,"result":{"isIncomplete":true,"items":[{"label":" statusBLUE","kind":6,"detail":"bool","sortText":"3da26878statusBLUE","filterText":"statusBLUE","insertText":"statusBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"statusBLUE"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"struct"}},{"label":" std","kind":9,"sortText":"3f9eb851std","filterText":"std","insertText":"std","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std"}},{"label":" String","kind":7,"documentation":{"kind":"markdown","value":"The string class"},"sortText":"3fbcac85String","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"String"}},{"label":" StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"An inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"3fd45177StringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"StringSumHelper"}},{"label":"•Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`"},"sortText":"3fecba8fStream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"Stream"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","sortText":"405cf012strlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strlen(${1:const char *})"}},{"label":" stpcpy(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68stpcpy","filterText":"stpcpy","insertText":"stpcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"stpcpy(${1:char *}, ${2:const char *})"}},{"label":" stpncpy(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68stpncpy","filterText":"stpncpy","insertText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strcat(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strcat","filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strcat(${1:char *}, ${2:const char *})"}},{"label":" strchr(const char *, int)","kind":3,"detail":"char *","sortText":"405d8e68strchr","filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strchr(${1:const char *}, ${2:int})"}},{"label":" strcmp(const char *, const char *)","kind":3,"detail":"int","sortText":"405d8e68strcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":" strcoll(const char *, const char *)","kind":3,"detail":"int","sortText":"405d8e68strcoll","filterText":"strcoll","insertText":"strcoll(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strcoll(${1:const char *}, ${2:const char *})"}},{"label":" strcoll_l(const char *, const char *, locale_t)","kind":3,"detail":"int","sortText":"405d8e68strcoll_l","filterText":"strcoll_l","insertText":"strcoll_l(${1:const char *}, ${2:const char *}, ${3:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strcoll_l(${1:const char *}, ${2:const char *}, ${3:locale_t})"}},{"label":" strcpy(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strcpy","filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strcpy(${1:char *}, ${2:const char *})"}},{"label":" strcspn(const char *, const char *)","kind":3,"detail":"size_t","sortText":"405d8e68strcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strcspn(${1:const char *}, ${2:const char *})"}},{"label":" strdup(const char *)","kind":3,"detail":"char *","sortText":"405d8e68strdup","filterText":"strdup","insertText":"strdup(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strdup(${1:const char *})"}},{"label":" strerror(int)","kind":3,"detail":"char *","sortText":"405d8e68strerror","filterText":"strerror","insertText":"strerror(${1:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strerror(${1:int})"}},{"label":" strerror_l(int, locale_t)","kind":3,"detail":"char *","sortText":"405d8e68strerror_l","filterText":"strerror_l","insertText":"strerror_l(${1:int}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strerror_l(${1:int}, ${2:locale_t})"}},{"label":" strerror_r(int, char *, size_t)","kind":3,"detail":"int","sortText":"405d8e68strerror_r","filterText":"strerror_r","insertText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})"}},{"label":" strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strlcat","filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strlcpy","filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlwr(char *)","kind":3,"detail":"char *","sortText":"405d8e68strlwr","filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strlwr(${1:char *})"}},{"label":" strncat(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strncat","filterText":"strncat","insertText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncmp(const char *, const char *, size_t)","kind":3,"detail":"int","sortText":"405d8e68strncmp","filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strncpy","filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strndup(const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strndup","filterText":"strndup","insertText":"strndup(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strndup(${1:const char *}, ${2:size_t})"}},{"label":" strnlen(const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strnlen","filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strnlen(${1:const char *}, ${2:size_t})"}},{"label":" strnstr(const char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strnstr","filterText":"strnstr","insertText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strpbrk(const char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strpbrk","filterText":"strpbrk","insertText":"strpbrk(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strpbrk(${1:const char *}, ${2:const char *})"}},{"label":" strrchr(const char *, int)","kind":3,"detail":"char *","sortText":"405d8e68strrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":" strsep(char **, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strsep","filterText":"strsep","insertText":"strsep(${1:char **}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strsep(${1:char **}, ${2:const char *})"}},{"label":" strsignal(int __signo)","kind":3,"detail":"char *","sortText":"405d8e68strsignal","filterText":"strsignal","insertText":"strsignal(${1:int __signo})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strsignal(${1:int __signo})"}},{"label":" strspn(const char *, const char *)","kind":3,"detail":"size_t","sortText":"405d8e68strspn","filterText":"strspn","insertText":"strspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strspn(${1:const char *}, ${2:const char *})"}},{"label":" strstr(const char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strstr","filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strstr(${1:const char *}, ${2:const char *})"}},{"label":" strtok(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strtok","filterText":"strtok","insertText":"strtok(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtok(${1:char *}, ${2:const char *})"}},{"label":" strtok_r(char *, const char *, char **)","kind":3,"detail":"char *","sortText":"405d8e68strtok_r","filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})"}},{"label":" strupr(char *)","kind":3,"detail":"char *","sortText":"405d8e68strupr","filterText":"strupr","insertText":"strupr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strupr(${1:char *})"}},{"label":" strxfrm(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strxfrm","filterText":"strxfrm","insertText":"strxfrm(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strxfrm(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strxfrm_l(char *, const char *, size_t, locale_t)","kind":3,"detail":"size_t","sortText":"405d8e68strxfrm_l","filterText":"strxfrm_l","insertText":"strxfrm_l(${1:char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strxfrm_l(${1:char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})"}},{"label":"•Stream","kind":18,"documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`"},"sortText":"406c52eaStream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"Stream"}},{"label":" String","kind":18,"sortText":"406c52eaString","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"String"}},{"label":" strtod","kind":18,"sortText":"406c52eastrtod","filterText":"strtod","insertText":"strtod","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtod"}},{"label":" strtol","kind":18,"sortText":"406c52eastrtol","filterText":"strtol","insertText":"strtol","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtol"}},{"label":" strtoul","kind":18,"sortText":"406c52eastrtoul","filterText":"strtoul","insertText":"strtoul","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtoul"}},{"label":" size_t","kind":8,"sortText":"40701dd7size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"size_t"}},{"label":" strcasecmp(const char *, const char *)","kind":3,"detail":"int","sortText":"4071b066strcasecmp","filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strcasecmp(${1:const char *}, ${2:const char *})"}},{"label":" strcasecmp_l(const char *, const char *, locale_t)","kind":3,"detail":"int","sortText":"4071b066strcasecmp_l","filterText":"strcasecmp_l","insertText":"strcasecmp_l(${1:const char *}, ${2:const char *}, ${3:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strcasecmp_l(${1:const char *}, ${2:const char *}, ${3:locale_t})"}},{"label":" strncasecmp(const char *, const char *, size_t)","kind":3,"detail":"int","sortText":"4071b066strncasecmp","filterText":"strncasecmp","insertText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncasecmp_l(const char *, const char *, size_t, locale_t)","kind":3,"detail":"int","sortText":"4071b066strncasecmp_l","filterText":"strncasecmp_l","insertText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})"}},{"label":" strtoimax(const char *, char **, int)","kind":3,"detail":"intmax_t","sortText":"4071b066strtoimax","filterText":"strtoimax","insertText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":" strtoimax_l(const char *, char **_restrict, int, locale_t)","kind":3,"detail":"intmax_t","sortText":"4071b066strtoimax_l","filterText":"strtoimax_l","insertText":"strtoimax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtoimax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})"}},{"label":" strtoumax(const char *, char **, int)","kind":3,"detail":"uintmax_t","sortText":"4071b066strtoumax","filterText":"strtoumax","insertText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":" strtoumax_l(const char *, char **_restrict, int, locale_t)","kind":3,"detail":"uintmax_t","sortText":"4071b066strtoumax_l","filterText":"strtoumax_l","insertText":"strtoumax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtoumax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})"}},{"label":"•statvfs(const char *path, struct statvfs *buf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})"}},{"label":"•statvfs","kind":22,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"statvfs"}},{"label":" strftime(char *_s, size_t _maxsize, const char *_fmt, const struct tm *_t)","kind":3,"detail":"size_t","sortText":"40791bfcstrftime","filterText":"strftime","insertText":"strftime(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strftime(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t})"}},{"label":" strftime_l(char *_s, size_t _maxsize, const char *_fmt, const struct tm *_t, locale_t _l)","kind":3,"detail":"size_t","sortText":"40791bfcstrftime_l","filterText":"strftime_l","insertText":"strftime_l(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t}, ${5:locale_t _l})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strftime_l(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t}, ${5:locale_t _l})"}},{"label":" strtod(const char *__n, char **__end_PTR)","kind":3,"detail":"double","sortText":"40791bfcstrtod","filterText":"strtod","insertText":"strtod(${1:const char *__n}, ${2:char **__end_PTR})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtod(${1:const char *__n}, ${2:char **__end_PTR})"}},{"label":" strtof(const char *__n, char **__end_PTR)","kind":3,"detail":"float","sortText":"40791bfcstrtof","filterText":"strtof","insertText":"strtof(${1:const char *__n}, ${2:char **__end_PTR})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtof(${1:const char *__n}, ${2:char **__end_PTR})"}},{"label":" strtol(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"long","sortText":"40791bfcstrtol","filterText":"strtol","insertText":"strtol(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtol(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtold(const char *, char **)","kind":3,"detail":"long double","sortText":"40791bfcstrtold","filterText":"strtold","insertText":"strtold(${1:const char *}, ${2:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtold(${1:const char *}, ${2:char **})"}},{"label":" strtoll(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"long long","sortText":"40791bfcstrtoll","filterText":"strtoll","insertText":"strtoll(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtoll(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtoul(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"unsigned long","sortText":"40791bfcstrtoul","filterText":"strtoul","insertText":"strtoul(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtoul(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtoull(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"unsigned long long","sortText":"40791bfcstrtoull","filterText":"strtoull","insertText":"strtoull(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"strtoull(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":"•stat(const char *__path, struct stat *__sbuf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"407f2f3bstat","filterText":"stat","insertText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})"}},{"label":"•mbed::Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nFile stream  \n@note Synchronization level: Set by subclass"},"sortText":"409f2ea4Stream","filterText":"Stream","insertText":"mbed::Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"mbed::Stream"}},{"label":"•std::chrono::steady_clock","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`  \n@brief Monotonic clock  \nTime returned has the property of only increasing at a uniform rate."},"sortText":"409f2ea4steady_clock","filterText":"steady_clock","insertText":"std::chrono::steady_clock","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::chrono::steady_clock"}},{"label":"•std::strchr(char *__s, int __n)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"409f2ea4strchr","filterText":"strchr","insertText":"std::strchr(${1:char *__s}, ${2:int __n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strchr(${1:char *__s}, ${2:int __n})"}},{"label":"•std::streambuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nBase class for @c char buffers."},"sortText":"409f2ea4streambuf","filterText":"streambuf","insertText":"std::streambuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::streambuf"}},{"label":"•std::stringbuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char memory buffers."},"sortText":"409f2ea4stringbuf","filterText":"stringbuf","insertText":"std::stringbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::stringbuf"}},{"label":"•std::stringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char mixed input and output memory streams."},"sortText":"409f2ea4stringstream","filterText":"stringstream","insertText":"std::stringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::stringstream"}},{"label":"•std::strpbrk(char *__s1, const char *__s2)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"409f2ea4strpbrk","filterText":"strpbrk","insertText":"std::strpbrk(${1:char *__s1}, ${2:const char *__s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strpbrk(${1:char *__s1}, ${2:const char *__s2})"}},{"label":"•std::strrchr(char *__s, int __n)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"409f2ea4strrchr","filterText":"strrchr","insertText":"std::strrchr(${1:char *__s}, ${2:int __n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strrchr(${1:char *__s}, ${2:int __n})"}},{"label":"•std::strstr(char *__s1, const char *__s2)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"409f2ea4strstr","filterText":"strstr","insertText":"std::strstr(${1:char *__s1}, ${2:const char *__s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strstr(${1:char *__s1}, ${2:const char *__s2})"}},{"label":"•std::strtod","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtod","filterText":"strtod","insertText":"std::strtod","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strtod"}},{"label":"•std::strtof","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtof","filterText":"strtof","insertText":"std::strtof","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strtof"}},{"label":"•std::strtol","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtol","filterText":"strtol","insertText":"std::strtol","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strtol"}},{"label":"•std::strtoll","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtoll","filterText":"strtoll","insertText":"std::strtoll","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strtoll"}},{"label":"•std::strtoul","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtoul","filterText":"strtoul","insertText":"std::strtoul","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strtoul"}},{"label":"•std::strtoull","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtoull","filterText":"strtoull","insertText":"std::strtoull","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strtoull"}},{"label":"•std::stable_sort(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8stable_sort","filterText":"stable_sort","insertText":"std::stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::stable_sort($0)"}},{"label":"•std::static_pointer_cast(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40a94eb8static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::static_pointer_cast($0)"}},{"label":"•std::stod(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stod","filterText":"stod","insertText":"std::stod($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::stod($0)"}},{"label":"•std::stof(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \nNB: wcstof vs wcstod."},"sortText":"40a94eb8stof","filterText":"stof","insertText":"std::stof($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::stof($0)"}},{"label":"•std::stoi(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \n21.4 Numeric Conversions [string.conversions]."},"sortText":"40a94eb8stoi","filterText":"stoi","insertText":"std::stoi($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::stoi($0)"}},{"label":"•std::stol(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stol","filterText":"stol","insertText":"std::stol($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::stol($0)"}},{"label":"•std::stold(const wstring \u0026__str, size_t *__idx = 0)","kind":3,"detail":"long double","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stold","filterText":"stold","insertText":"std::stold(${1:const wstring \u0026__str})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::stold(${1:const wstring \u0026__str})"}},{"label":"•std::stoll(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stoll","filterText":"stoll","insertText":"std::stoll($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::stoll($0)"}},{"label":"•std::stoul(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stoul","filterText":"stoul","insertText":"std::stoul($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::stoul($0)"}},{"label":"•std::stoull(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stoull","filterText":"stoull","insertText":"std::stoull($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::stoull($0)"}},{"label":"•std::streamoff","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"40a94eb8streamoff","filterText":"streamoff","insertText":"std::streamoff","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::streamoff"}},{"label":"•std::streampos","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nClauses 21.1.3.1 and 21.1.3.2 describe streampos and wstreampos as implementation defined types, but clause 27.2 requires that they must both be typedefs for fpos\\\u003cmbstate_t\u003e File position for char streams."},"sortText":"40a94eb8streampos","filterText":"streampos","insertText":"std::streampos","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::streampos"}},{"label":"•std::streamsize","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nIntegral type for I/O operation counts and buffer sizes."},"sortText":"40a94eb8streamsize","filterText":"streamsize","insertText":"std::streamsize","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::streamsize"}},{"label":"•std::string","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \nA string of @c char"},"sortText":"40a94eb8string","filterText":"string","insertText":"std::string","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::string"}},{"label":"•std::strcat","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"40b39ec4strcat","filterText":"strcat","insertText":"std::strcat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strcat"}},{"label":"•std::strchr","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"40b39ec4strchr","filterText":"strchr","insertText":"std::strchr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":20}},"newText":"std::strchr"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":206},"contentChanges":[{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":20}},"rangeLength":0,"text":"a"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":83,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":207},"contentChanges":[{"range":{"start":{"line":8,"character":21},"end":{"line":8,"character":21}},"rangeLength":0,"text":"t"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":83}}Content-Length: 221

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 597

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'sta'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":83,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":84,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":85,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":22},"context":{"triggerKind":3}}}
>>>
Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 31875

{"id":85,"result":{"isIncomplete":false,"items":[{"label":" statusBLUE","kind":6,"detail":"bool","sortText":"3da26878statusBLUE","filterText":"statusBLUE","insertText":"statusBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"statusBLUE"}},{"label":"•stat(const char *path, struct stat *st)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ee51eb8stat","filterText":"stat","insertText":"stat(${1:const char *path}, ${2:struct stat *st})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"stat(${1:const char *path}, ${2:struct stat *st})"}},{"label":"•stat","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"3ee51eb8stat","filterText":"stat","insertText":"stat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"stat"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":"•PinStatus","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"404dc07bPinStatus","filterText":"PinStatus","insertText":"PinStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"PinStatus"}},{"label":"•statvfs(const char *path, struct statvfs *buf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})"}},{"label":"•statvfs","kind":22,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"statvfs"}},{"label":"•watchdog_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"watchdog_api.h\"`  \nStatus of a watchdog operation."},"sortText":"408093a6watchdog_status_t","filterText":"watchdog_status_t","insertText":"watchdog_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"watchdog_status_t"}},{"label":"•mbed_error_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"mbed_error.h\"`  \nmbed_error_status_t description  \nmbed_error_status_t type represents the error status values under MbedOS. mbed_error_status_t values are signed integers and always be negative.\\\\n Internally its encoded as below with bit-fields representing error type, module and error code:\\\\n\\\\n mbed_error_status_t Status Encoding:\\\\n  \n\\\\verbatim | 31 Always Negative | 30-29(2 bits) | 28-24 | 23-16(8 bits) | 15-0(16 bits) | | -1 | TYPE | (unused/reserved) | MODULE TYPE | ERROR CODE |  \n\\\\endverbatim  \nThe error status value range for each error type is as follows:\\\\n POSIX Error Status-es - 0xFFFFFFFF to 0xFFFFFF01(-1 -255) - This corresponds to POSIX error codes represented as negative.\\\\n System Error Status-es - 0x80XX0100 to 0x80XX0FFF - This corresponds to System error codes range(all values are negative). Bits 23-16 will be module type(marked with XX)\\\\n Custom Error Status-es - 0xA0XX1000 to 0xA0XXFFFF - This corresponds to Custom error codes range(all values are negative). Bits 23-16 will be module type(marked with XX)\\\\n\\\\n  \nThe ERROR CODE(values encoded into ERROR CODE bit-field in mbed_error_status_t) value range for each error type is also separated as below:\\\\n POSIX Error Codes - 1 to 255.\\\\n System Error Codes - 256 to 4095.\\\\n Custom Error Codes - 4096 to 65535.\\\\n  \n@note POSIX error codes are always encoded as negative of their actual value. For example, EPERM is encoded as -EPERM.  \nAnd, the MODULE TYPE for POSIX error codes are always encoded as MBED_MODULE_UNKNOWN.\\\\n This is to enable easy injection of POSIX error codes into MbedOS error handling system without altering the actual POSIX error values.\\\\n Accordingly, POSIX error codes are represented as -1 to -255 under MbedOS error status representation."},"sortText":"40831478mbed_error_status_t","filterText":"mbed_error_status_t","insertText":"mbed_error_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_error_status_t"}},{"label":"•osStatusReserved","kind":20,"detail":"osStatus_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nPrevents enum down-size compiler optimization."},"sortText":"408fda41osStatusReserved","filterText":"osStatusReserved","insertText":"osStatusReserved","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"osStatusReserved"}},{"label":"•osStatus_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nStatus code values returned by CMSIS-RTOS functions."},"sortText":"408fda41osStatus_t","filterText":"osStatus_t","insertText":"osStatus_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"osStatus_t"}},{"label":"•osStatus","kind":8,"documentation":{"kind":"markdown","value":"From `\"cmsis_os.h\"`"},"sortText":"40957b90osStatus","filterText":"osStatus","insertText":"osStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"osStatus"}},{"label":"•nsapi_connection_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nEnum of connection status types  \nValid error codes have negative values.  \n@enum nsapi_connection_status"},"sortText":"409f6ec3nsapi_connection_status","filterText":"nsapi_connection_status","insertText":"nsapi_connection_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"nsapi_connection_status"}},{"label":"•nsapi_connection_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nEnum of connection status types  \nValid error codes have negative values.  \n@enum nsapi_connection_status"},"sortText":"409f6ec3nsapi_connection_status_t","filterText":"nsapi_connection_status_t","insertText":"nsapi_connection_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"nsapi_connection_status_t"}},{"label":"•std::static_pointer_cast(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40a94eb8static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"std::static_pointer_cast($0)"}},{"label":"•rtos::cv_status","kind":13,"documentation":{"kind":"markdown","value":"From `\"ConditionVariable.h\"`  \n\\\\addtogroup rtos-public-api  \n@{"},"sortText":"40ab25b6cv_status","filterText":"cv_status","insertText":"rtos::cv_status","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"rtos::cv_status"}},{"label":"•pwm_get_irq_status_mask()","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Get PWM interrupt status, raw  \n\\\\ingroup hardware_pwm  \n\\\\return Bitmask of all PWM interrupts currently set"},"sortText":"40c01f48pwm_get_irq_status_mask","filterText":"pwm_get_irq_status_mask","insertText":"pwm_get_irq_status_mask()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"pwm_get_irq_status_mask()"}},{"label":"•WATCHDOG_STATUS_INVALID_ARGUMENT","kind":20,"detail":"watchdog_status_t","documentation":{"kind":"markdown","value":"From `\"watchdog_api.h\"`  \nInvalid argument. *"},"sortText":"40c63cd8WATCHDOG_STATUS_INVALID_ARGUMENT","filterText":"WATCHDOG_STATUS_INVALID_ARGUMENT","insertText":"WATCHDOG_STATUS_INVALID_ARGUMENT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"WATCHDOG_STATUS_INVALID_ARGUMENT"}},{"label":"•WATCHDOG_STATUS_NOT_SUPPORTED","kind":20,"detail":"watchdog_status_t","documentation":{"kind":"markdown","value":"From `\"watchdog_api.h\"`  \nOperation not supported. *"},"sortText":"40c63cd8WATCHDOG_STATUS_NOT_SUPPORTED","filterText":"WATCHDOG_STATUS_NOT_SUPPORTED","insertText":"WATCHDOG_STATUS_NOT_SUPPORTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"WATCHDOG_STATUS_NOT_SUPPORTED"}},{"label":"•WATCHDOG_STATUS_OK","kind":20,"detail":"watchdog_status_t","documentation":{"kind":"markdown","value":"From `\"watchdog_api.h\"`  \nOperation successful. *"},"sortText":"40c63cd8WATCHDOG_STATUS_OK","filterText":"WATCHDOG_STATUS_OK","insertText":"WATCHDOG_STATUS_OK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"WATCHDOG_STATUS_OK"}},{"label":"•mbed_stats_cpu_get(mbed_stats_cpu_t *stats)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nFill the passed in CPU stat structure with CPU statistics.  \n@param stats A pointer to the mbed_stats_cpu_t structure to fill"},"sortText":"40c6867ambed_stats_cpu_get","filterText":"mbed_stats_cpu_get","insertText":"mbed_stats_cpu_get(${1:mbed_stats_cpu_t *stats})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_cpu_get(${1:mbed_stats_cpu_t *stats})"}},{"label":"•mbed_stats_cpu_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nstruct mbed_stats_cpu_t definition"},"sortText":"40c6867ambed_stats_cpu_t","filterText":"mbed_stats_cpu_t","insertText":"mbed_stats_cpu_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_cpu_t"}},{"label":"•mbed_stats_heap_get(mbed_stats_heap_t *stats)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nFill the passed in heap stat structure with the heap statistics.  \n@param stats A pointer to the mbed_stats_heap_t structure to fill"},"sortText":"40c6867ambed_stats_heap_get","filterText":"mbed_stats_heap_get","insertText":"mbed_stats_heap_get(${1:mbed_stats_heap_t *stats})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_heap_get(${1:mbed_stats_heap_t *stats})"}},{"label":"•mbed_stats_heap_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nstruct mbed_stats_heap_t definition"},"sortText":"40c6867ambed_stats_heap_t","filterText":"mbed_stats_heap_t","insertText":"mbed_stats_heap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_heap_t"}},{"label":"•mbed_stats_stack_get(mbed_stats_stack_t *stats)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nFill the passed in structure with stack statistics accumulated for all threads. The thread_id will be 0 and stack_cnt will represent number of threads.  \n@param stats A pointer to the mbed_stats_stack_t structure to fill"},"sortText":"40c6867ambed_stats_stack_get","filterText":"mbed_stats_stack_get","insertText":"mbed_stats_stack_get(${1:mbed_stats_stack_t *stats})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_stack_get(${1:mbed_stats_stack_t *stats})"}},{"label":"•mbed_stats_stack_get_each(mbed_stats_stack_t *stats, size_t count)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nFill the passed array of structures with the stack statistics for each available thread.  \n@param stats A pointer to an array of mbed_stats_stack_t structures to fill  \n@param count The number of mbed_stats_stack_t structures in the provided array  \n@return The number of mbed_stats_stack_t structures that have been filled.  \nIf the number of stacks on the system is less than or equal to count, it will equal the number of stacks on the system.  \nIf the number of stacks on the system is greater than count, it will equal count."},"sortText":"40c6867ambed_stats_stack_get_each","filterText":"mbed_stats_stack_get_each","insertText":"mbed_stats_stack_get_each(${1:mbed_stats_stack_t *stats}, ${2:size_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_stack_get_each(${1:mbed_stats_stack_t *stats}, ${2:size_t count})"}},{"label":"•mbed_stats_stack_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nstruct mbed_stats_stack_t definition"},"sortText":"40c6867ambed_stats_stack_t","filterText":"mbed_stats_stack_t","insertText":"mbed_stats_stack_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_stack_t"}},{"label":"•mbed_stats_sys_get(mbed_stats_sys_t *stats)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nFill the passed in system stat structure with system statistics.  \n@param stats A pointer to the mbed_stats_sys_t structure to fill"},"sortText":"40c6867ambed_stats_sys_get","filterText":"mbed_stats_sys_get","insertText":"mbed_stats_sys_get(${1:mbed_stats_sys_t *stats})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_sys_get(${1:mbed_stats_sys_t *stats})"}},{"label":"•mbed_stats_sys_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nstruct mbed_stats_sys_t definition"},"sortText":"40c6867ambed_stats_sys_t","filterText":"mbed_stats_sys_t","insertText":"mbed_stats_sys_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_sys_t"}},{"label":"•mbed_stats_thread_get_each(mbed_stats_thread_t *stats, size_t count)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nFill the passed array of stat structures with the thread statistics for each available thread.  \n@param stats A pointer to an array of mbed_stats_thread_t structures to fill  \n@param count The number of mbed_stats_thread_t structures in the provided array  \n@return The number of mbed_stats_thread_t structures that have been filled.  \nIf the number of threads on the system is less than or equal to count, it will equal the number of threads on the system.  \nIf the number of threads on the system is greater than count, it will equal count."},"sortText":"40c6867ambed_stats_thread_get_each","filterText":"mbed_stats_thread_get_each","insertText":"mbed_stats_thread_get_each(${1:mbed_stats_thread_t *stats}, ${2:size_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_thread_get_each(${1:mbed_stats_thread_t *stats}, ${2:size_t count})"}},{"label":"•mbed_stats_thread_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nstruct mbed_stats_thread_t definition"},"sortText":"40c6867ambed_stats_thread_t","filterText":"mbed_stats_thread_t","insertText":"mbed_stats_thread_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_thread_t"}},{"label":"•NSAPI_STATUS_CONNECTING","kind":20,"detail":"nsapi_connection_status","documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nconnecting to network"},"sortText":"40cc589dNSAPI_STATUS_CONNECTING","filterText":"NSAPI_STATUS_CONNECTING","insertText":"NSAPI_STATUS_CONNECTING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"NSAPI_STATUS_CONNECTING"}},{"label":"•NSAPI_STATUS_DISCONNECTED","kind":20,"detail":"nsapi_connection_status","documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nno connection to network"},"sortText":"40cc589dNSAPI_STATUS_DISCONNECTED","filterText":"NSAPI_STATUS_DISCONNECTED","insertText":"NSAPI_STATUS_DISCONNECTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"NSAPI_STATUS_DISCONNECTED"}},{"label":"•NSAPI_STATUS_ERROR_UNSUPPORTED","kind":20,"detail":"nsapi_connection_status","documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`"},"sortText":"40cc589dNSAPI_STATUS_ERROR_UNSUPPORTED","filterText":"NSAPI_STATUS_ERROR_UNSUPPORTED","insertText":"NSAPI_STATUS_ERROR_UNSUPPORTED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"NSAPI_STATUS_ERROR_UNSUPPORTED"}},{"label":"•NSAPI_STATUS_GLOBAL_UP","kind":20,"detail":"nsapi_connection_status","documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nglobal IP address set"},"sortText":"40cc589dNSAPI_STATUS_GLOBAL_UP","filterText":"NSAPI_STATUS_GLOBAL_UP","insertText":"NSAPI_STATUS_GLOBAL_UP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"NSAPI_STATUS_GLOBAL_UP"}},{"label":"•NSAPI_STATUS_LOCAL_UP","kind":20,"detail":"nsapi_connection_status","documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nlocal IP address set"},"sortText":"40cc589dNSAPI_STATUS_LOCAL_UP","filterText":"NSAPI_STATUS_LOCAL_UP","insertText":"NSAPI_STATUS_LOCAL_UP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"NSAPI_STATUS_LOCAL_UP"}},{"label":"•SocketStats","kind":7,"documentation":{"kind":"markdown","value":"From `\"SocketStats.h\"`  \nSocketStats class  \nClass to get the network socket statistics"},"sortText":"40db5139SocketStats","filterText":"SocketStats","insertText":"SocketStats","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"SocketStats"}},{"label":"•mbed_stats_socket_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"SocketStats.h\"`  \nStructure to parse socket statistics"},"sortText":"40db5139mbed_stats_socket_t","filterText":"mbed_stats_socket_t","insertText":"mbed_stats_socket_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbed_stats_socket_t"}},{"label":"•socket_state","kind":8,"documentation":{"kind":"markdown","value":"From `\"SocketStats.h\"`  \nEnum of socket states  \nCan be used to specify current state of socket - open, closed, connected or listen.  \n@enum socket_state"},"sortText":"40db5139socket_state","filterText":"socket_state","insertText":"socket_state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"socket_state"}},{"label":"•mbedtls_ssl_states","kind":8,"documentation":{"kind":"markdown","value":"From `\"ssl.h\"`  \nSSL state machine"},"sortText":"40ea49d8mbedtls_ssl_states","filterText":"mbedtls_ssl_states","insertText":"mbedtls_ssl_states","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbedtls_ssl_states"}},{"label":"•osKernelState_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nKernel state."},"sortText":"40ee74c3osKernelState_t","filterText":"osKernelState_t","insertText":"osKernelState_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"osKernelState_t"}},{"label":"•osThreadState_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nThread state."},"sortText":"40ee74c3osThreadState_t","filterText":"osThreadState_t","insertText":"osThreadState_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"osThreadState_t"}},{"label":"•NSAPI_EVENT_CELLULAR_STATUS_BASE","kind":20,"detail":"nsapi_event","documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nCellular modem status has changed, See the enum values from enum cellular_connection_status_t in /connectivity/cellular/framework/common/CellularCommon.h"},"sortText":"40f94275NSAPI_EVENT_CELLULAR_STATUS_BASE","filterText":"NSAPI_EVENT_CELLULAR_STATUS_BASE","insertText":"NSAPI_EVENT_CELLULAR_STATUS_BASE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"NSAPI_EVENT_CELLULAR_STATUS_BASE"}},{"label":"•NSAPI_EVENT_CELLULAR_STATUS_END","kind":20,"detail":"nsapi_event","documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \ncellular modem status has changed, See the enum values from enum cellular_connection_status_t in /connectivity/cellular/framework/common/CellularCommon.h"},"sortText":"40f94275NSAPI_EVENT_CELLULAR_STATUS_END","filterText":"NSAPI_EVENT_CELLULAR_STATUS_END","insertText":"NSAPI_EVENT_CELLULAR_STATUS_END","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"NSAPI_EVENT_CELLULAR_STATUS_END"}},{"label":"•NSAPI_EVENT_CONNECTION_STATUS_CHANGE","kind":20,"detail":"nsapi_event","documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nnetwork connection status has changed, the parameter = new status (nsapi_connection_status_t)"},"sortText":"40f94275NSAPI_EVENT_CONNECTION_STATUS_CHANGE","filterText":"NSAPI_EVENT_CONNECTION_STATUS_CHANGE","insertText":"NSAPI_EVENT_CONNECTION_STATUS_CHANGE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"NSAPI_EVENT_CONNECTION_STATUS_CHANGE"}},{"label":"•mbedtls_entropy_source_state","kind":8,"documentation":{"kind":"markdown","value":"From `\"entropy.h\"`  \n\\\\brief Entropy source state"},"sortText":"40f94275mbedtls_entropy_source_state","filterText":"mbedtls_entropy_source_state","insertText":"mbedtls_entropy_source_state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbedtls_entropy_source_state"}},{"label":"•mbedtls_entropy_source_state","kind":22,"documentation":{"kind":"markdown","value":"From `\"entropy.h\"`  \n\\\\brief Entropy source state"},"sortText":"40f94275mbedtls_entropy_source_state","filterText":"mbedtls_entropy_source_state","insertText":"mbedtls_entropy_source_state","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"mbedtls_entropy_source_state"}},{"label":"•nsapi_stack_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nnsapi_stack structure  \nStack structure representing a specific instance of a stack."},"sortText":"40f94275nsapi_stack_t","filterText":"nsapi_stack_t","insertText":"nsapi_stack_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"nsapi_stack_t"}},{"label":"•osKernelGetState()","kind":3,"detail":"osKernelState_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nGet the current RTOS Kernel state.  \n\\\\return current RTOS Kernel state."},"sortText":"40fd02afosKernelGetState","filterText":"osKernelGetState","insertText":"osKernelGetState()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"osKernelGetState()"}},{"label":"•osThreadGetState(osThreadId_t thread_id)","kind":3,"detail":"osThreadState_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nGet current thread state of a thread.  \n\\\\param[in] thread_id thread ID obtained by \\\\ref osThreadNew or \\\\ref osThreadGetId.  \n\\\\return current thread state of the specified thread."},"sortText":"40fd02afosThreadGetState","filterText":"osThreadGetState","insertText":"osThreadGetState(${1:osThreadId_t thread_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"osThreadGetState(${1:osThreadId_t thread_id})"}},{"label":"•nsapi_ip_stack_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nSupported IP protocol versions of IP stack  \n@enum nsapi_ip_stack"},"sortText":"41107626nsapi_ip_stack_t","filterText":"nsapi_ip_stack_t","insertText":"nsapi_ip_stack_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"nsapi_ip_stack_t"}},{"label":"•nsapi_stack_api_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \nnsapi_stack_api structure  \nCommon api structure for network stack operations. A network stack can provide a nsapi_stack_api structure filled out with the appropriate implementation.  \nUnsupported operations can be left as null pointers."},"sortText":"41107626nsapi_stack_api_t","filterText":"nsapi_stack_api_t","insertText":"nsapi_stack_api_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"nsapi_stack_api_t"}},{"label":"•MBED_MODULE_NETWORK_STATS","kind":20,"detail":"_mbed_module_type","documentation":{"kind":"markdown","value":"From `\"mbed_error.h\"`"},"sortText":"4135a9fbMBED_MODULE_NETWORK_STATS","filterText":"MBED_MODULE_NETWORK_STATS","insertText":"MBED_MODULE_NETWORK_STATS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"MBED_MODULE_NETWORK_STATS"}},{"label":"•MBED_ERROR_BLE_ILLEGAL_STATE","kind":20,"detail":"_mbed_error_code","documentation":{"kind":"markdown","value":"From `\"mbed_error.h\"`"},"sortText":"42791bfcMBED_ERROR_BLE_ILLEGAL_STATE","filterText":"MBED_ERROR_BLE_ILLEGAL_STATE","insertText":"MBED_ERROR_BLE_ILLEGAL_STATE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"MBED_ERROR_BLE_ILLEGAL_STATE"}},{"label":"•std::__static_abs\u003cintmax_t _Pn\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`"},"sortText":"4288b34c__static_abs","filterText":"__static_abs","insertText":"std::__static_abs\u003c${1:intmax_t _Pn}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"std::__static_abs\u003c${1:intmax_t _Pn}\u003e"}},{"label":"•std::__static_gcd\u003cintmax_t _Pn, intmax_t _Qn\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`"},"sortText":"4288b34c__static_gcd","filterText":"__static_gcd","insertText":"std::__static_gcd\u003c${1:intmax_t _Pn}, ${2:intmax_t _Qn}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"std::__static_gcd\u003c${1:intmax_t _Pn}, ${2:intmax_t _Qn}\u003e"}},{"label":"•std::__static_sign\u003cintmax_t _Pn\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`  \n@defgroup ratio Rational Arithmetic  \n@ingroup utilities  \nCompile time representation of finite rational numbers.  \n@{"},"sortText":"4288b34c__static_sign","filterText":"__static_sign","insertText":"std::__static_sign\u003c${1:intmax_t _Pn}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"std::__static_sign\u003c${1:intmax_t _Pn}\u003e"}},{"label":"•std::__is_static_castable\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \n\\_\\_is_static_castable"},"sortText":"429f2ea3__is_static_castable","filterText":"__is_static_castable","insertText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"std::__is_static_castable\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::__is_static_castable_impl\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"429f2ea3__is_static_castable_impl","filterText":"__is_static_castable_impl","insertText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"std::__is_static_castable_impl\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::__is_static_castable_safe\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"429f2ea3__is_static_castable_safe","filterText":"__is_static_castable_safe","insertText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"std::__is_static_castable_safe\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•MBED_ERROR_CODE_BLE_ILLEGAL_STATE","kind":20,"detail":"_mbed_error_code","documentation":{"kind":"markdown","value":"From `\"mbed_error.h\"`"},"sortText":"42a82cc6MBED_ERROR_CODE_BLE_ILLEGAL_STATE","filterText":"MBED_ERROR_CODE_BLE_ILLEGAL_STATE","insertText":"MBED_ERROR_CODE_BLE_ILLEGAL_STATE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"MBED_ERROR_CODE_BLE_ILLEGAL_STATE"}},{"label":"•std::__do_is_static_castable_impl","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nThe hardest part of this trait is the binary direct-initialization case, because we hit into a functional cast of the form T(arg).  \nThis implementation uses different strategies depending on the target type to reduce the test overhead as much as possible:  \na) For a reference target type, we use a static_cast expression modulo its extra cases.  \nb) For a non-reference target type we use a ::new expression."},"sortText":"42b5a9f9__do_is_static_castable_impl","filterText":"__do_is_static_castable_impl","insertText":"std::__do_is_static_castable_impl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":22}},"newText":"std::__do_is_static_castable_impl"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":208},"contentChanges":[{"range":{"start":{"line":8,"character":22},"end":{"line":8,"character":22}},"rangeLength":0,"text":"s"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":86,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 842

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":23}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'stats'; did you mean 'stat'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\mbed\\platform\\include\\platform\\mbed_retarget.h:750:9:\nnote: 'stat' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":209},"contentChanges":[{"range":{"start":{"line":8,"character":23},"end":{"line":8,"character":23}},"rangeLength":0,"text":"u"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":87,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":87,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 843

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":24}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'statsu'; did you mean 'stat'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\mbed\\platform\\include\\platform\\mbed_retarget.h:750:9:\nnote: 'stat' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 750

{"jsonrpc":"2.0","id":88,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":24},"end":{"line":8,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":24}},"message":"Use of undeclared identifier 'statsu'; did you mean 'stat'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\mbed\\platform\\include\\platform\\mbed_retarget.h:750:9:\nnote: 'stat' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 189

{"id":88,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":209}}}Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":210},"contentChanges":[{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":24}},"rangeLength":6,"text":"statusBLUE"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":89,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":89,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":90,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":28},"end":{"line":8,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":90,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":210}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":211},"contentChanges":[{"range":{"start":{"line":8,"character":28},"end":{"line":8,"character":28}},"rangeLength":0,"text":";"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":91,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"id":91,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":11,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":92,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":29},"end":{"line":8,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":92,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 351

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":212},"contentChanges":[{"range":{"start":{"line":8,"character":29},"end":{"line":8,"character":29}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 221

{"jsonrpc":"2.0","id":93,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}






Started logging.

<<<
Content-Length: 3207

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10760,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\mirko\\AppData\\Local\\Temp\\.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh\\sketch_nov24a","rootUri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","name":"sketch_nov24a"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 426

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","languageId":"cpp","version":212,"text":"#define LEDBLUE 2\n#define BUTTON_1 12\n\nbool statusBLUE = false;\n\nvoid setup() {\n  \n  while(1) {\n    statusBLUE = !statusBLUE;\n    \n  }\n\n}\n\nvoid loop() {\n  \n\n}\n"}}}Content-Length: 220

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":212}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":213},"contentChanges":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},"rangeLength":0,"text":"d"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 220

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 280

{"jsonrpc":"2.0","id":3,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":5},"context":{"triggerKind":1}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":214},"contentChanges":[{"range":{"start":{"line":9,"character":5},"end":{"line":9,"character":5}},"rangeLength":0,"text":"i"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 220

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":215},"contentChanges":[{"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":6}},"rangeLength":0,"text":"g"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 220

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":216},"contentChanges":[{"range":{"start":{"line":9,"character":7},"end":{"line":9,"character":7}},"rangeLength":0,"text":"i"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 220

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":217},"contentChanges":[{"range":{"start":{"line":9,"character":8},"end":{"line":9,"character":8}},"rangeLength":0,"text":"t"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 220

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSy
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":17},"end":{"line":9,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 599

{"id":1,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":18},"end":{"line":9,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 599

{"id":2,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 36609

{"id":3,"result":{"isIncomplete":true,"items":[{"label":" decltype(expression)","kind":15,"sortText":"3f000000decltype","filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"decltype(${0:expression})"}},{"label":" delete expression","kind":15,"detail":"void","sortText":"3f000000delete","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"delete ${0:expression}"}},{"label":" delete [] expression","kind":15,"detail":"void","sortText":"3f000000delete","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"delete [] ${0:expression}"}},{"label":" do {statements}while (expression)","kind":15,"sortText":"3f000000do","filterText":"do","insertText":"do {\n${1:statements}\n}while (${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"do {\n${1:statements}\n}while (${0:expression})"}},{"label":" double","kind":14,"sortText":"3f000000double","filterText":"double","insertText":"double","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"double"}},{"label":"•digitalPinToPinName(pin_size_t P)","kind":3,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"403f858bdigitalPinToPinName","filterText":"digitalPinToPinName","insertText":"digitalPinToPinName(${1:pin_size_t P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"digitalPinToPinName(${1:pin_size_t P})"}},{"label":"•delay(unsigned long)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68delay","filterText":"delay","insertText":"delay(${1:unsigned long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"delay(${1:unsigned long})"}},{"label":"•delayMicroseconds(unsigned int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68delayMicroseconds","filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"delayMicroseconds(${1:unsigned int us})"}},{"label":"•detachInterrupt(pin_size_t interruptNumber)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68detachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt(${1:pin_size_t interruptNumber})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"detachInterrupt(${1:pin_size_t interruptNumber})"}},{"label":"•digitalRead(NinaPin pin)","kind":3,"detail":"PinStatus","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"405d8e68digitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:NinaPin pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"digitalRead(${1:NinaPin pin})"}},{"label":"•digitalRead(pin_size_t pinNumber)","kind":3,"detail":"PinStatus","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68digitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:pin_size_t pinNumber})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"digitalRead(${1:pin_size_t pinNumber})"}},{"label":"•digitalWrite(NinaPin pin, PinStatus value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"405d8e68digitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:NinaPin pin}, ${2:PinStatus value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"digitalWrite(${1:NinaPin pin}, ${2:PinStatus value})"}},{"label":"•digitalWrite(pin_size_t pinNumber, PinStatus status)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68digitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:pin_size_t pinNumber}, ${2:PinStatus status})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"digitalWrite(${1:pin_size_t pinNumber}, ${2:PinStatus status})"}},{"label":" div","kind":18,"sortText":"406c52eadiv","filterText":"div","insertText":"div","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"div"}},{"label":" div_t","kind":18,"sortText":"406c52eadiv_t","filterText":"div_t","insertText":"div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"div_t"}},{"label":"•DMA_IRQ_0n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4071b066DMA_IRQ_0n","filterText":"DMA_IRQ_0n","insertText":"DMA_IRQ_0n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DMA_IRQ_0n"}},{"label":"•DMA_IRQ_1n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4071b066DMA_IRQ_1n","filterText":"DMA_IRQ_1n","insertText":"DMA_IRQ_1n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DMA_IRQ_1n"}},{"label":" diprintf(int, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066diprintf","filterText":"diprintf","insertText":"diprintf(${1:int}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"diprintf(${1:int}, ${2:const char *, ...})"}},{"label":" dprintf(int, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066dprintf","filterText":"dprintf","insertText":"dprintf(${1:int}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"dprintf(${1:int}, ${2:const char *, ...})"}},{"label":"•DIR","kind":8,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcDIR","filterText":"DIR","insertText":"DIR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DIR"}},{"label":"•DT_BLK","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a block device."},"sortText":"40791bfcDT_BLK","filterText":"DT_BLK","insertText":"DT_BLK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DT_BLK"}},{"label":"•DT_CHR","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a character device."},"sortText":"40791bfcDT_CHR","filterText":"DT_CHR","insertText":"DT_CHR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DT_CHR"}},{"label":"•DT_DIR","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a directory."},"sortText":"40791bfcDT_DIR","filterText":"DT_DIR","insertText":"DT_DIR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DT_DIR"}},{"label":"•DT_FIFO","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a named pipe (FIFO)."},"sortText":"40791bfcDT_FIFO","filterText":"DT_FIFO","insertText":"DT_FIFO","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DT_FIFO"}},{"label":"•DT_LNK","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a symbolic link."},"sortText":"40791bfcDT_LNK","filterText":"DT_LNK","insertText":"DT_LNK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DT_LNK"}},{"label":"•DT_REG","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a regular file."},"sortText":"40791bfcDT_REG","filterText":"DT_REG","insertText":"DT_REG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DT_REG"}},{"label":"•DT_SOCK","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a UNIX domain socket."},"sortText":"40791bfcDT_SOCK","filterText":"DT_SOCK","insertText":"DT_SOCK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DT_SOCK"}},{"label":"•DT_UNKNOWN","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThe file type could not be determined."},"sortText":"40791bfcDT_UNKNOWN","filterText":"DT_UNKNOWN","insertText":"DT_UNKNOWN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DT_UNKNOWN"}},{"label":" difftime(time_t _time2, time_t _time1)","kind":3,"detail":"double","sortText":"40791bfcdifftime","filterText":"difftime","insertText":"difftime(${1:time_t _time2}, ${2:time_t _time1})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"difftime(${1:time_t _time2}, ${2:time_t _time1})"}},{"label":"•dirent","kind":22,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThe following are dirent.h definitions are declared here to guarantee consistency where structure may be different with different toolchains"},"sortText":"40791bfcdirent","filterText":"dirent","insertText":"dirent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"dirent"}},{"label":" div(int __numer, int __denom)","kind":3,"detail":"div_t","sortText":"40791bfcdiv","filterText":"div","insertText":"div(${1:int __numer}, ${2:int __denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"div(${1:int __numer}, ${2:int __denom})"}},{"label":" div_t","kind":8,"sortText":"40791bfcdiv_t","filterText":"div_t","insertText":"div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"div_t"}},{"label":" double_t","kind":8,"sortText":"40791bfcdouble_t","filterText":"double_t","insertText":"double_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"double_t"}},{"label":" drand48()","kind":3,"detail":"double","sortText":"40791bfcdrand48","filterText":"drand48","insertText":"drand48()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"drand48()"}},{"label":" drem(double, double)","kind":3,"detail":"double","sortText":"40791bfcdrem","filterText":"drem","insertText":"drem(${1:double}, ${2:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"drem(${1:double}, ${2:double})"}},{"label":" dremf(float, float)","kind":3,"detail":"float","sortText":"40791bfcdremf","filterText":"dremf","insertText":"dremf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"dremf(${1:float}, ${2:float})"}},{"label":" duplocale(locale_t)","kind":3,"detail":"locale_t","sortText":"40791bfcduplocale","filterText":"duplocale","insertText":"duplocale(${1:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"duplocale(${1:locale_t})"}},{"label":"•daddr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"407f2f3bdaddr_t","filterText":"daddr_t","insertText":"daddr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"daddr_t"}},{"label":"•dev_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"407f2f3bdev_t","filterText":"dev_t","insertText":"dev_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"dev_t"}},{"label":"•std::div(long __i, long __j)","kind":3,"detail":"ldiv_t","documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"4092d0aadiv","filterText":"div","insertText":"std::div(${1:long __i}, ${2:long __j})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::div(${1:long __i}, ${2:long __j})"}},{"label":"•delayed_by_ms(const absolute_time_t t, uint32_t ms)","kind":3,"detail":"absolute_time_t","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Return a timestamp value obtained by adding a number of milliseconds to another timestamp  \n\\\\ingroup timestamp  \n\\\\param t the base timestamp  \n\\\\param ms the number of milliseconds to add  \n\\\\return the timestamp representing the resulting time"},"sortText":"409c96d9delayed_by_ms","filterText":"delayed_by_ms","insertText":"delayed_by_ms(${1:const absolute_time_t t}, ${2:uint32_t ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"delayed_by_ms(${1:const absolute_time_t t}, ${2:uint32_t ms})"}},{"label":"•delayed_by_us(const absolute_time_t t, uint64_t us)","kind":3,"detail":"absolute_time_t","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Return a timestamp value obtained by adding a number of microseconds to another timestamp  \n\\\\ingroup timestamp  \n\\\\param t the base timestamp  \n\\\\param us the number of microseconds to add  \n\\\\return the timestamp representing the resulting time"},"sortText":"409c96d9delayed_by_us","filterText":"delayed_by_us","insertText":"delayed_by_us(${1:const absolute_time_t t}, ${2:uint64_t us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"delayed_by_us(${1:const absolute_time_t t}, ${2:uint64_t us})"}},{"label":"•mbed::DirHandle","kind":7,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"409f2ea4DirHandle","filterText":"DirHandle","insertText":"mbed::DirHandle","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mbed::DirHandle"}},{"label":"•std::decay\u003ctypename _Tp\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \ndecay"},"sortText":"409f2ea4decay","filterText":"decay","insertText":"std::decay\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::decay\u003c${1:typename _Tp}\u003e"}},{"label":"•std::decay_t\u003ctypename _Tp\u003e","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nAlias template for decay"},"sortText":"409f2ea4decay_t","filterText":"decay_t","insertText":"std::decay_t\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::decay_t\u003c${1:typename _Tp}\u003e"}},{"label":"•std::declare_no_pointers(char *, size_t)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`"},"sortText":"409f2ea4declare_no_pointers","filterText":"declare_no_pointers","insertText":"std::declare_no_pointers(${1:char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::declare_no_pointers(${1:char *}, ${2:size_t})"}},{"label":"•std::declare_reachable(void *)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`"},"sortText":"409f2ea4declare_reachable","filterText":"declare_reachable","insertText":"std::declare_reachable(${1:void *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::declare_reachable(${1:void *})"}},{"label":"•std::declval\u003ctypename _Tp\u003e()","kind":3,"detail":"typename add_rvalue_reference\u003c_Tp\u003e::type","documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \n@brief Utility to simplify expressions used in unevaluated operands  \n@ingroup utilities"},"sortText":"409f2ea4declval","filterText":"declval","insertText":"std::declval\u003c${1:typename _Tp}\u003e()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::declval\u003c${1:typename _Tp}\u003e()"}},{"label":"•datetime_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"pico/types.h\"`  \n\\\\struct datetime_t  \n\\\\ingroup util_datetime  \n\\\\brief Structure containing date and time information  \nWhen setting an RTC alarm, set a field to -1 tells the RTC to not match on this field"},"sortText":"40a4b801datetime_t","filterText":"datetime_t","insertText":"datetime_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"datetime_t"}},{"label":"•std::div","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bdiv","filterText":"div","insertText":"std::div","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::div"}},{"label":"•std::div_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bdiv_t","filterText":"div_t","insertText":"std::div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::div_t"}},{"label":"•std::double_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`  \ntypes"},"sortText":"40a8609bdouble_t","filterText":"double_t","insertText":"std::double_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::double_t"}},{"label":"•mstd::data(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40a94eb8data","filterText":"data","insertText":"mstd::data($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mstd::data($0)"}},{"label":"•std::dec(ios_base \u0026__base)","kind":3,"detail":"ios_base \u0026","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \n[27.4.5.3] basefield manipulators Calls base.setf(ios_base::dec, ios_base::basefield)."},"sortText":"40a94eb8dec","filterText":"dec","insertText":"std::dec(${1:ios_base \u0026__base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::dec(${1:ios_base \u0026__base})"}},{"label":"•std::default_delete\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \nPrimary template of default_delete, used by unique_ptr"},"sortText":"40a94eb8default_delete","filterText":"default_delete","insertText":"std::default_delete\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::default_delete\u003c${1:typename _Tp}\u003e"}},{"label":"•std::defaultfloat(ios_base \u0026__base)","kind":3,"detail":"ios_base \u0026","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nCalls @c base.unsetf(ios_base::floatfield)"},"sortText":"40a94eb8defaultfloat","filterText":"defaultfloat","insertText":"std::defaultfloat(${1:ios_base \u0026__base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::defaultfloat(${1:ios_base \u0026__base})"}},{"label":"•mstd::destroy(ForwardIterator first, ForwardIterator last)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mstd_memory\"`"},"sortText":"40a94eb8destroy","filterText":"destroy","insertText":"mstd::destroy(${1:ForwardIterator first}, ${2:ForwardIterator last})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mstd::destroy(${1:ForwardIterator first}, ${2:ForwardIterator last})"}},{"label":"•mstd::destroy_at(T *location)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mstd_memory\"`  \n[specialized.destroy] (C++17)"},"sortText":"40a94eb8destroy_at","filterText":"destroy_at","insertText":"mstd::destroy_at(${1:T *location})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mstd::destroy_at(${1:T *location})"}},{"label":"•mstd::destroy_n(ForwardIterator first, Size n)","kind":3,"detail":"ForwardIterator","documentation":{"kind":"markdown","value":"From `\"mstd_memory\"`"},"sortText":"40a94eb8destroy_n","filterText":"destroy_n","insertText":"mstd::destroy_n(${1:ForwardIterator first}, ${2:Size n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mstd::destroy_n(${1:ForwardIterator first}, ${2:Size n})"}},{"label":"•mstd::experimental::impl::detector\u003cclass Default, class Void, template\u003c...\u003e class Op, class Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8detector","filterText":"detector","insertText":"mstd::experimental::impl::detector\u003c${1:class Default}, ${2:class Void}, ${3:template\u003c...\u003e class Op}, ${4:class Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mstd::experimental::impl::detector\u003c${1:class Default}, ${2:class Void}, ${3:template\u003c...\u003e class Op}, ${4:class Args}\u003e"}},{"label":"•mstd::disjunction\u003cclass\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8disjunction","filterText":"disjunction","insertText":"mstd::disjunction\u003c${1:class}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mstd::disjunction\u003c${1:class}\u003e"}},{"label":"•std::distance(_InputIterator __first, _InputIterator __last)","kind":3,"detail":"typename iterator_traits\u003c_InputIterator\u003e::difference_type","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief A generalization of pointer arithmetic.  \n@param \\_\\_first An input iterator.  \n@param \\_\\_last An input iterator.  \n@return The distance between them.  \nReturns @c n such that \\_\\_first + n == \\_\\_last. This requires that @p \\_\\_last must be reachable from @p \\_\\_first. Note that @c n may be negative.  \nFor random access iterators, this uses their @c + and @c - operations and are constant time. For other %iterator classes they are linear time."},"sortText":"40a94eb8distance","filterText":"distance","insertText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})"}},{"label":"•std::divides\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \nOne of the @link arithmetic_functors math functors@endlink."},"sortText":"40a94eb8divides","filterText":"divides","insertText":"std::divides\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::divides\u003c\u003e"}},{"label":"•std::dynamic_pointer_cast(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \nThe seemingly equivalent code:  \nshared_ptr\u003c\\_Tp, \\_Lp\u003e(dynamic_cast\u003c\\_Tp\\*\u003e(\\_\\_r.get())) will eventually result in undefined behaviour, attempting to delete the same object twice.  \ndynamic_pointer_cast"},"sortText":"40a94eb8dynamic_pointer_cast","filterText":"dynamic_pointer_cast","insertText":"std::dynamic_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"std::dynamic_pointer_cast($0)"}},{"label":"•mstd::decay","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333decay","filterText":"decay","insertText":"mstd::decay","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mstd::decay"}},{"label":"•mstd::decay_t","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333decay_t","filterText":"decay_t","insertText":"mstd::decay_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mstd::decay_t"}},{"label":"•mstd::default_delete","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_memory\"`"},"sortText":"40bcd333default_delete","filterText":"default_delete","insertText":"mstd::default_delete","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mstd::default_delete"}},{"label":"•mstd::distance","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40bcd333distance","filterText":"distance","insertText":"mstd::distance","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mstd::distance"}},{"label":"•mstd::divides","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_functional\"`"},"sortText":"40bcd333divides","filterText":"divides","insertText":"mstd::divides","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mstd::divides"}},{"label":"•digitalPinToPort(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40d1050adigitalPinToPort","filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"digitalPinToPort(${1:P})"}},{"label":" mbed::detail","kind":9,"sortText":"40d3807cdetail","filterText":"detail","insertText":"mbed::detail","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"mbed::detail"}},{"label":"•DEC","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Print.h\"`"},"sortText":"40ec52eaDEC","filterText":"DEC","insertText":"DEC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEC"}},{"label":"•DEG_TO_RAD","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40ec52eaDEG_TO_RAD","filterText":"DEG_TO_RAD","insertText":"DEG_TO_RAD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEG_TO_RAD"}},{"label":"•DISPLAY","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40ec52eaDISPLAY","filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DISPLAY"}},{"label":"•degrees(rad)","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40ec52eadegrees","filterText":"degrees","insertText":"degrees(${1:rad})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"degrees(${1:rad})"}},{"label":"•digitalPinToInterrupt(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"macros.h\"`"},"sortText":"40f66322digitalPinToInterrupt","filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"digitalPinToInterrupt(${1:P})"}},{"label":" DOMAIN","kind":1,"sortText":"410abe85DOMAIN","filterText":"DOMAIN","insertText":"DOMAIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DOMAIN"}},{"label":"•DEFFILEMODE","kind":1,"documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"4115ca3dDEFFILEMODE","filterText":"DEFFILEMODE","insertText":"DEFFILEMODE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEFFILEMODE"}},{"label":"•DEBUG_PINS_CLR(p, v)","kind":1,"documentation":{"kind":"markdown","value":"From `\"gpio.h\"`"},"sortText":"41314351DEBUG_PINS_CLR","filterText":"DEBUG_PINS_CLR","insertText":"DEBUG_PINS_CLR(${1:p}, ${2:v})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEBUG_PINS_CLR(${1:p}, ${2:v})"}},{"label":"•DEBUG_PINS_ENABLED(p)","kind":1,"documentation":{"kind":"markdown","value":"From `\"gpio.h\"`"},"sortText":"41314351DEBUG_PINS_ENABLED","filterText":"DEBUG_PINS_ENABLED","insertText":"DEBUG_PINS_ENABLED(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEBUG_PINS_ENABLED(${1:p})"}},{"label":"•DEBUG_PINS_SET(p, v)","kind":1,"documentation":{"kind":"markdown","value":"From `\"gpio.h\"`"},"sortText":"41314351DEBUG_PINS_SET","filterText":"DEBUG_PINS_SET","insertText":"DEBUG_PINS_SET(${1:p}, ${2:v})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEBUG_PINS_SET(${1:p}, ${2:v})"}},{"label":"•DEBUG_PINS_XOR(p, v)","kind":1,"documentation":{"kind":"markdown","value":"From `\"gpio.h\"`"},"sortText":"41314351DEBUG_PINS_XOR","filterText":"DEBUG_PINS_XOR","insertText":"DEBUG_PINS_XOR(${1:p}, ${2:v})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEBUG_PINS_XOR(${1:p}, ${2:v})"}},{"label":"•DMA_BASE","kind":1,"documentation":{"kind":"markdown","value":"From `\"regs/addressmap.h\"`"},"sortText":"41314351DMA_BASE","filterText":"DMA_BASE","insertText":"DMA_BASE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DMA_BASE"}},{"label":"•DMA_IRQ_0","kind":1,"documentation":{"kind":"markdown","value":"From `\"regs/intctrl.h\"`"},"sortText":"4138a747DMA_IRQ_0","filterText":"DMA_IRQ_0","insertText":"DMA_IRQ_0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DMA_IRQ_0"}},{"label":"•DMA_IRQ_1","kind":1,"documentation":{"kind":"markdown","value":"From `\"regs/intctrl.h\"`"},"sortText":"4138a747DMA_IRQ_1","filterText":"DMA_IRQ_1","insertText":"DMA_IRQ_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DMA_IRQ_1"}},{"label":" DEVICE_ANALOGIN","kind":1,"sortText":"4147ae14DEVICE_ANALOGIN","filterText":"DEVICE_ANALOGIN","insertText":"DEVICE_ANALOGIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_ANALOGIN"}},{"label":" DEVICE_FLASH","kind":1,"sortText":"4147ae14DEVICE_FLASH","filterText":"DEVICE_FLASH","insertText":"DEVICE_FLASH","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_FLASH"}},{"label":" DEVICE_I2C","kind":1,"sortText":"4147ae14DEVICE_I2C","filterText":"DEVICE_I2C","insertText":"DEVICE_I2C","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_I2C"}},{"label":" DEVICE_I2CSLAVE","kind":1,"sortText":"4147ae14DEVICE_I2CSLAVE","filterText":"DEVICE_I2CSLAVE","insertText":"DEVICE_I2CSLAVE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_I2CSLAVE"}},{"label":" DEVICE_INTERRUPTIN","kind":1,"sortText":"4147ae14DEVICE_INTERRUPTIN","filterText":"DEVICE_INTERRUPTIN","insertText":"DEVICE_INTERRUPTIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_INTERRUPTIN"}},{"label":" DEVICE_PORT_IN","kind":1,"sortText":"4147ae14DEVICE_PORT_IN","filterText":"DEVICE_PORT_IN","insertText":"DEVICE_PORT_IN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_PORT_IN"}},{"label":" DEVICE_PORT_OUT","kind":1,"sortText":"4147ae14DEVICE_PORT_OUT","filterText":"DEVICE_PORT_OUT","insertText":"DEVICE_PORT_OUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_PORT_OUT"}},{"label":" DEVICE_PWMOUT","kind":1,"sortText":"4147ae14DEVICE_PWMOUT","filterText":"DEVICE_PWMOUT","insertText":"DEVICE_PWMOUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_PWMOUT"}},{"label":" DEVICE_RESET_REASON","kind":1,"sortText":"4147ae14DEVICE_RESET_REASON","filterText":"DEVICE_RESET_REASON","insertText":"DEVICE_RESET_REASON","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_RESET_REASON"}},{"label":" DEVICE_SERIAL","kind":1,"sortText":"4147ae14DEVICE_SERIAL","filterText":"DEVICE_SERIAL","insertText":"DEVICE_SERIAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_SERIAL"}},{"label":" DEVICE_SERIAL_FC","kind":1,"sortText":"4147ae14DEVICE_SERIAL_FC","filterText":"DEVICE_SERIAL_FC","insertText":"DEVICE_SERIAL_FC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_SERIAL_FC"}},{"label":" DEVICE_SPI","kind":1,"sortText":"4147ae14DEVICE_SPI","filterText":"DEVICE_SPI","insertText":"DEVICE_SPI","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_SPI"}},{"label":" DEVICE_USBDEVICE","kind":1,"sortText":"4147ae14DEVICE_USBDEVICE","filterText":"DEVICE_USBDEVICE","insertText":"DEVICE_USBDEVICE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_USBDEVICE"}},{"label":" DEVICE_USTICKER","kind":1,"sortText":"4147ae14DEVICE_USTICKER","filterText":"DEVICE_USTICKER","insertText":"DEVICE_USTICKER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":5}},"newText":"DEVICE_USTICKER"}}]},"jsonrpc":"2.0"}Content-Length: 599

{"id":4,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":20},"end":{"line":9,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 599

{"id":5,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":21},"end":{"line":9,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 599

{"id":6,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}
<<<
mbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":218},"contentChanges":[{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":9}},"rangeLength":0,"text":"a"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 220

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":219},"contentChanges":[{"range":{"start":{"line":9,"character":10},"end":{"line":9,"character":10}},"rangeLength":0,"text":"l"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}Content-Length: 220

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":9,"character":11},"end":{"line":9,"character":11}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":219}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":220},"contentChanges":[{"range":{"start":{"line":9,"character":11},"end":{"line":9,"character":11}},"rangeLength":0,"text":"W"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 221

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":221},"contentChanges":[{"range":{"start":{"line":9,"character":12},"end":{"line":9,"character":12}},"rangeLength":0,"text":"r"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}Content-Length: 221

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":222},"contentChanges":[{"range":{"start":{"line":9,"character":13},"end":{"line":9,"character":13}},"rangeLength":0,"text":"i"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 221

>>>
Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":22},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 599

{"id":7,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":23},"end":{"line":9,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 599

{"id":8,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":24},"end":{"line":9,"character":27}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 599

{"id":9,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":25},"end":{"line":9,"character":28}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":11,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":12,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}
<<<

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":223},"contentChanges":[{"range":{"start":{"line":9,"character":14},"end":{"line":9,"character":14}},"rangeLength":0,"text":"t"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":13}}Content-Length: 221

{"jsonrpc":"2.0","id":14,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":224},"contentChanges":[{"range":{"start":{"line":9,"character":15},"end":{"line":9,"character":15}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}Content-Length: 221

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":9,"character":16},"end":{"line":9,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":225},"contentChanges":[{"range":{"start":{"line":9,"character":16},"end":{"line":9,"character":16}},"rangeLength":0,"text":"()"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}Content-Length: 221

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 328

{"jsonrpc":"2.0","id":18,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":17},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}Content-Length: 322

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":9,"character":17},"end":{"line":9,"character":17}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":225}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":226},"contentChanges":[{"range":{"start":{"line":9,"character":17},"end":{"line":9,"character":17}},"rangeLength":0,"text":"L"}]}}Content-Length: 63

{"jsonrpc":"2.0","
>>>
Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":27},"end":{"line":9,"character":30}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":13,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":28},"end":{"line":9,"character":31}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 825

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":15}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalWrit'; did you mean 'digitalWrite'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: 'digitalWrite' declared here"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":14,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1307

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":16}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:60:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:95:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:10:13:\nnote: possible target for call"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":15,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}Content-Length: 1480

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":16}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'digitalWrite'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:60:26:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:95:6:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:10:13:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":17,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 182

{"id":18,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 37

{"id":19,"result":[],"jsonrpc":"2.0"}
<<<
method":"$/cancelRequest","params":{"id":17}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}Content-Length: 221

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":227},"contentChanges":[{"range":{"start":{"line":9,"character":18},"end":{"line":9,"character":18}},"rangeLength":0,"text":"E"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}Content-Length: 221

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}Content-Length: 304

{"jsonrpc":"2.0","id":22,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":19},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":228},"contentChanges":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":19}},"rangeLength":0,"text":"D"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}Content-Length: 221

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 304

{"jsonrpc":"2.0","id":24,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":20},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 322

{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":9,"character":20},"end":{"line":9,"character":20}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":228}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":229},"contentChanges":[{"range":{"start":{"line":9,"character":20},"end":{"line":9,"character":20}},"rangeLength":0,"text":"B"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":23}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 221

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}Content-Length: 304

{"jsonrpc":"2.0","id":2
>>>
Content-Length: 597

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":17},"end":{"line":9,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'L'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":20,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":21,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 598

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":17},"end":{"line":9,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LE'"}]},"jsonrpc":"2.0"}Content-Length: 182

{"id":22,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":17},"end":{"line":9,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":23,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 182

{"id":24,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 37

{"id":25,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":26,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}
<<<
7,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":21},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":230},"contentChanges":[{"range":{"start":{"line":9,"character":21},"end":{"line":9,"character":21}},"rangeLength":0,"text":"L"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":26}}Content-Length: 221

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}Content-Length: 304

{"jsonrpc":"2.0","id":29,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":22},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 322

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":9,"character":22},"end":{"line":9,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":231},"contentChanges":[{"range":{"start":{"line":9,"character":22},"end":{"line":9,"character":22}},"rangeLength":0,"text":"U"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":28}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":30}}Content-Length: 221

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":232},"contentChanges":[{"range":{"start":{"line":9,"character":23},"end":{"line":9,"character":23}},"rangeLength":0,"text":"E"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 221

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":29}}Content-Length: 304

{"jsonrpc":"2.0","id":33,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":24},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 322

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":9,"character":24},"end":{"line":9,"character":24}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/User
>>>
Content-Length: 1476

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":16}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'digitalWrite'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:60:26:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:95:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:10:13:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 182

{"id":27,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 601

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":17},"end":{"line":9,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LEDBL'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":28,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 182

{"id":29,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}Content-Length: 602

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":17},"end":{"line":9,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LEDBLU'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":31,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":32,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1476

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":16}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'digitalWrite'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:60:26:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:95:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:10:13:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 182

{"id":33,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 399

{"id":34,"result":[{"title":"Expand macro 'LEDBLUE'","kind":"refactor","command":{"title":"Expand macro 'LEDBLUE'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server500105611/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":16,"character":24},"end":{"line":16,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
s/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":232}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":233},"contentChanges":[{"range":{"start":{"line":9,"character":24},"end":{"line":9,"character":24}},"rangeLength":0,"text":","}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":32}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 221

{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":234},"contentChanges":[{"range":{"start":{"line":9,"character":25},"end":{"line":9,"character":25}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":35}}Content-Length: 221

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":33}}Content-Length: 327

{"jsonrpc":"2.0","id":37,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":26},"context":{"isRetrigger":true,"triggerCharacter":",","triggerKind":2}}}Content-Length: 322

{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":26}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":234}}}Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":235},"contentChanges":[{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":26}},"rangeLength":0,"text":"s"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":38}}Content-Length: 221

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":37}}Content-Length: 304

{"jsonrpc":"2.0","id":40,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":27},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch
>>>
Content-Length: 385

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":25},"end":{"line":9,"character":26}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":35,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":36,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 385

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":27}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 182

{"id":37,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 37

{"id":38,"result":[],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/28","percentage":82.14285714285714,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}Content-Length: 597

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":27}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":39,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 182

{"id":40,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
_nov24a.ino","version":236},"contentChanges":[{"range":{"start":{"line":9,"character":27},"end":{"line":9,"character":27}},"rangeLength":0,"text":"t"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":39}}Content-Length: 282

{"jsonrpc":"2.0","id":41,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":28},"context":{"triggerKind":3}}}Content-Length: 221

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 304

{"jsonrpc":"2.0","id":43,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":28},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":237},"contentChanges":[{"range":{"start":{"line":9,"character":28},"end":{"line":9,"character":28}},"rangeLength":0,"text":"a"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}Content-Length: 221

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":43}}Content-Length: 304

{"jsonrpc":"2.0","id":45,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":29},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":238},"contentChanges":[{"range":{"start":{"line":9,"character":29},"end":{"line":9,"character":29}},"rangeLength":0,"text":"t"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":44}}Content-Length: 221

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":45}}Content-Length: 304

{"jsonrpc":"2.0","id":47,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":30},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":239},"contentChanges":[{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":30}},"rangeLength":4,"text":"statusBLUE"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":46}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":41}}Content-Length: 221

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c
>>>
Content-Length: 598

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'st'"}]},"jsonrpc":"2.0"}Content-Length: 34684

{"id":41,"result":{"isIncomplete":true,"items":[{"label":" statusBLUE","kind":6,"detail":"bool","sortText":"3ea7f738statusBLUE","filterText":"statusBLUE","insertText":"statusBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"statusBLUE"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"struct"}},{"label":" std","kind":9,"sortText":"3f9eb851std","filterText":"std","insertText":"std","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std"}},{"label":" PinStatus","kind":8,"sortText":"3fd1c28ePinStatus","filterText":"PinStatus","insertText":"PinStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"PinStatus"}},{"label":"•Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`"},"sortText":"3ff8a156Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"Stream"}},{"label":" String","kind":7,"documentation":{"kind":"markdown","value":"The string class"},"sortText":"3ff8a156String","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"String"}},{"label":" StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"An inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"3ff8a156StringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"StringSumHelper"}},{"label":" stpcpy(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68stpcpy","filterText":"stpcpy","insertText":"stpcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"stpcpy(${1:char *}, ${2:const char *})"}},{"label":" stpncpy(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68stpncpy","filterText":"stpncpy","insertText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"stpncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strcat(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strcat","filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strcat(${1:char *}, ${2:const char *})"}},{"label":" strchr(const char *, int)","kind":3,"detail":"char *","sortText":"405d8e68strchr","filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strchr(${1:const char *}, ${2:int})"}},{"label":" strcmp(const char *, const char *)","kind":3,"detail":"int","sortText":"405d8e68strcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":" strcoll(const char *, const char *)","kind":3,"detail":"int","sortText":"405d8e68strcoll","filterText":"strcoll","insertText":"strcoll(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strcoll(${1:const char *}, ${2:const char *})"}},{"label":" strcpy(char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strcpy","filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strcpy(${1:char *}, ${2:const char *})"}},{"label":" strcspn(const char *, const char *)","kind":3,"detail":"size_t","sortText":"405d8e68strcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strcspn(${1:const char *}, ${2:const char *})"}},{"label":" strdup(const char *)","kind":3,"detail":"char *","sortText":"405d8e68strdup","filterText":"strdup","insertText":"strdup(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strdup(${1:const char *})"}},{"label":" strerror(int)","kind":3,"detail":"char *","sortText":"405d8e68strerror","filterText":"strerror","insertText":"strerror(${1:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strerror(${1:int})"}},{"label":" strerror_l(int, locale_t)","kind":3,"detail":"char *","sortText":"405d8e68strerror_l","filterText":"strerror_l","insertText":"strerror_l(${1:int}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strerror_l(${1:int}, ${2:locale_t})"}},{"label":" strerror_r(int, char *, size_t)","kind":3,"detail":"int","sortText":"405d8e68strerror_r","filterText":"strerror_r","insertText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strerror_r(${1:int}, ${2:char *}, ${3:size_t})"}},{"label":" strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strlcat","filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strlcpy","filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","sortText":"405d8e68strlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strlen(${1:const char *})"}},{"label":" strncat(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strncat","filterText":"strncat","insertText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncmp(const char *, const char *, size_t)","kind":3,"detail":"int","sortText":"405d8e68strncmp","filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy(char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strncpy","filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strndup(const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strndup","filterText":"strndup","insertText":"strndup(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strndup(${1:const char *}, ${2:size_t})"}},{"label":" strnlen(const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strnlen","filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strnlen(${1:const char *}, ${2:size_t})"}},{"label":" strnstr(const char *, const char *, size_t)","kind":3,"detail":"char *","sortText":"405d8e68strnstr","filterText":"strnstr","insertText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strnstr(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strpbrk(const char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strpbrk","filterText":"strpbrk","insertText":"strpbrk(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strpbrk(${1:const char *}, ${2:const char *})"}},{"label":" strrchr(const char *, int)","kind":3,"detail":"char *","sortText":"405d8e68strrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":" strsep(char **, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strsep","filterText":"strsep","insertText":"strsep(${1:char **}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strsep(${1:char **}, ${2:const char *})"}},{"label":" strsignal(int __signo)","kind":3,"detail":"char *","sortText":"405d8e68strsignal","filterText":"strsignal","insertText":"strsignal(${1:int __signo})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strsignal(${1:int __signo})"}},{"label":" strspn(const char *, const char *)","kind":3,"detail":"size_t","sortText":"405d8e68strspn","filterText":"strspn","insertText":"strspn(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strspn(${1:const char *}, ${2:const char *})"}},{"label":" strstr(const char *, const char *)","kind":3,"detail":"char *","sortText":"405d8e68strstr","filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strstr(${1:const char *}, ${2:const char *})"}},{"label":" strtok_r(char *, const char *, char **)","kind":3,"detail":"char *","sortText":"405d8e68strtok_r","filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})"}},{"label":" strxfrm(char *, const char *, size_t)","kind":3,"detail":"size_t","sortText":"405d8e68strxfrm","filterText":"strxfrm","insertText":"strxfrm(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strxfrm(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strxfrm_l(char *, const char *, size_t, locale_t)","kind":3,"detail":"size_t","sortText":"405d8e68strxfrm_l","filterText":"strxfrm_l","insertText":"strxfrm_l(${1:char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strxfrm_l(${1:char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})"}},{"label":"•Stream","kind":18,"documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`"},"sortText":"406c52eaStream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"Stream"}},{"label":" String","kind":18,"sortText":"406c52eaString","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"String"}},{"label":" strtod","kind":18,"sortText":"406c52eastrtod","filterText":"strtod","insertText":"strtod","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtod"}},{"label":" strtol","kind":18,"sortText":"406c52eastrtol","filterText":"strtol","insertText":"strtol","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtol"}},{"label":" strtoul","kind":18,"sortText":"406c52eastrtoul","filterText":"strtoul","insertText":"strtoul","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtoul"}},{"label":" strcasecmp(const char *, const char *)","kind":3,"detail":"int","sortText":"4071b066strcasecmp","filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strcasecmp(${1:const char *}, ${2:const char *})"}},{"label":" strcasecmp_l(const char *, const char *, locale_t)","kind":3,"detail":"int","sortText":"4071b066strcasecmp_l","filterText":"strcasecmp_l","insertText":"strcasecmp_l(${1:const char *}, ${2:const char *}, ${3:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strcasecmp_l(${1:const char *}, ${2:const char *}, ${3:locale_t})"}},{"label":" strncasecmp(const char *, const char *, size_t)","kind":3,"detail":"int","sortText":"4071b066strncasecmp","filterText":"strncasecmp","insertText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncasecmp_l(const char *, const char *, size_t, locale_t)","kind":3,"detail":"int","sortText":"4071b066strncasecmp_l","filterText":"strncasecmp_l","insertText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strncasecmp_l(${1:const char *}, ${2:const char *}, ${3:size_t}, ${4:locale_t})"}},{"label":" strtoimax(const char *, char **, int)","kind":3,"detail":"intmax_t","sortText":"4071b066strtoimax","filterText":"strtoimax","insertText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtoimax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":" strtoimax_l(const char *, char **_restrict, int, locale_t)","kind":3,"detail":"intmax_t","sortText":"4071b066strtoimax_l","filterText":"strtoimax_l","insertText":"strtoimax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtoimax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})"}},{"label":" strtoumax(const char *, char **, int)","kind":3,"detail":"uintmax_t","sortText":"4071b066strtoumax","filterText":"strtoumax","insertText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtoumax(${1:const char *}, ${2:char **}, ${3:int})"}},{"label":" strtoumax_l(const char *, char **_restrict, int, locale_t)","kind":3,"detail":"uintmax_t","sortText":"4071b066strtoumax_l","filterText":"strtoumax_l","insertText":"strtoumax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtoumax_l(${1:const char *}, ${2:char **_restrict}, ${3:int}, ${4:locale_t})"}},{"label":"•statvfs(const char *path, struct statvfs *buf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"statvfs(${1:const char *path}, ${2:struct statvfs *buf})"}},{"label":"•statvfs","kind":22,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcstatvfs","filterText":"statvfs","insertText":"statvfs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"statvfs"}},{"label":" strftime(char *_s, size_t _maxsize, const char *_fmt, const struct tm *_t)","kind":3,"detail":"size_t","sortText":"40791bfcstrftime","filterText":"strftime","insertText":"strftime(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strftime(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t})"}},{"label":" strftime_l(char *_s, size_t _maxsize, const char *_fmt, const struct tm *_t, locale_t _l)","kind":3,"detail":"size_t","sortText":"40791bfcstrftime_l","filterText":"strftime_l","insertText":"strftime_l(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t}, ${5:locale_t _l})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strftime_l(${1:char *_s}, ${2:size_t _maxsize}, ${3:const char *_fmt}, ${4:const struct tm *_t}, ${5:locale_t _l})"}},{"label":" strtod(const char *__n, char **__end_PTR)","kind":3,"detail":"double","sortText":"40791bfcstrtod","filterText":"strtod","insertText":"strtod(${1:const char *__n}, ${2:char **__end_PTR})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtod(${1:const char *__n}, ${2:char **__end_PTR})"}},{"label":" strtof(const char *__n, char **__end_PTR)","kind":3,"detail":"float","sortText":"40791bfcstrtof","filterText":"strtof","insertText":"strtof(${1:const char *__n}, ${2:char **__end_PTR})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtof(${1:const char *__n}, ${2:char **__end_PTR})"}},{"label":" strtol(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"long","sortText":"40791bfcstrtol","filterText":"strtol","insertText":"strtol(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtol(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtold(const char *, char **)","kind":3,"detail":"long double","sortText":"40791bfcstrtold","filterText":"strtold","insertText":"strtold(${1:const char *}, ${2:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtold(${1:const char *}, ${2:char **})"}},{"label":" strtoll(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"long long","sortText":"40791bfcstrtoll","filterText":"strtoll","insertText":"strtoll(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtoll(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtoul(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"unsigned long","sortText":"40791bfcstrtoul","filterText":"strtoul","insertText":"strtoul(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtoul(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":" strtoull(const char *__n, char **__end_PTR, int __base)","kind":3,"detail":"unsigned long long","sortText":"40791bfcstrtoull","filterText":"strtoull","insertText":"strtoull(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"strtoull(${1:const char *__n}, ${2:char **__end_PTR}, ${3:int __base})"}},{"label":"•stat(const char *__path, struct stat *__sbuf)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"407f2f3bstat","filterText":"stat","insertText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"stat(${1:const char *__path}, ${2:struct stat *__sbuf})"}},{"label":" pin_size_t","kind":8,"sortText":"4097ae13pin_size_t","filterText":"pin_size_t","insertText":"pin_size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"pin_size_t"}},{"label":"•mbed::Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nFile stream  \n@note Synchronization level: Set by subclass"},"sortText":"409f2ea4Stream","filterText":"Stream","insertText":"mbed::Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"mbed::Stream"}},{"label":"•std::chrono::steady_clock","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`  \n@brief Monotonic clock  \nTime returned has the property of only increasing at a uniform rate."},"sortText":"409f2ea4steady_clock","filterText":"steady_clock","insertText":"std::chrono::steady_clock","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::chrono::steady_clock"}},{"label":"•std::strchr(char *__s, int __n)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"409f2ea4strchr","filterText":"strchr","insertText":"std::strchr(${1:char *__s}, ${2:int __n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strchr(${1:char *__s}, ${2:int __n})"}},{"label":"•std::streambuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nBase class for @c char buffers."},"sortText":"409f2ea4streambuf","filterText":"streambuf","insertText":"std::streambuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::streambuf"}},{"label":"•std::stringstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c char mixed input and output memory streams."},"sortText":"409f2ea4stringstream","filterText":"stringstream","insertText":"std::stringstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::stringstream"}},{"label":"•std::strpbrk(char *__s1, const char *__s2)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"409f2ea4strpbrk","filterText":"strpbrk","insertText":"std::strpbrk(${1:char *__s1}, ${2:const char *__s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strpbrk(${1:char *__s1}, ${2:const char *__s2})"}},{"label":"•std::strstr(char *__s1, const char *__s2)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"409f2ea4strstr","filterText":"strstr","insertText":"std::strstr(${1:char *__s1}, ${2:const char *__s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strstr(${1:char *__s1}, ${2:const char *__s2})"}},{"label":"•std::strtod","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtod","filterText":"strtod","insertText":"std::strtod","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strtod"}},{"label":"•std::strtof","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtof","filterText":"strtof","insertText":"std::strtof","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strtof"}},{"label":"•std::strtol","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtol","filterText":"strtol","insertText":"std::strtol","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strtol"}},{"label":"•std::strtold","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtold","filterText":"strtold","insertText":"std::strtold","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strtold"}},{"label":"•std::strtoll","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtoll","filterText":"strtoll","insertText":"std::strtoll","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strtoll"}},{"label":"•std::strtoul","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtoul","filterText":"strtoul","insertText":"std::strtoul","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strtoul"}},{"label":"•std::strtoull","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bstrtoull","filterText":"strtoull","insertText":"std::strtoull","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strtoull"}},{"label":"•std::stable_sort(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8stable_sort","filterText":"stable_sort","insertText":"std::stable_sort($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::stable_sort($0)"}},{"label":"•std::static_pointer_cast(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.2.2.9 shared_ptr casts."},"sortText":"40a94eb8static_pointer_cast","filterText":"static_pointer_cast","insertText":"std::static_pointer_cast($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::static_pointer_cast($0)"}},{"label":"•std::stod(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stod","filterText":"stod","insertText":"std::stod($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::stod($0)"}},{"label":"•std::stof(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \nNB: wcstof vs wcstod."},"sortText":"40a94eb8stof","filterText":"stof","insertText":"std::stof($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::stof($0)"}},{"label":"•std::stoi(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \n21.4 Numeric Conversions [string.conversions]."},"sortText":"40a94eb8stoi","filterText":"stoi","insertText":"std::stoi($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::stoi($0)"}},{"label":"•std::stol(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stol","filterText":"stol","insertText":"std::stol($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::stol($0)"}},{"label":"•std::stold(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stold","filterText":"stold","insertText":"std::stold($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::stold($0)"}},{"label":"•std::stoll(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stoll","filterText":"stoll","insertText":"std::stoll($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::stoll($0)"}},{"label":"•std::stoul(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stoul","filterText":"stoul","insertText":"std::stoul($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::stoul($0)"}},{"label":"•std::stoull(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`"},"sortText":"40a94eb8stoull","filterText":"stoull","insertText":"std::stoull($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::stoull($0)"}},{"label":"•std::streamoff","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"40a94eb8streamoff","filterText":"streamoff","insertText":"std::streamoff","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::streamoff"}},{"label":"•std::streampos","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nClauses 21.1.3.1 and 21.1.3.2 describe streampos and wstreampos as implementation defined types, but clause 27.2 requires that they must both be typedefs for fpos\\\u003cmbstate_t\u003e File position for char streams."},"sortText":"40a94eb8streampos","filterText":"streampos","insertText":"std::streampos","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::streampos"}},{"label":"•std::streamsize","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nIntegral type for I/O operation counts and buffer sizes."},"sortText":"40a94eb8streamsize","filterText":"streamsize","insertText":"std::streamsize","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::streamsize"}},{"label":"•std::string","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \nA string of @c char"},"sortText":"40a94eb8string","filterText":"string","insertText":"std::string","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::string"}},{"label":"•std::strcat","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"40b39ec4strcat","filterText":"strcat","insertText":"std::strcat","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strcat"}},{"label":"•std::strchr","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"40b39ec4strchr","filterText":"strchr","insertText":"std::strchr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strchr"}},{"label":"•std::strcmp","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"40b39ec4strcmp","filterText":"strcmp","insertText":"std::strcmp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strcmp"}},{"label":"•std::strcoll","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstring\u003e`"},"sortText":"40b39ec4strcoll","filterText":"strcoll","insertText":"std::strcoll","insertTextFormat":2,"textEdit":{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":28}},"newText":"std::strcoll"}}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":42,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 182

{"id":43,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 600

{"id":44,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'sta'"}]},"jsonrpc":"2.0"}Content-Length: 182

{"id":45,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 1646

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":16}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'digitalWrite'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:95:6:\nnote: candidate function not viable: no known conversion from 'int (const char *, struct stat *)' to 'PinStatus' for 2nd argument\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:10:13:\nnote: candidate function not viable: no known conversion from 'int (const char *, struct stat *)' to 'int' for 2nd argument\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:60:26:\nnote: candidate function not viable: no known conversion from 'int (const char *, struct stat *)' to 'PinStatus' for 2nd argument\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: candidate function not viable: no known conversion from 'int' to 'PinName' for 1st argument"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":46,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 182

{"id":47,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":47}}Content-Length: 304

{"jsonrpc":"2.0","id":49,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":9,"character":36},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 322

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":9,"character":36},"end":{"line":9,"character":36}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":239}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":49}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":48}}Content-Length: 221

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":9,"character":37},"end":{"line":9,"character":37}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":50}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":240},"contentChanges":[{"range":{"start":{"line":9,"character":37},"end":{"line":9,"character":37}},"rangeLength":0,"text":";"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":52}}Content-Length: 221

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":9,"character":38},"end":{"line":9,"character":38}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":240}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":53}}Content-Length: 221

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":54}}Content
>>>
Content-Length: 416

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":48,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 182

{"id":49,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 37

{"id":50,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":51,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":52,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":53,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 37

{"id":54,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":55,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":56,"result":[],"jsonrpc":"2.0"}
<<<
-Length: 349

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":241},"contentChanges":[{"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":55}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":56}}Content-Length: 221

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 449

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":242},"contentChanges":[{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":57}}Content-Length: 221

{"jsonrpc":"2.0","id":58,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":242}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":243},"contentChanges":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":2}},"rangeLength":0,"text":"i"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":58}}Content-Length: 221

{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 281

{"jsonrpc":"2.0","id":60,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":3},"context":{"triggerKind":1}}}Content-Length: 320

{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":3}},"context":{"diagnostics":[]}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":244},"contentChanges":[{"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":3}},"rangeLength":0,"text":"f"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":59}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":61}}Content-Length: 221

{"jsonrpc":"2.0","id":62,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 320

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/A
>>>
Content-Length: 600

{"id":57,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":13,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":15,"character":0},"end":{"line":18,"character":1}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":58,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'i'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":59,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 44942

{"id":60,"result":{"isIncomplete":true,"items":[{"label":" if (condition) {statements}","kind":15,"sortText":"3f000000if","filterText":"if","insertText":"if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"if (${1:condition}) {\n${0:statements}\n}"}},{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"int"}},{"label":"•isAlphaNumeric(int c)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"api/WCharacter.h\"`  \nWCharacter.h prototypes"},"sortText":"3ff8a156isAlphaNumeric","filterText":"isAlphaNumeric","insertText":"isAlphaNumeric(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"isAlphaNumeric(${1:int c})"}},{"label":"•isAscii(int c)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"api/WCharacter.h\"`  \nChecks whether c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"3ff8a156isAscii","filterText":"isAscii","insertText":"isAscii(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"isAscii(${1:int c})"}},{"label":"•isPunct(int c)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"api/WCharacter.h\"`  \nChecks for any printable character which is not a space or an alphanumeric character."},"sortText":"3ff8a156isPunct","filterText":"isPunct","insertText":"isPunct(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"isPunct(${1:int c})"}},{"label":" INPUT","kind":20,"detail":"PinMode","sortText":"403f858bINPUT","filterText":"INPUT","insertText":"INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"INPUT"}},{"label":" isgreater","kind":18,"sortText":"406c52eaisgreater","filterText":"isgreater","insertText":"isgreater","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"isgreater"}},{"label":" isgreaterequal","kind":18,"sortText":"406c52eaisgreaterequal","filterText":"isgreaterequal","insertText":"isgreaterequal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"isgreaterequal"}},{"label":" islessequal","kind":18,"sortText":"406c52eaislessequal","filterText":"islessequal","insertText":"islessequal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"islessequal"}},{"label":"•IO_IRQ_QSPIn","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4071b066IO_IRQ_QSPIn","filterText":"IO_IRQ_QSPIn","insertText":"IO_IRQ_QSPIn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"IO_IRQ_QSPIn"}},{"label":" imaxabs(intmax_t j)","kind":3,"detail":"intmax_t","sortText":"4071b066imaxabs","filterText":"imaxabs","insertText":"imaxabs(${1:intmax_t j})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"imaxabs(${1:intmax_t j})"}},{"label":" imaxdiv(intmax_t numer, intmax_t denomer)","kind":3,"detail":"imaxdiv_t","sortText":"4071b066imaxdiv","filterText":"imaxdiv","insertText":"imaxdiv(${1:intmax_t numer}, ${2:intmax_t denomer})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"imaxdiv(${1:intmax_t numer}, ${2:intmax_t denomer})"}},{"label":" int_fast8_t","kind":8,"sortText":"4071b066int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"int_fast8_t"}},{"label":" int_least16_t","kind":8,"sortText":"4071b066int_least16_t","filterText":"int_least16_t","insertText":"int_least16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"int_least16_t"}},{"label":" isascii(int __c)","kind":3,"detail":"int","sortText":"4071b066isascii","filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"isascii(${1:int __c})"}},{"label":" isdigit(int __c)","kind":3,"detail":"int","sortText":"4071b066isdigit","filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"isdigit(${1:int __c})"}},{"label":" islower_l(int __c, locale_t __l)","kind":3,"detail":"int","sortText":"4071b066islower_l","filterText":"islower_l","insertText":"islower_l(${1:int __c}, ${2:locale_t __l})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"islower_l(${1:int __c}, ${2:locale_t __l})"}},{"label":" isprint_l(int __c, locale_t __l)","kind":3,"detail":"int","sortText":"4071b066isprint_l","filterText":"isprint_l","insertText":"isprint_l(${1:int __c}, ${2:locale_t __l})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"isprint_l(${1:int __c}, ${2:locale_t __l})"}},{"label":" isupper(int __c)","kind":3,"detail":"int","sortText":"4071b066isupper","filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"isupper(${1:int __c})"}},{"label":"•IAR","kind":20,"detail":"mbed_compiler_id_t","documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nIAR"},"sortText":"40791bfcIAR","filterText":"IAR","insertText":"IAR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"IAR"}},{"label":" ilogbl(long double)","kind":3,"detail":"int","sortText":"40791bfcilogbl","filterText":"ilogbl","insertText":"ilogbl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"ilogbl(${1:long double})"}},{"label":" iswblank(wint_t)","kind":3,"detail":"int","sortText":"40791bfciswblank","filterText":"iswblank","insertText":"iswblank(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"iswblank(${1:wint_t})"}},{"label":" iswcntrl(wint_t)","kind":3,"detail":"int","sortText":"40791bfciswcntrl","filterText":"iswcntrl","insertText":"iswcntrl(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"iswcntrl(${1:wint_t})"}},{"label":" iswdigit(wint_t)","kind":3,"detail":"int","sortText":"40791bfciswdigit","filterText":"iswdigit","insertText":"iswdigit(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"iswdigit(${1:wint_t})"}},{"label":" iswgraph_l(wint_t, locale_t)","kind":3,"detail":"int","sortText":"40791bfciswgraph_l","filterText":"iswgraph_l","insertText":"iswgraph_l(${1:wint_t}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"iswgraph_l(${1:wint_t}, ${2:locale_t})"}},{"label":" iswspace(wint_t)","kind":3,"detail":"int","sortText":"40791bfciswspace","filterText":"iswspace","insertText":"iswspace(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"iswspace(${1:wint_t})"}},{"label":" int32_t","kind":8,"sortText":"407f2f3bint32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"int32_t"}},{"label":"•IRQ_NONE","kind":20,"detail":"gpio_irq_event","documentation":{"kind":"markdown","value":"From `\"gpio_irq_api.h\"`"},"sortText":"4088511fIRQ_NONE","filterText":"IRQ_NONE","insertText":"IRQ_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"IRQ_NONE"}},{"label":"•i2c_s","kind":22,"documentation":{"kind":"markdown","value":"From `\"objects.h\"`"},"sortText":"4088511fi2c_s","filterText":"i2c_s","insertText":"i2c_s","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"i2c_s"}},{"label":"•InternetDatagramSocket","kind":7,"documentation":{"kind":"markdown","value":"From `\"InternetDatagramSocket.h\"`  \nInternetDatagramSocket socket implementation."},"sortText":"40907626InternetDatagramSocket","filterText":"InternetDatagramSocket","insertText":"InternetDatagramSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"InternetDatagramSocket"}},{"label":"•std::ilogb(long double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aailogb","filterText":"ilogb","insertText":"std::ilogb(${1:long double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::ilogb(${1:long double __x})"}},{"label":"•mbed::detail::invoke_r\u003ctypename R\u003e(F \u0026\u0026f, Args \u0026\u0026args...)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"Callback.h\"`"},"sortText":"4092d0aainvoke_r","filterText":"invoke_r","insertText":"mbed::detail::invoke_r\u003c${1:typename R}\u003e(${2:F \u0026\u0026f}, ${3:Args \u0026\u0026args...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mbed::detail::invoke_r\u003c${1:typename R}\u003e(${2:F \u0026\u0026f}, ${3:Args \u0026\u0026args...})"}},{"label":"•std::isfinite(long double __x)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisfinite","filterText":"isfinite","insertText":"std::isfinite(${1:long double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::isfinite(${1:long double __x})"}},{"label":"•std::isgreater(double __x, double __y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisgreater","filterText":"isgreater","insertText":"std::isgreater(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::isgreater(${1:double __x}, ${2:double __y})"}},{"label":"•std::isless(_Tp __x, _Up __y)","kind":3,"detail":"typename __gnu_cxx::__enable_if\u003c(__is_arithmetic\u003c_Tp\u003e::__value \u0026\u0026 __is_arithmetic\u003c_Up\u003e::__value), bool\u003e::__type","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisless","filterText":"isless","insertText":"std::isless(${1:_Tp __x}, ${2:_Up __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::isless(${1:_Tp __x}, ${2:_Up __y})"}},{"label":"•std::islessgreater(float __x, float __y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaislessgreater","filterText":"islessgreater","insertText":"std::islessgreater(${1:float __x}, ${2:float __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::islessgreater(${1:float __x}, ${2:float __y})"}},{"label":"•std::isnormal(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisnormal","filterText":"isnormal","insertText":"std::isnormal($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::isnormal($0)"}},{"label":"•i2c_get_write_available(i2c_inst_t *i2c)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\\\brief Determine non-blocking write space available  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\return 0 if no space is available in the I2C to write more data. If return is nonzero, at least that many bytes can be written without blocking."},"sortText":"409c96d9i2c_get_write_available","filterText":"i2c_get_write_available","insertText":"i2c_get_write_available(${1:i2c_inst_t *i2c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"i2c_get_write_available(${1:i2c_inst_t *i2c})"}},{"label":"•i2c_inst","kind":22,"documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\---------------------------------------------------------------------------- Generic input/output"},"sortText":"409c96d9i2c_inst","filterText":"i2c_inst","insertText":"i2c_inst","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"i2c_inst"}},{"label":"•i2c_read_blocking_until(i2c_inst_t *i2c, uint8_t addr, uint8_t *dst, size_t len, bool nostop, absolute_time_t until)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\\\brief Attempt to read specified number of bytes from address, blocking until the specified absolute time is reached.  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param addr Address of device to read from  \n\\\\param dst Pointer to buffer to receive data  \n\\\\param len Length of data in bytes to receive  \n\\\\param nostop If true, master retains control of the bus at the end of the transfer (no Stop is issued),  \nand the next transfer will begin with a Restart rather than a Start.  \n\\\\param until The absolute time that the block will wait until the entire transaction is complete.  \n\\\\return Number of bytes read, or PICO_ERROR_GENERIC if address not acknowledged, no device present, or PICO_ERROR_TIMEOUT if a timeout occurred."},"sortText":"409c96d9i2c_read_blocking_until","filterText":"i2c_read_blocking_until","insertText":"i2c_read_blocking_until(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:absolute_time_t until})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"i2c_read_blocking_until(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:absolute_time_t until})"}},{"label":"•i2c_read_raw_blocking(i2c_inst_t *i2c, uint8_t *dst, size_t len)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\\\brief Write direct to TX FIFO  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param dst Buffer to accept data  \n\\\\param len Number of bytes to send  \nReads directly from the I2C RX FIFO which us mainly useful for slave-mode operation."},"sortText":"409c96d9i2c_read_raw_blocking","filterText":"i2c_read_raw_blocking","insertText":"i2c_read_raw_blocking(${1:i2c_inst_t *i2c}, ${2:uint8_t *dst}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"i2c_read_raw_blocking(${1:i2c_inst_t *i2c}, ${2:uint8_t *dst}, ${3:size_t len})"}},{"label":"•i2c_read_timeout_us(i2c_inst_t *i2c, uint8_t addr, uint8_t *dst, size_t len, bool nostop, uint timeout_us)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\\\brief Attempt to read specified number of bytes from address, with timeout  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param addr Address of device to read from  \n\\\\param dst Pointer to buffer to receive data  \n\\\\param len Length of data in bytes to receive  \n\\\\param nostop If true, master retains control of the bus at the end of the transfer (no Stop is issued),  \nand the next transfer will begin with a Restart rather than a Start.  \n\\\\param timeout_us The time that the function will wait for the entire transaction to complete  \n\\\\return Number of bytes read, or PICO_ERROR_GENERIC if address not acknowledged, no device present, or PICO_ERROR_TIMEOUT if a timeout occurred."},"sortText":"409c96d9i2c_read_timeout_us","filterText":"i2c_read_timeout_us","insertText":"i2c_read_timeout_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"i2c_read_timeout_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_us})"}},{"label":"•i2c_set_baudrate(i2c_inst_t *i2c, uint baudrate)","kind":3,"detail":"uint","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\\\brief Set I2C baudrate  \n\\\\ingroup hardware_i2c  \nSet I2C bus frequency as close as possible to requested, and return actual rate set.  \nBaudrate may not be as exactly requested due to clocking limitations.  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param baudrate Baudrate in Hz (e.g. 100kHz is 100000)  \n\\\\return Actual set baudrate"},"sortText":"409c96d9i2c_set_baudrate","filterText":"i2c_set_baudrate","insertText":"i2c_set_baudrate(${1:i2c_inst_t *i2c}, ${2:uint baudrate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"i2c_set_baudrate(${1:i2c_inst_t *i2c}, ${2:uint baudrate})"}},{"label":"•i2c_write_timeout_per_char_us(i2c_inst_t *i2c, uint8_t addr, const uint8_t *src, size_t len, bool nostop, uint timeout_per_char_us)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`"},"sortText":"409c96d9i2c_write_timeout_per_char_us","filterText":"i2c_write_timeout_per_char_us","insertText":"i2c_write_timeout_per_char_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:const uint8_t *src}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_per_char_us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"i2c_write_timeout_per_char_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:const uint8_t *src}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_per_char_us})"}},{"label":"•irq_get_vtable_handler(uint num)","kind":3,"detail":"irq_handler_t","documentation":{"kind":"markdown","value":"From `\"irq.h\"`  \n\\\\brief Get the current IRQ handler for the specified IRQ from the currently installed hardware vector table (VTOR) of the execution core  \n\\\\ingroup hardware_irq  \n\\\\param num Interrupt number \\\\ref interrupt_nums  \n\\\\return the address stored in the VTABLE for the given irq number"},"sortText":"409c96d9irq_get_vtable_handler","filterText":"irq_get_vtable_handler","insertText":"irq_get_vtable_handler(${1:uint num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"irq_get_vtable_handler(${1:uint num})"}},{"label":"•std::is_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_assignable"},"sortText":"409f2ea4is_assignable","filterText":"is_assignable","insertText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_bind_expression\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a function object that should be treated as a subexpression when evaluating calls to function objects returned by bind().  \nC++11 [func.bind.isbind].  \n@ingroup binders"},"sortText":"409f2ea4is_bind_expression","filterText":"is_bind_expression","insertText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_class\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_class"},"sortText":"409f2ea4is_class","filterText":"is_class","insertText":"std::is_class\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_class\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_compound\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_compound"},"sortText":"409f2ea4is_compound","filterText":"is_compound","insertText":"std::is_compound\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_compound\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_convertible\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_convertible"},"sortText":"409f2ea4is_convertible","filterText":"is_convertible","insertText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::is_error_code_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csystem_error\u003e`  \nis_error_code_enum"},"sortText":"409f2ea4is_error_code_enum","filterText":"is_error_code_enum","insertText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_literal_type\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_literal_type"},"sortText":"409f2ea4is_literal_type","filterText":"is_literal_type","insertText":"std::is_literal_type\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_literal_type\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_member_function_pointer\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_member_function_pointer"},"sortText":"409f2ea4is_member_function_pointer","filterText":"is_member_function_pointer","insertText":"std::is_member_function_pointer\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_member_function_pointer\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_swappable_with\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable_with"},"sortText":"409f2ea4is_nothrow_swappable_with","filterText":"is_nothrow_swappable_with","insertText":"std::is_nothrow_swappable_with\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_nothrow_swappable_with\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_nothrow_swappable_with_v\u003ctypename _Tp, typename _Up\u003e","kind":6,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable_with_v"},"sortText":"409f2ea4is_nothrow_swappable_with_v","filterText":"is_nothrow_swappable_with_v","insertText":"std::is_nothrow_swappable_with_v\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_nothrow_swappable_with_v\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_placeholder\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a placeholder in a bind() expression and, if so, which placeholder it is.  \nC++11 [func.bind.isplace].  \n@ingroup binders"},"sortText":"409f2ea4is_placeholder","filterText":"is_placeholder","insertText":"std::is_placeholder\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_placeholder\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_polymorphic\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_polymorphic"},"sortText":"409f2ea4is_polymorphic","filterText":"is_polymorphic","insertText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_reference\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_reference"},"sortText":"409f2ea4is_reference","filterText":"is_reference","insertText":"std::is_reference\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_reference\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_assignable"},"sortText":"409f2ea4is_trivially_assignable","filterText":"is_trivially_assignable","insertText":"std::is_trivially_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_trivially_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_trivially_default_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_default_constructible"},"sortText":"409f2ea4is_trivially_default_constructible","filterText":"is_trivially_default_constructible","insertText":"std::is_trivially_default_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_trivially_default_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_move_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_move_assignable"},"sortText":"409f2ea4is_trivially_move_assignable","filterText":"is_trivially_move_assignable","insertText":"std::is_trivially_move_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_trivially_move_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_move_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_move_constructible"},"sortText":"409f2ea4is_trivially_move_constructible","filterText":"is_trivially_move_constructible","insertText":"std::is_trivially_move_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_trivially_move_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_unsigned\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_unsigned"},"sortText":"409f2ea4is_unsigned","filterText":"is_unsigned","insertText":"std::is_unsigned\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_unsigned\u003c${1:typename _Tp}\u003e"}},{"label":"•interp_hw_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"structs/interp.h\"`"},"sortText":"40a7b70binterp_hw_t","filterText":"interp_hw_t","insertText":"interp_hw_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"interp_hw_t"}},{"label":"•mstd::impl::INVOKE(F Base::*obj, T1 \u0026\u0026target)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`  \nF is pointer to member object, and only arg is a reference wrapper"},"sortText":"40a94eb8INVOKE","filterText":"INVOKE","insertText":"mstd::impl::INVOKE(${1:F Base::*obj}, ${2:T1 \u0026\u0026target})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::impl::INVOKE(${1:F Base::*obj}, ${2:T1 \u0026\u0026target})"}},{"label":"•std::input_iterator_tag","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@defgroup iterator_tags Iterator Tags These are empty types, used to distinguish different iterators. The distinction is not made by what they contain, but simply by what they are. Different underlying algorithms can then be used based on the different operations supported by different iterator types.  \n@{ Marking input iterators."},"sortText":"40a94eb8input_iterator_tag","filterText":"input_iterator_tag","insertText":"std::input_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::input_iterator_tag"}},{"label":"•std::internal(ios_base \u0026__base)","kind":3,"detail":"ios_base \u0026","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \n[27.4.5.2] adjustfield manipulators Calls base.setf(ios_base::internal, ios_base::adjustfield)."},"sortText":"40a94eb8internal","filterText":"internal","insertText":"std::internal(${1:ios_base \u0026__base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::internal(${1:ios_base \u0026__base})"}},{"label":"•std::is_heap_until(_RAIter, _RAIter)","kind":3,"detail":"_RAIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8is_heap_until","filterText":"is_heap_until","insertText":"std::is_heap_until(${1:_RAIter}, ${2:_RAIter})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_heap_until(${1:_RAIter}, ${2:_RAIter})"}},{"label":"•mstd::is_invocable_r\u003ctypename R, typename F, typename Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8is_invocable_r","filterText":"is_invocable_r","insertText":"mstd::is_invocable_r\u003c${1:typename R}, ${2:typename F}, ${3:typename Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_invocable_r\u003c${1:typename R}, ${2:typename F}, ${3:typename Args}\u003e"}},{"label":"•mstd::is_nothrow_default_constructible\u003ctypename T\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8is_nothrow_default_constructible","filterText":"is_nothrow_default_constructible","insertText":"mstd::is_nothrow_default_constructible\u003c${1:typename T}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_nothrow_default_constructible\u003c${1:typename T}\u003e"}},{"label":"•mstd::is_nothrow_invocable\u003cclass F, class Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8is_nothrow_invocable","filterText":"is_nothrow_invocable","insertText":"mstd::is_nothrow_invocable\u003c${1:class F}, ${2:class Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_nothrow_invocable\u003c${1:class F}, ${2:class Args}\u003e"}},{"label":"•mstd::impl::is_nothrow_invocable_r\u003ctypename R, typename InvokeResult, typename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8is_nothrow_invocable_r","filterText":"is_nothrow_invocable_r","insertText":"mstd::impl::is_nothrow_invocable_r\u003c${1:typename R}, ${2:typename InvokeResult}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::impl::is_nothrow_invocable_r\u003c${1:typename R}, ${2:typename InvokeResult}\u003e"}},{"label":"•std::is_sorted(_FIter, _FIter, _Compare)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8is_sorted","filterText":"is_sorted","insertText":"std::is_sorted(${1:_FIter}, ${2:_FIter}, ${3:_Compare})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_sorted(${1:_FIter}, ${2:_FIter}, ${3:_Compare})"}},{"label":"•std::is_sorted_until(_FIter, _FIter)","kind":3,"detail":"_FIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8is_sorted_until","filterText":"is_sorted_until","insertText":"std::is_sorted_until(${1:_FIter}, ${2:_FIter})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::is_sorted_until(${1:_FIter}, ${2:_FIter})"}},{"label":"•std::iterator\u003ctypename _Category, typename _Tp, typename _Distance, typename _Pointer, typename _Reference\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief Common %iterator class.  \nThis class does nothing but define nested typedefs. %Iterator classes can inherit from this class to save some work. The typedefs are then used in specializations and overloading.  \nIn particular, there are no default implementations of requirements such as @c operator++ and the like. (How could there be?)"},"sortText":"40a94eb8iterator","filterText":"iterator","insertText":"std::iterator\u003c${1:typename _Category}, ${2:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::iterator\u003c${1:typename _Category}, ${2:typename _Tp}\u003e"}},{"label":"•std::iterator_traits\u003ctypename _Iterator\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`"},"sortText":"40a94eb8iterator_traits","filterText":"iterator_traits","insertText":"std::iterator_traits\u003c${1:typename _Iterator}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::iterator_traits\u003c${1:typename _Iterator}\u003e"}},{"label":"•std::int8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40b39ec4int8_t","filterText":"int8_t","insertText":"std::int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::int8_t"}},{"label":"•std::int_least32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40b39ec4int_least32_t","filterText":"int_least32_t","insertText":"std::int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::int_least32_t"}},{"label":"•std::intptr_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40b39ec4intptr_t","filterText":"intptr_t","insertText":"std::intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::intptr_t"}},{"label":"•std::isalnum","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`"},"sortText":"40b39ec4isalnum","filterText":"isalnum","insertText":"std::isalnum","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::isalnum"}},{"label":"•std::isdigit","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`"},"sortText":"40b39ec4isdigit","filterText":"isdigit","insertText":"std::isdigit","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::isdigit"}},{"label":"•std::isprint","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`"},"sortText":"40b39ec4isprint","filterText":"isprint","insertText":"std::isprint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::isprint"}},{"label":"•std::isspace","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`"},"sortText":"40b39ec4isspace","filterText":"isspace","insertText":"std::isspace","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::isspace"}},{"label":"•std::isupper","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`"},"sortText":"40b39ec4isupper","filterText":"isupper","insertText":"std::isupper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::isupper"}},{"label":"•std::iswdigit","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwctype\u003e`"},"sortText":"40b39ec4iswdigit","filterText":"iswdigit","insertText":"std::iswdigit","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::iswdigit"}},{"label":"•std::iswprint","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwctype\u003e`"},"sortText":"40b39ec4iswprint","filterText":"iswprint","insertText":"std::iswprint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::iswprint"}},{"label":"•mstd::inserter","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40bcd333inserter","filterText":"inserter","insertText":"mstd::inserter","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::inserter"}},{"label":"•mstd::is_abstract","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_abstract","filterText":"is_abstract","insertText":"mstd::is_abstract","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_abstract"}},{"label":"•mstd::is_arithmetic","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_arithmetic","filterText":"is_arithmetic","insertText":"mstd::is_arithmetic","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_arithmetic"}},{"label":"•mstd::is_array","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_array","filterText":"is_array","insertText":"mstd::is_array","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_array"}},{"label":"•mstd::is_compound","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_compound","filterText":"is_compound","insertText":"mstd::is_compound","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_compound"}},{"label":"•mstd::is_copy_assignable","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_copy_assignable","filterText":"is_copy_assignable","insertText":"mstd::is_copy_assignable","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_copy_assignable"}},{"label":"•mstd::is_default_constructible","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_default_constructible","filterText":"is_default_constructible","insertText":"mstd::is_default_constructible","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_default_constructible"}},{"label":"•mstd::is_member_function_pointer","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_member_function_pointer","filterText":"is_member_function_pointer","insertText":"mstd::is_member_function_pointer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_member_function_pointer"}},{"label":"•mstd::is_member_object_pointer","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_member_object_pointer","filterText":"is_member_object_pointer","insertText":"mstd::is_member_object_pointer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_member_object_pointer"}},{"label":"•mstd::is_null_pointer","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_null_pointer","filterText":"is_null_pointer","insertText":"mstd::is_null_pointer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_null_pointer"}},{"label":"•mstd::is_signed","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_signed","filterText":"is_signed","insertText":"mstd::is_signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_signed"}},{"label":"•mstd::is_standard_layout","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_standard_layout","filterText":"is_standard_layout","insertText":"mstd::is_standard_layout","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_standard_layout"}},{"label":"•mstd::is_trivially_destructible","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_trivially_destructible","filterText":"is_trivially_destructible","insertText":"mstd::is_trivially_destructible","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::is_trivially_destructible"}},{"label":"•mstd::istreambuf_iterator","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40bcd333istreambuf_iterator","filterText":"istreambuf_iterator","insertText":"mstd::istreambuf_iterator","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"mstd::istreambuf_iterator"}}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":61,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":62,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}
<<<
ppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":4}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":244}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":245},"contentChanges":[{"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":62}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":63}}Content-Length: 221

{"jsonrpc":"2.0","id":64,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":246},"contentChanges":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":64}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":60}}Content-Length: 221

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":247},"contentChanges":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":2}},"rangeLength":0,"text":"p"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":65}}Content-Length: 221

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":248},"contentChanges":[{"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":3}},"rangeLength":0,"text":"o"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":66}}Content-Length: 221

{"jsonrpc":"2.0","id":67,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 281

{"jsonrpc":"2.0","id":68,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":4},"context":{"triggerKind":1}}}Content-Length: 320

{"jsonrpc":"2.0","id":69,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":4}},"context":{"diagnostics":[]}}}Content-Length: 343

{"jsonrpc":"2.0","method":"tex
>>>
Content-Length: 389

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'if'"}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":63,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":64,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'i'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":65,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 600

{"id":66,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'p'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":67,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'po'"}]},"jsonrpc":"2.0"}Content-Length: 16062

{"id":68,"result":{"isIncomplete":false,"items":[{"label":" pow","kind":18,"sortText":"406c52eapow","filterText":"pow","insertText":"pow","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"pow"}},{"label":" popen(const char *, const char *)","kind":3,"detail":"FILE *","sortText":"4071b066popen","filterText":"popen","insertText":"popen(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"popen(${1:const char *}, ${2:const char *})"}},{"label":"•poll(struct pollfd *fds, nfds_t nfds, int timeout)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcpoll","filterText":"poll","insertText":"poll(${1:struct pollfd *fds}, ${2:nfds_t nfds}, ${3:int timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"poll(${1:struct pollfd *fds}, ${2:nfds_t nfds}, ${3:int timeout})"}},{"label":"•pollfd","kind":22,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcpollfd","filterText":"pollfd","insertText":"pollfd","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"pollfd"}},{"label":" posix_memalign(void **, size_t, size_t)","kind":3,"detail":"int","sortText":"40791bfcposix_memalign","filterText":"posix_memalign","insertText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})"}},{"label":" pow(double, double)","kind":3,"detail":"double","sortText":"40791bfcpow","filterText":"pow","insertText":"pow(${1:double}, ${2:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"pow(${1:double}, ${2:double})"}},{"label":" powf(float, float)","kind":3,"detail":"float","sortText":"40791bfcpowf","filterText":"powf","insertText":"powf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"powf(${1:float}, ${2:float})"}},{"label":" powl(long double, long double)","kind":3,"detail":"long double","sortText":"40791bfcpowl","filterText":"powl","insertText":"powl(${1:long double}, ${2:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"powl(${1:long double}, ${2:long double})"}},{"label":"•Port0","kind":20,"detail":"PortName","documentation":{"kind":"markdown","value":"From `\"PortNames.h\"`"},"sortText":"4088511fPort0","filterText":"Port0","insertText":"Port0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"Port0"}},{"label":"•PortName","kind":8,"documentation":{"kind":"markdown","value":"From `\"PortNames.h\"`"},"sortText":"4088511fPortName","filterText":"PortName","insertText":"PortName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"PortName"}},{"label":"•port_s","kind":22,"documentation":{"kind":"markdown","value":"From `\"objects.h\"`"},"sortText":"4088511fport_s","filterText":"port_s","insertText":"port_s","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"port_s"}},{"label":"•mbed::poll(pollfh *fhs, unsigned int nfhs, int timeout)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"mbed_poll.h\"`  \nA mechanism to multiplex input/output over a set of file handles(file descriptors).  \nFor every file handle provided, poll() examines it for any events registered for that particular file handle.  \n@param fhs an array of PollFh struct carrying a FileHandle and bitmasks of events  \n@param nfhs number of file handles  \n@param timeout timer value to timeout or -1 for loop forever  \n@return number of file handles selected (for which revents is non-zero). 0 if timed out with nothing selected. -1 for error."},"sortText":"4092d0aapoll","filterText":"poll","insertText":"mbed::poll(${1:pollfh *fhs}, ${2:unsigned int nfhs}, ${3:int timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"mbed::poll(${1:pollfh *fhs}, ${2:unsigned int nfhs}, ${3:int timeout})"}},{"label":"•mbed::pollfh","kind":22,"documentation":{"kind":"markdown","value":"From `\"mbed_poll.h\"`  \n\\\\defgroup platform_poll poll functions  \n@{"},"sortText":"4092d0aapollfh","filterText":"pollfh","insertText":"mbed::pollfh","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"mbed::pollfh"}},{"label":"•std::pow(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aapow","filterText":"pow","insertText":"std::pow($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"std::pow($0)"}},{"label":"•std::pointer_safety","kind":13,"documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n20.7.4 [util.dynamic.safety], pointer safety"},"sortText":"409f2ea4pointer_safety","filterText":"pointer_safety","insertText":"std::pointer_safety","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"std::pointer_safety"}},{"label":"•POLY_16BIT_CCITT","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx16+x12+x5+1"},"sortText":"40a746fbPOLY_16BIT_CCITT","filterText":"POLY_16BIT_CCITT","insertText":"POLY_16BIT_CCITT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"POLY_16BIT_CCITT"}},{"label":"•POLY_16BIT_IBM","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx16+x15+x2+1"},"sortText":"40a746fbPOLY_16BIT_IBM","filterText":"POLY_16BIT_IBM","insertText":"POLY_16BIT_IBM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"POLY_16BIT_IBM"}},{"label":"•POLY_32BIT_ANSI","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx32+x26+x23+x22+x16+x12+x11+x10+x8+x7+x5+x4+x2+x+1"},"sortText":"40a746fbPOLY_32BIT_ANSI","filterText":"POLY_32BIT_ANSI","insertText":"POLY_32BIT_ANSI","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"POLY_32BIT_ANSI"}},{"label":"•POLY_7BIT_SD","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx7+x3+1"},"sortText":"40a746fbPOLY_7BIT_SD","filterText":"POLY_7BIT_SD","insertText":"POLY_7BIT_SD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"POLY_7BIT_SD"}},{"label":"•POLY_8BIT_CCITT","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx8+x2+x+1"},"sortText":"40a746fbPOLY_8BIT_CCITT","filterText":"POLY_8BIT_CCITT","insertText":"POLY_8BIT_CCITT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"POLY_8BIT_CCITT"}},{"label":"•std::pow","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bpow","filterText":"pow","insertText":"std::pow","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"std::pow"}},{"label":"•std::pointer_to_binary_function\u003ctypename _Arg1, typename _Arg2, typename _Result\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \nOne of the @link pointer_adaptors adaptors for function pointers@endlink."},"sortText":"40a94eb8pointer_to_binary_function","filterText":"pointer_to_binary_function","insertText":"std::pointer_to_binary_function\u003c${1:typename _Arg1}, ${2:typename _Arg2}, ${3:typename _Result}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"std::pointer_to_binary_function\u003c${1:typename _Arg1}, ${2:typename _Arg2}, ${3:typename _Result}\u003e"}},{"label":"•std::pointer_to_unary_function\u003ctypename _Arg, typename _Result\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n20.3.7 adaptors pointers functions  \n@defgroup pointer_adaptors Adaptors for pointers to functions  \n@ingroup functors  \nThe advantage of function objects over pointers to functions is that the objects in the standard library declare nested typedefs describing their argument and result types with uniform names (e.g., @c result_type from the base classes @c unary_function and @c binary_function).  \nSometimes those typedefs are required, not just optional.  \nAdaptors are provided to turn pointers to unary (single-argument) and binary (double-argument) functions into function objects. The long-winded functor @c pointer_to_unary_function is constructed with a function pointer @c f, and its @c operator() called with argument @c x returns @c f(x). The functor @c pointer_to_binary_function does the same thing, but with a double-argument @c f and @c operator().  \nThe function @c ptr_fun takes a pointer-to-function @c f and constructs an instance of the appropriate functor.  \n@{  \nOne of the @link pointer_adaptors adaptors for function pointers@endlink."},"sortText":"40a94eb8pointer_to_unary_function","filterText":"pointer_to_unary_function","insertText":"std::pointer_to_unary_function\u003c${1:typename _Arg}, ${2:typename _Result}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"std::pointer_to_unary_function\u003c${1:typename _Arg}, ${2:typename _Result}\u003e"}},{"label":"•std::pointer_traits\u003ctypename _Ptr\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n@brief Uniform interface to all pointer-like types  \n@ingroup pointer_abstractions"},"sortText":"40a94eb8pointer_traits","filterText":"pointer_traits","insertText":"std::pointer_traits\u003c${1:typename _Ptr}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"std::pointer_traits\u003c${1:typename _Ptr}\u003e"}},{"label":"•std::pop_heap(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8pop_heap","filterText":"pop_heap","insertText":"std::pop_heap($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"std::pop_heap($0)"}},{"label":"•PIO0_IRQ_0n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"40aa889bPIO0_IRQ_0n","filterText":"PIO0_IRQ_0n","insertText":"PIO0_IRQ_0n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"PIO0_IRQ_0n"}},{"label":"•PIO0_IRQ_1n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"40aa889bPIO0_IRQ_1n","filterText":"PIO0_IRQ_1n","insertText":"PIO0_IRQ_1n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"PIO0_IRQ_1n"}},{"label":"•PIO1_IRQ_0n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"40aa889bPIO1_IRQ_0n","filterText":"PIO1_IRQ_0n","insertText":"PIO1_IRQ_0n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"PIO1_IRQ_0n"}},{"label":"•PIO1_IRQ_1n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"40aa889bPIO1_IRQ_1n","filterText":"PIO1_IRQ_1n","insertText":"PIO1_IRQ_1n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"PIO1_IRQ_1n"}},{"label":"•PIN_OUTPUT","kind":20,"detail":"PinDirection","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"40bec6d9PIN_OUTPUT","filterText":"PIN_OUTPUT","insertText":"PIN_OUTPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"PIN_OUTPUT"}},{"label":" pthread_once_t","kind":8,"sortText":"40bec6d9pthread_once_t","filterText":"pthread_once_t","insertText":"pthread_once_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"pthread_once_t"}},{"label":"•ParityOdd","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"40c63cd6ParityOdd","filterText":"ParityOdd","insertText":"ParityOdd","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"ParityOdd"}},{"label":"•PICO_OK","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"pico/error.h\"`"},"sortText":"40db8a00PICO_OK","filterText":"PICO_OK","insertText":"PICO_OK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"PICO_OK"}},{"label":"•mbed::PwmOut","kind":7,"documentation":{"kind":"markdown","value":"From `\"PwmOut.h\"`  \nA pulse-width modulation digital output  \n@note Synchronization level: Interrupt safe  \nExample  \n@code // Gradually change the intensity of the LED.  \n#include \"mbed.h\"  \nPwmOut led(LED1);  \nint main() { while(1) { led = led + 0.01;  \nThisThread::sleep_for(200);  \nif(led == 1.0) { led = 0;  \n} } }  \n@endcode"},"sortText":"40e532b3PwmOut","filterText":"PwmOut","insertText":"mbed::PwmOut","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"mbed::PwmOut"}},{"label":"•POLLERR","kind":1,"documentation":{"kind":"markdown","value":"From `\"mbed_poll.h\"`"},"sortText":"411d98a4POLLERR","filterText":"POLLERR","insertText":"POLLERR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"POLLERR"}},{"label":"•POLLHUP","kind":1,"documentation":{"kind":"markdown","value":"From `\"mbed_poll.h\"`"},"sortText":"411d98a4POLLHUP","filterText":"POLLHUP","insertText":"POLLHUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"POLLHUP"}},{"label":"•POLLIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"mbed_poll.h\"`"},"sortText":"411d98a4POLLIN","filterText":"POLLIN","insertText":"POLLIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"POLLIN"}},{"label":"•POLLNVAL","kind":1,"documentation":{"kind":"markdown","value":"From `\"mbed_poll.h\"`"},"sortText":"411d98a4POLLNVAL","filterText":"POLLNVAL","insertText":"POLLNVAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"POLLNVAL"}},{"label":"•POLLOUT","kind":1,"documentation":{"kind":"markdown","value":"From `\"mbed_poll.h\"`"},"sortText":"411d98a4POLLOUT","filterText":"POLLOUT","insertText":"POLLOUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"newText":"POLLOUT"}}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":69,"result":[],"jsonrpc":"2.0"}
<<<
tDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":249},"contentChanges":[{"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":67}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":69}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":68}}Content-Length: 281

{"jsonrpc":"2.0","id":70,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":3},"context":{"triggerKind":1}}}Content-Length: 221

{"jsonrpc":"2.0","id":71,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 320

{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":3}},"context":{"diagnostics":[]}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":250},"contentChanges":[{"range":{"start":{"line":7,"character":3},"end":{"line":7,"character":3}},"rangeLength":0,"text":"i"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":71}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":72}}Content-Length: 221

{"jsonrpc":"2.0","id":73,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":251},"contentChanges":[{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":4}},"rangeLength":0,"text":"b"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":73}}Content-Length: 221

{"jsonrpc":"2.0","id":74,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":252},"contentChanges":[{"range":{"start":{"line":7,"character":5},"end":{"line":7,"character":5}},"rangeLength":0,"text":"n"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":74}}Content-Length: 221

{"jsonrpc":"2.0","id":75,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 320

{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":6}},"context":{"diagnostics":[]}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/U
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'po'"}]},"jsonrpc":"2.0"}Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'p'"}]},"jsonrpc":"2.0"}Content-Length: 40640

{"id":70,"result":{"isIncomplete":true,"items":[{"label":"•Print","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Print.h\"`"},"sortText":"3fdbfc9cPrint","filterText":"Print","insertText":"Print","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"Print"}},{"label":"•PluggableUSBDevice","kind":7,"documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`  \nforward declaration"},"sortText":"3ff74b80PluggableUSBDevice","filterText":"PluggableUSBDevice","insertText":"PluggableUSBDevice","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PluggableUSBDevice"}},{"label":"•PluggableUSBModule","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`"},"sortText":"3ff8a156PluggableUSBModule","filterText":"PluggableUSBModule","insertText":"PluggableUSBModule","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PluggableUSBModule"}},{"label":"•PluggableUSB_","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`"},"sortText":"3ff8a156PluggableUSB_","filterText":"PluggableUSB_","insertText":"PluggableUSB_","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PluggableUSB_"}},{"label":"•Printable","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Printable.h\"`  \nThe Printable class provides a way for new classes to allow themselves to be printed.  \nBy deriving from Printable and implementing the printTo method, it will then be possible for users to print out instances of this class by passing them into the usual Print::print and Print::println methods."},"sortText":"3ff8a156Printable","filterText":"Printable","insertText":"Printable","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"Printable"}},{"label":"•pinMode(pin_size_t pinNumber, int mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Compat.h\"`"},"sortText":"3ff8a156pinMode","filterText":"pinMode","insertText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})"}},{"label":"•prog_void","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"402a889aprog_void","filterText":"prog_void","insertText":"prog_void","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"prog_void"}},{"label":"•PINCOUNT_fn()","kind":3,"detail":"unsigned int","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"403ec9efPINCOUNT_fn","filterText":"PINCOUNT_fn","insertText":"PINCOUNT_fn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PINCOUNT_fn()"}},{"label":" PullNone","kind":20,"detail":"PinMode","sortText":"403f858bPullNone","filterText":"PullNone","insertText":"PullNone","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PullNone"}},{"label":" PushPullNoPull","kind":20,"detail":"PinMode","sortText":"403f858bPushPullNoPull","filterText":"PushPullNoPull","insertText":"PushPullNoPull","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PushPullNoPull"}},{"label":" PushPullPullDown","kind":20,"detail":"PinMode","sortText":"403f858bPushPullPullDown","filterText":"PushPullPullDown","insertText":"PushPullPullDown","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PushPullPullDown"}},{"label":" PushPullPullUp","kind":20,"detail":"PinMode","sortText":"403f858bPushPullPullUp","filterText":"PushPullPullUp","insertText":"PushPullPullUp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PushPullPullUp"}},{"label":"•pin_size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"404bdaf3pin_size_t","filterText":"pin_size_t","insertText":"pin_size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pin_size_t"}},{"label":"•PinStatus","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40532740PinStatus","filterText":"PinStatus","insertText":"PinStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PinStatus"}},{"label":"•PinName","kind":8,"documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"40554e9ePinName","filterText":"PinName","insertText":"PinName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PinName"}},{"label":"•PluggableUSBD()","kind":3,"detail":"arduino::PluggableUSBDevice \u0026","documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`"},"sortText":"405adf97PluggableUSBD","filterText":"PluggableUSBD","insertText":"PluggableUSBD()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PluggableUSBD()"}},{"label":"•PluggableUSB()","kind":3,"detail":"arduino::PluggableUSB_ \u0026","documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`  \nReplacement for global singleton.  \nThis function prevents static-initialization-order-fiasco https://isocpp.org/wiki/faq/ctors#static-init-order-on-first-use"},"sortText":"405d8e68PluggableUSB","filterText":"PluggableUSB","insertText":"PluggableUSB()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PluggableUSB()"}},{"label":"•p13","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p13","filterText":"p13","insertText":"p13","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"p13"}},{"label":"•p14","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p14","filterText":"p14","insertText":"p14","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"p14"}},{"label":"•p2","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p2","filterText":"p2","insertText":"p2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"p2"}},{"label":"•p20","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p20","filterText":"p20","insertText":"p20","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"p20"}},{"label":"•p27","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p27","filterText":"p27","insertText":"p27","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"p27"}},{"label":"•p6","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p6","filterText":"p6","insertText":"p6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"p6"}},{"label":"•p7","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p7","filterText":"p7","insertText":"p7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"p7"}},{"label":"•p8","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p8","filterText":"p8","insertText":"p8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"p8"}},{"label":"•pinMode(NinaPin pin, PinMode mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\* FUNCTION DECLARATION  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*"},"sortText":"405d8e68pinMode","filterText":"pinMode","insertText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})"}},{"label":"•pulseIn(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`  \ngeneric, overloaded implementations"},"sortText":"405d8e68pulseIn","filterText":"pulseIn","insertText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":"•pulseInLong(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68pulseInLong","filterText":"pulseInLong","insertText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":" PinNameToIndex(PinName P)","kind":3,"detail":"int","sortText":"4068a03fPinNameToIndex","filterText":"PinNameToIndex","insertText":"PinNameToIndex(${1:PinName P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PinNameToIndex(${1:PinName P})"}},{"label":" pinMode(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"Redeclare Common.h functions with the updated PinMode"},"sortText":"4068a03fpinMode","filterText":"pinMode","insertText":"pinMode($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pinMode($0)"}},{"label":"•internal::PluggableUSBModule","kind":7,"documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`"},"sortText":"406cec00PluggableUSBModule","filterText":"PluggableUSBModule","insertText":"internal::PluggableUSBModule","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"internal::PluggableUSBModule"}},{"label":" perror(const char *)","kind":3,"detail":"void","sortText":"4071b066perror","filterText":"perror","insertText":"perror(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"perror(${1:const char *})"}},{"label":"•prog_char","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_char","filterText":"prog_char","insertText":"prog_char","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"prog_char"}},{"label":"•prog_int16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_int16_t","filterText":"prog_int16_t","insertText":"prog_int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"prog_int16_t"}},{"label":"•prog_int8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_int8_t","filterText":"prog_int8_t","insertText":"prog_int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"prog_int8_t"}},{"label":"•prog_uchar","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uchar","filterText":"prog_uchar","insertText":"prog_uchar","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"prog_uchar"}},{"label":"•prog_uint16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uint16_t","filterText":"prog_uint16_t","insertText":"prog_uint16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"prog_uint16_t"}},{"label":"•prog_uint32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uint32_t","filterText":"prog_uint32_t","insertText":"prog_uint32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"prog_uint32_t"}},{"label":" putc(int, FILE *)","kind":3,"detail":"int","sortText":"4071b066putc","filterText":"putc","insertText":"putc(${1:int}, ${2:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"putc(${1:int}, ${2:FILE *})"}},{"label":" puts(const char *)","kind":3,"detail":"int","sortText":"4071b066puts","filterText":"puts","insertText":"puts(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"puts(${1:const char *})"}},{"label":" putw(int, FILE *)","kind":3,"detail":"int","sortText":"4071b066putw","filterText":"putw","insertText":"putw(${1:int}, ${2:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"putw(${1:int}, ${2:FILE *})"}},{"label":" posix_memalign(void **, size_t, size_t)","kind":3,"detail":"int","sortText":"40791bfcposix_memalign","filterText":"posix_memalign","insertText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})"}},{"label":" powf(float, float)","kind":3,"detail":"float","sortText":"40791bfcpowf","filterText":"powf","insertText":"powf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"powf(${1:float}, ${2:float})"}},{"label":"•PIN_INPUT","kind":20,"detail":"PinDirection","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPIN_INPUT","filterText":"PIN_INPUT","insertText":"PIN_INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PIN_INPUT"}},{"label":"•PWM_1","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_1","filterText":"PWM_1","insertText":"PWM_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PWM_1"}},{"label":"•PWM_4","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_4","filterText":"PWM_4","insertText":"PWM_4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PWM_4"}},{"label":"•PWM_5","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_5","filterText":"PWM_5","insertText":"PWM_5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PWM_5"}},{"label":"•pselect(int __n, _types_fd_set *__readfds, _types_fd_set *__writefds, _types_fd_set *__exceptfds, const struct timespec *__timeout, const sigset_t *__set)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/select.h\u003e`"},"sortText":"407f2f3bpselect","filterText":"pselect","insertText":"pselect(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:const struct timespec *__timeout}, ${6:const sigset_t *__set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pselect(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:const struct timespec *__timeout}, ${6:const sigset_t *__set})"}},{"label":" pthread_attr_t","kind":8,"sortText":"407f2f3bpthread_attr_t","filterText":"pthread_attr_t","insertText":"pthread_attr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pthread_attr_t"}},{"label":" pthread_key_t","kind":8,"documentation":{"kind":"markdown","value":"Keys"},"sortText":"407f2f3bpthread_key_t","filterText":"pthread_key_t","insertText":"pthread_key_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pthread_key_t"}},{"label":" pthread_mutex_t","kind":8,"sortText":"407f2f3bpthread_mutex_t","filterText":"pthread_mutex_t","insertText":"pthread_mutex_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pthread_mutex_t"}},{"label":" pthread_mutexattr_t","kind":8,"sortText":"407f2f3bpthread_mutexattr_t","filterText":"pthread_mutexattr_t","insertText":"pthread_mutexattr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pthread_mutexattr_t"}},{"label":" pthread_once_t","kind":8,"sortText":"407f2f3bpthread_once_t","filterText":"pthread_once_t","insertText":"pthread_once_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pthread_once_t"}},{"label":" PICO_FLASH_SIZE_BYTES","kind":1,"sortText":"40800000PICO_FLASH_SIZE_BYTES","filterText":"PICO_FLASH_SIZE_BYTES","insertText":"PICO_FLASH_SIZE_BYTES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PICO_FLASH_SIZE_BYTES"}},{"label":" PICO_NO_BINARY_INFO","kind":1,"sortText":"40800000PICO_NO_BINARY_INFO","filterText":"PICO_NO_BINARY_INFO","insertText":"PICO_NO_BINARY_INFO","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PICO_NO_BINARY_INFO"}},{"label":" PICO_ON_DEVICE","kind":1,"sortText":"40800000PICO_ON_DEVICE","filterText":"PICO_ON_DEVICE","insertText":"PICO_ON_DEVICE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PICO_ON_DEVICE"}},{"label":" PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","kind":1,"sortText":"40800000PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","filterText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","insertText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX"}},{"label":" PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","kind":1,"sortText":"40800000PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","filterText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","insertText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED"}},{"label":" PICO_UART_ENABLE_CRLF_SUPPORT","kind":1,"sortText":"40800000PICO_UART_ENABLE_CRLF_SUPPORT","filterText":"PICO_UART_ENABLE_CRLF_SUPPORT","insertText":"PICO_UART_ENABLE_CRLF_SUPPORT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PICO_UART_ENABLE_CRLF_SUPPORT"}},{"label":"•POLY_16BIT_IBM","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx16+x15+x2+1"},"sortText":"4088511fPOLY_16BIT_IBM","filterText":"POLY_16BIT_IBM","insertText":"POLY_16BIT_IBM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"POLY_16BIT_IBM"}},{"label":"•POLY_7BIT_SD","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx7+x3+1"},"sortText":"4088511fPOLY_7BIT_SD","filterText":"POLY_7BIT_SD","insertText":"POLY_7BIT_SD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"POLY_7BIT_SD"}},{"label":"•POLY_8BIT_CCITT","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx8+x2+x+1"},"sortText":"4088511fPOLY_8BIT_CCITT","filterText":"POLY_8BIT_CCITT","insertText":"POLY_8BIT_CCITT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"POLY_8BIT_CCITT"}},{"label":"•ParityEven","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityEven","filterText":"ParityEven","insertText":"ParityEven","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"ParityEven"}},{"label":"•ParityNone","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityNone","filterText":"ParityNone","insertText":"ParityNone","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"ParityNone"}},{"label":"•ParityOdd","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityOdd","filterText":"ParityOdd","insertText":"ParityOdd","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"ParityOdd"}},{"label":"•PinList","kind":8,"documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fPinList","filterText":"PinList","insertText":"PinList","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PinList"}},{"label":"•Port0","kind":20,"detail":"PortName","documentation":{"kind":"markdown","value":"From `\"PortNames.h\"`"},"sortText":"4088511fPort0","filterText":"Port0","insertText":"Port0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"Port0"}},{"label":"•PortName","kind":8,"documentation":{"kind":"markdown","value":"From `\"PortNames.h\"`"},"sortText":"4088511fPortName","filterText":"PortName","insertText":"PortName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PortName"}},{"label":"•pin_function(PinName pin, int function)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpin_function","filterText":"pin_function","insertText":"pin_function(${1:PinName pin}, ${2:int function})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pin_function(${1:PinName pin}, ${2:int function})"}},{"label":"•pwmout_period_ms(pwmout_t *obj, int ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM period specified in miliseconds, keeping the duty cycle the same  \n@param obj The pwmout object  \n@param ms The milisecond period"},"sortText":"4088511fpwmout_period_ms","filterText":"pwmout_period_ms","insertText":"pwmout_period_ms(${1:pwmout_t *obj}, ${2:int ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwmout_period_ms(${1:pwmout_t *obj}, ${2:int ms})"}},{"label":"•pwmout_period_us(pwmout_t *obj, int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM period specified in microseconds, keeping the duty cycle the same  \n@param obj The pwmout object  \n@param us The microsecond period"},"sortText":"4088511fpwmout_period_us","filterText":"pwmout_period_us","insertText":"pwmout_period_us(${1:pwmout_t *obj}, ${2:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwmout_period_us(${1:pwmout_t *obj}, ${2:int us})"}},{"label":"•pwmout_pulsewidth(pwmout_t *obj, float seconds)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM pulsewidth specified in seconds, keeping the period the same.  \n@param obj The pwmout object  \n@param seconds The floating-point pulsewidth in seconds"},"sortText":"4088511fpwmout_pulsewidth","filterText":"pwmout_pulsewidth","insertText":"pwmout_pulsewidth(${1:pwmout_t *obj}, ${2:float seconds})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwmout_pulsewidth(${1:pwmout_t *obj}, ${2:float seconds})"}},{"label":"•pwmout_pulsewidth_us(pwmout_t *obj, int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM pulsewidth specified in microseconds, keeping the period the same.  \n@param obj The pwmout object  \n@param us The floating-point pulsewidth in microseconds"},"sortText":"4088511fpwmout_pulsewidth_us","filterText":"pwmout_pulsewidth_us","insertText":"pwmout_pulsewidth_us(${1:pwmout_t *obj}, ${2:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwmout_pulsewidth_us(${1:pwmout_t *obj}, ${2:int us})"}},{"label":"•pwmout_read(pwmout_t *obj)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nRead the current float-point output duty-cycle  \n@param obj The pwmout object  \n@return A floating-point output duty-cycle"},"sortText":"4088511fpwmout_read","filterText":"pwmout_read","insertText":"pwmout_read(${1:pwmout_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwmout_read(${1:pwmout_t *obj})"}},{"label":"•pwmout_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nPwmout hal structure. pwmout_s is declared in the target's hal"},"sortText":"4088511fpwmout_t","filterText":"pwmout_t","insertText":"pwmout_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwmout_t"}},{"label":"•std::pow(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aapow","filterText":"pow","insertText":"std::pow($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::pow($0)"}},{"label":"•PWM_CHAN_B","kind":20,"detail":"pwm_chan","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`"},"sortText":"409c96d9PWM_CHAN_B","filterText":"PWM_CHAN_B","insertText":"PWM_CHAN_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PWM_CHAN_B"}},{"label":"•PWM_DIV_B_HIGH","kind":20,"detail":"pwm_clkdiv_mode","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \nFractional divider is gated by the PWM B pin"},"sortText":"409c96d9PWM_DIV_B_HIGH","filterText":"PWM_DIV_B_HIGH","insertText":"PWM_DIV_B_HIGH","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"PWM_DIV_B_HIGH"}},{"label":"•panic(const char *fmt, ...)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"platform.h\"`"},"sortText":"409c96d9panic","filterText":"panic","insertText":"panic(${1:const char *fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"panic(${1:const char *fmt, ...})"}},{"label":"•pwm_clkdiv_mode","kind":13,"documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief PWM Divider mode settings  \n\\\\ingroup hardware_pwm"},"sortText":"409c96d9pwm_clkdiv_mode","filterText":"pwm_clkdiv_mode","insertText":"pwm_clkdiv_mode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwm_clkdiv_mode"}},{"label":"•pwm_config_set_clkdiv(pwm_config *c, float div)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set clock divider in a PWM configuration  \n\\\\ingroup hardware_pwm  \n\\\\param c PWM configuration struct to modify  \n\\\\param div Value to divide counting rate by. Must be greater than or equal to 1.  \nIf the divide mode is free-running, the PWM counter runs at clk_sys / div.  \nOtherwise, the divider reduces the rate of events seen on the B pin input (level or edge) before passing them on to the PWM counter."},"sortText":"409c96d9pwm_config_set_clkdiv","filterText":"pwm_config_set_clkdiv","insertText":"pwm_config_set_clkdiv(${1:pwm_config *c}, ${2:float div})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwm_config_set_clkdiv(${1:pwm_config *c}, ${2:float div})"}},{"label":"•pwm_config_set_wrap(pwm_config *c, uint16_t wrap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM counter wrap value in a PWM configuration  \n\\\\ingroup hardware_pwm  \nSet the highest value the counter will reach before returning to 0. Also known as TOP.  \n\\\\param c PWM configuration struct to modify  \n\\\\param wrap Value to set wrap to"},"sortText":"409c96d9pwm_config_set_wrap","filterText":"pwm_config_set_wrap","insertText":"pwm_config_set_wrap(${1:pwm_config *c}, ${2:uint16_t wrap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwm_config_set_wrap(${1:pwm_config *c}, ${2:uint16_t wrap})"}},{"label":"•pwm_get_default_config()","kind":3,"detail":"pwm_config","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Get a set of default values for PWM configuration  \n\\\\ingroup hardware_pwm  \nPWM config is free running at system clock speed, no phase correction, wrapping at 0xffff,  \nwith standard polarities for channels A and B.  \n\\\\return Set of default values."},"sortText":"409c96d9pwm_get_default_config","filterText":"pwm_get_default_config","insertText":"pwm_get_default_config()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwm_get_default_config()"}},{"label":"•pwm_get_irq_status_mask()","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Get PWM interrupt status, raw  \n\\\\ingroup hardware_pwm  \n\\\\return Bitmask of all PWM interrupts currently set"},"sortText":"409c96d9pwm_get_irq_status_mask","filterText":"pwm_get_irq_status_mask","insertText":"pwm_get_irq_status_mask()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwm_get_irq_status_mask()"}},{"label":"•pwm_gpio_to_channel(uint gpio)","kind":3,"detail":"uint","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Determine the PWM channel that is attached to the specified GPIO.  \n\\\\ingroup hardware_pwm  \nEach slice 0 to 7 has two channels, A and B.  \n\\\\return The PWM channel that controls the specified GPIO."},"sortText":"409c96d9pwm_gpio_to_channel","filterText":"pwm_gpio_to_channel","insertText":"pwm_gpio_to_channel(${1:uint gpio})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwm_gpio_to_channel(${1:uint gpio})"}},{"label":"•pwm_set_mask_enabled(uint32_t mask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Enable/Disable multiple PWM slices simultaneously  \n\\\\ingroup hardware_pwm  \n\\\\param mask Bitmap of PWMs to enable/disable. Bits 0 to 7 enable slices 0-7 respectively"},"sortText":"409c96d9pwm_set_mask_enabled","filterText":"pwm_set_mask_enabled","insertText":"pwm_set_mask_enabled(${1:uint32_t mask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwm_set_mask_enabled(${1:uint32_t mask})"}},{"label":"•pwm_set_output_polarity(uint slice_num, bool a, bool b)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM output polarity  \n\\\\ingroup hardware_pwm  \n\\\\param slice_num PWM slice number  \n\\\\param a true to invert output A  \n\\\\param b true to invert output B"},"sortText":"409c96d9pwm_set_output_polarity","filterText":"pwm_set_output_polarity","insertText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})"}},{"label":"•pwm_set_phase_correct(uint slice_num, bool phase_correct)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM phase correct on/off  \n\\\\ingroup hardware_pwm  \n\\\\param slice_num PWM slice number  \n\\\\param phase_correct true to set phase correct modulation, false to set trailing edge  \nSetting phase control to true means that instead of wrapping back to zero when the wrap point is reached,  \nthe PWM starts counting back down. The output frequency is halved when phase-correct mode is enabled."},"sortText":"409c96d9pwm_set_phase_correct","filterText":"pwm_set_phase_correct","insertText":"pwm_set_phase_correct(${1:uint slice_num}, ${2:bool phase_correct})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwm_set_phase_correct(${1:uint slice_num}, ${2:bool phase_correct})"}},{"label":"•pwm_slice_hw","kind":22,"documentation":{"kind":"markdown","value":"From `\"structs/pwm.h\"`"},"sortText":"40a4b801pwm_slice_hw","filterText":"pwm_slice_hw","insertText":"pwm_slice_hw","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"pwm_slice_hw"}},{"label":"•std::perror","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bperror","filterText":"perror","insertText":"std::perror","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::perror"}},{"label":"•std::printf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bprintf","filterText":"printf","insertText":"std::printf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::printf"}},{"label":"•std::putc","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bputc","filterText":"putc","insertText":"std::putc","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::putc"}},{"label":"•std::partial_sort(_RAIter, _RAIter, _RAIter, _Compare)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partial_sort","filterText":"partial_sort","insertText":"std::partial_sort(${1:_RAIter}, ${2:_RAIter}, ${3:_RAIter}, ${4:_Compare})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::partial_sort(${1:_RAIter}, ${2:_RAIter}, ${3:_RAIter}, ${4:_Compare})"}},{"label":"•std::partial_sort_copy(_IIter, _IIter, _RAIter, _RAIter)","kind":3,"detail":"_RAIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nnth_element partial_sort"},"sortText":"40a94eb8partial_sort_copy","filterText":"partial_sort_copy","insertText":"std::partial_sort_copy(${1:_IIter}, ${2:_IIter}, ${3:_RAIter}, ${4:_RAIter})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::partial_sort_copy(${1:_IIter}, ${2:_IIter}, ${3:_RAIter}, ${4:_RAIter})"}},{"label":"•std::partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partition","filterText":"partition","insertText":"std::partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"•std::partition_point(_FIter, _FIter, _Predicate)","kind":3,"detail":"_FIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partition_point","filterText":"partition_point","insertText":"std::partition_point(${1:_FIter}, ${2:_FIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::partition_point(${1:_FIter}, ${2:_FIter}, ${3:_Predicate})"}},{"label":"•std::pop_heap(_RAIter, _RAIter, _Compare)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8pop_heap","filterText":"pop_heap","insertText":"std::pop_heap(${1:_RAIter}, ${2:_RAIter}, ${3:_Compare})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::pop_heap(${1:_RAIter}, ${2:_RAIter}, ${3:_Compare})"}},{"label":"•std::prev(_BidirectionalIterator __x, typename iterator_traits\u003c_BidirectionalIterator\u003e::difference_type __n = 1)","kind":3,"detail":"_BidirectionalIterator","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`"},"sortText":"40a94eb8prev","filterText":"prev","insertText":"std::prev(${1:_BidirectionalIterator __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::prev(${1:_BidirectionalIterator __x})"}},{"label":"•std::ptrdiff_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`"},"sortText":"40a94eb8ptrdiff_t","filterText":"ptrdiff_t","insertText":"std::ptrdiff_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::ptrdiff_t"}},{"label":"•std::push_heap(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8push_heap","filterText":"push_heap","insertText":"std::push_heap($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":3}},"newText":"std::push_heap($0)"}}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":71,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":72,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":73,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pi'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":74,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pib'"}]},"jsonrpc":"2.0"}Content-Length: 398

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pibn'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":75,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":76,"result":[],"jsonrpc":"2.0"}
<<<
sers/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":253},"contentChanges":[{"range":{"start":{"line":7,"character":5},"end":{"line":7,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":75}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":76}}Content-Length: 221

{"jsonrpc":"2.0","id":77,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":254},"contentChanges":[{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":77}}Content-Length: 221

{"jsonrpc":"2.0","id":78,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":255},"contentChanges":[{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":4}},"rangeLength":0,"text":"n"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":78}}Content-Length: 221

{"jsonrpc":"2.0","id":79,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 320

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":5},"end":{"line":7,"character":5}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":255}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":256},"contentChanges":[{"range":{"start":{"line":7,"character":5},"end":{"line":7,"character":5}},"rangeLength":0,"text":"M"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":79}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":80}}Content-Length: 221

{"jsonrpc":"2.0","id":81,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":257},"contentChanges":[{"range":{"start":{"line":7,"character":6},"end":{"line":7,"character":6}},"rangeLength":0,"text":"o"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":81}}Content-Length: 221

{"jsonrpc":"2.0","id":82,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sket
>>>
Content-Length: 600

{"id":77,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pib'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":78,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pi'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":79,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 595

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pin'"}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":80,"result":[],"jsonrpc":"2.0"}Content-Length: 398

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pinM'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":81,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}
<<<
ch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":258},"contentChanges":[{"range":{"start":{"line":7,"character":7},"end":{"line":7,"character":7}},"rangeLength":0,"text":"d"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":82}}Content-Length: 221

{"jsonrpc":"2.0","id":83,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":259},"contentChanges":[{"range":{"start":{"line":7,"character":8},"end":{"line":7,"character":8}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":83}}Content-Length: 221

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 320

{"jsonrpc":"2.0","id":85,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 320

{"jsonrpc":"2.0","id":86,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":85}}Content-Length: 320

{"jsonrpc":"2.0","id":87,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":86}}Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}Content-Length: 320

{"jsonrpc":"2.0","id":88,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":87}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":259}}}Content-Length: 320

{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":88}}Content-Length: 320

{"jsonrpc":"2.0","id":90,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diag
>>>
Content-Length: 600

{"id":82,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 399

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pinMo'"}]},"jsonrpc":"2.0"}Content-Length: 807

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMod'; did you mean 'pinMode'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":83,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":84,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1485

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":85,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":86,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":87,"result":[],"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 37

{"id":88,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":89,"result":[],"jsonrpc":"2.0"}
<<<
nostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":89}}Content-Length: 320

{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":90}}Content-Length: 320

{"jsonrpc":"2.0","id":92,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":91}}Content-Length: 320

{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":92}}Content-Length: 320

{"jsonrpc":"2.0","id":94,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":93}}Content-Length: 320

{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":94}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":70}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":84}}Content-Length: 221

{"jsonrpc":"2.0","id":96,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":11,"character":38},"end":{"line":11,"character":38}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":95}}Content-Length: 353

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":260},"contentChanges":[{"range":{"start":{"line":11,"character":38},"end":{"line":11,"character":38}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":96}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":97}}Content-Length: 221

{"jsonrpc":"2.0","id":98,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov2
>>>
Content-Length: 37

{"id":90,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":91,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":92,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":93,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":94,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":95,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":96,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":97,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":98,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}
<<<
4a.ino","version":261},"contentChanges":[{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":4}},"rangeLength":0,"text":"d"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":98}}Content-Length: 221

{"jsonrpc":"2.0","id":99,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 283

{"jsonrpc":"2.0","id":100,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":5},"context":{"triggerKind":1}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":262},"contentChanges":[{"range":{"start":{"line":12,"character":5},"end":{"line":12,"character":5}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":99}}Content-Length: 222

{"jsonrpc":"2.0","id":101,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":263},"contentChanges":[{"range":{"start":{"line":12,"character":6},"end":{"line":12,"character":6}},"rangeLength":0,"text":"l"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":101}}Content-Length: 222

{"jsonrpc":"2.0","id":102,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":264},"contentChanges":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":7}},"rangeLength":0,"text":"a"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":102}}Content-Length: 222

{"jsonrpc":"2.0","id":103,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":265},"contentChanges":[{"range":{"start":{"line":12,"character":8},"end":{"line":12,"character":8}},"rangeLength":0,"text":"y"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":103}}Content-Length: 222

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":12,"character":9},"end":{"line":12,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved
>>>
Content-Length: 1485

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"}]},"jsonrpc":"2.0"}Content-Length: 1666

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'd'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":99,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 41475

{"id":100,"result":{"isIncomplete":true,"items":[{"label":" decltype(expression)","kind":15,"sortText":"3f000000decltype","filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"decltype(${0:expression})"}},{"label":" delete [] expression","kind":15,"detail":"void","sortText":"3f000000delete","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"delete [] ${0:expression}"}},{"label":" delete expression","kind":15,"detail":"void","sortText":"3f000000delete","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"delete ${0:expression}"}},{"label":" do {statements}while (expression)","kind":15,"sortText":"3f000000do","filterText":"do","insertText":"do {\n${1:statements}\n}while (${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"do {\n${1:statements}\n}while (${0:expression})"}},{"label":" double","kind":14,"sortText":"3f000000double","filterText":"double","insertText":"double","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"double"}},{"label":" digitalWrite(pin_size_t pinNumber, int status)","kind":3,"detail":"void","sortText":"3f17ae13digitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:pin_size_t pinNumber}, ${2:int status})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"digitalWrite(${1:pin_size_t pinNumber}, ${2:int status})"}},{"label":"•digitalWrite(pin_size_t pinNumber, PinStatus status)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3f17ae13digitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:pin_size_t pinNumber}, ${2:PinStatus status})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"digitalWrite(${1:pin_size_t pinNumber}, ${2:PinStatus status})"}},{"label":"•digitalWrite(NinaPin pin, PinStatus value)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"3f17ae13digitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:NinaPin pin}, ${2:PinStatus value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"digitalWrite(${1:NinaPin pin}, ${2:PinStatus value})"}},{"label":" digitalWrite(PinName pinNumber, PinStatus status)","kind":3,"detail":"void","sortText":"3f17ae13digitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:PinName pinNumber}, ${2:PinStatus status})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"digitalWrite(${1:PinName pinNumber}, ${2:PinStatus status})"}},{"label":"•digitalPinToPinName(pin_size_t P)","kind":3,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"3fdabd04digitalPinToPinName","filterText":"digitalPinToPinName","insertText":"digitalPinToPinName(${1:pin_size_t P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"digitalPinToPinName(${1:pin_size_t P})"}},{"label":"•digitalRead(NinaPin pin)","kind":3,"detail":"PinStatus","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"400c559bdigitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:NinaPin pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"digitalRead(${1:NinaPin pin})"}},{"label":"•digitalRead(pin_size_t pinNumber)","kind":3,"detail":"PinStatus","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"400c559bdigitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:pin_size_t pinNumber})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"digitalRead(${1:pin_size_t pinNumber})"}},{"label":" digitalRead(PinName pinNumber)","kind":3,"detail":"PinStatus","sortText":"401cf05edigitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:PinName pinNumber})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"digitalRead(${1:PinName pinNumber})"}},{"label":"•DNSClient","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/IPAddress.h\"`"},"sortText":"405d8e68DNSClient","filterText":"DNSClient","insertText":"DNSClient","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DNSClient"}},{"label":"•DhcpClass","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/IPAddress.h\"`"},"sortText":"405d8e68DhcpClass","filterText":"DhcpClass","insertText":"DhcpClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DhcpClass"}},{"label":"•delay(unsigned long)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68delay","filterText":"delay","insertText":"delay(${1:unsigned long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"delay(${1:unsigned long})"}},{"label":"•delayMicroseconds(unsigned int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68delayMicroseconds","filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"delayMicroseconds(${1:unsigned int us})"}},{"label":"•detachInterrupt(pin_size_t interruptNumber)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68detachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt(${1:pin_size_t interruptNumber})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"detachInterrupt(${1:pin_size_t interruptNumber})"}},{"label":"•mbed::DigitalIn","kind":7,"documentation":{"kind":"markdown","value":"From `\"DigitalIn.h\"`  \nA digital input, used for reading the state of a pin  \n@note Synchronization level: Interrupt safe  \nExample:  \n@code // Flash an LED while a DigitalIn is true  \n#include \"mbed.h\"  \nDigitalIn enable(p5);  \nDigitalOut led(LED1);  \nint main() { while(1) { if(enable) { led = !led;  \n} ThisThread::sleep_for(250);  \n} }  \n@endcode"},"sortText":"406532b3DigitalIn","filterText":"DigitalIn","insertText":"mbed::DigitalIn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mbed::DigitalIn"}},{"label":"•mbed::DigitalInOut","kind":7,"documentation":{"kind":"markdown","value":"From `\"DigitalInOut.h\"`"},"sortText":"406532b3DigitalInOut","filterText":"DigitalInOut","insertText":"mbed::DigitalInOut","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mbed::DigitalInOut"}},{"label":"•mbed::DigitalOut","kind":7,"documentation":{"kind":"markdown","value":"From `\"DigitalOut.h\"`"},"sortText":"406532b3DigitalOut","filterText":"DigitalOut","insertText":"mbed::DigitalOut","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mbed::DigitalOut"}},{"label":" detachInterrupt(PinName interruptNumber)","kind":3,"detail":"void","sortText":"4068a03fdetachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt(${1:PinName interruptNumber})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"detachInterrupt(${1:PinName interruptNumber})"}},{"label":"•mbed::interface::DigitalIn","kind":8,"documentation":{"kind":"markdown","value":"From `\"InterfaceDigitalIn.h\"`"},"sortText":"406a49d8DigitalIn","filterText":"DigitalIn","insertText":"mbed::interface::DigitalIn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mbed::interface::DigitalIn"}},{"label":"•mbed::interface::DigitalInOut","kind":8,"documentation":{"kind":"markdown","value":"From `\"InterfaceDigitalInOut.h\"`"},"sortText":"406a49d8DigitalInOut","filterText":"DigitalInOut","insertText":"mbed::interface::DigitalInOut","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mbed::interface::DigitalInOut"}},{"label":"•mbed::interface::DigitalOut","kind":8,"documentation":{"kind":"markdown","value":"From `\"InterfaceDigitalOut.h\"`"},"sortText":"406a49d8DigitalOut","filterText":"DigitalOut","insertText":"mbed::interface::DigitalOut","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mbed::interface::DigitalOut"}},{"label":" div","kind":18,"sortText":"406c52eadiv","filterText":"div","insertText":"div","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"div"}},{"label":" div_t","kind":18,"sortText":"406c52eadiv_t","filterText":"div_t","insertText":"div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"div_t"}},{"label":"•DMA_IRQ_0n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4071b066DMA_IRQ_0n","filterText":"DMA_IRQ_0n","insertText":"DMA_IRQ_0n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DMA_IRQ_0n"}},{"label":"•DMA_IRQ_1n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4071b066DMA_IRQ_1n","filterText":"DMA_IRQ_1n","insertText":"DMA_IRQ_1n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DMA_IRQ_1n"}},{"label":" diprintf(int, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066diprintf","filterText":"diprintf","insertText":"diprintf(${1:int}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"diprintf(${1:int}, ${2:const char *, ...})"}},{"label":" dprintf(int, const char *, ...)","kind":3,"detail":"int","sortText":"4071b066dprintf","filterText":"dprintf","insertText":"dprintf(${1:int}, ${2:const char *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"dprintf(${1:int}, ${2:const char *, ...})"}},{"label":"•DIR","kind":8,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcDIR","filterText":"DIR","insertText":"DIR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DIR"}},{"label":"•DT_BLK","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a block device."},"sortText":"40791bfcDT_BLK","filterText":"DT_BLK","insertText":"DT_BLK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DT_BLK"}},{"label":"•DT_CHR","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a character device."},"sortText":"40791bfcDT_CHR","filterText":"DT_CHR","insertText":"DT_CHR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DT_CHR"}},{"label":"•DT_DIR","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a directory."},"sortText":"40791bfcDT_DIR","filterText":"DT_DIR","insertText":"DT_DIR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DT_DIR"}},{"label":"•DT_FIFO","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a named pipe (FIFO)."},"sortText":"40791bfcDT_FIFO","filterText":"DT_FIFO","insertText":"DT_FIFO","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DT_FIFO"}},{"label":"•DT_LNK","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a symbolic link."},"sortText":"40791bfcDT_LNK","filterText":"DT_LNK","insertText":"DT_LNK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DT_LNK"}},{"label":"•DT_REG","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a regular file."},"sortText":"40791bfcDT_REG","filterText":"DT_REG","insertText":"DT_REG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DT_REG"}},{"label":"•DT_SOCK","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThis is a UNIX domain socket."},"sortText":"40791bfcDT_SOCK","filterText":"DT_SOCK","insertText":"DT_SOCK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DT_SOCK"}},{"label":"•DT_UNKNOWN","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThe file type could not be determined."},"sortText":"40791bfcDT_UNKNOWN","filterText":"DT_UNKNOWN","insertText":"DT_UNKNOWN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DT_UNKNOWN"}},{"label":"•debug(const char *format, ...)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_debug.h\"`  \n\\\\defgroup platform_debug Debug functions  \n@{"},"sortText":"40791bfcdebug","filterText":"debug","insertText":"debug(${1:const char *format, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"debug(${1:const char *format, ...})"}},{"label":"•debug_if(int condition, const char *format, ...)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_debug.h\"`  \nConditionally output a debug message  \nNOTE: If the condition is constant false (== 0) and the compiler optimization level is greater than 0, then the whole function will be compiled away.  \n@param condition output only if condition is true (!= 0)  \n@param format printf-style format string, followed by variables"},"sortText":"40791bfcdebug_if","filterText":"debug_if","insertText":"debug_if(${1:int condition}, ${2:const char *format, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"debug_if(${1:int condition}, ${2:const char *format, ...})"}},{"label":" difftime(time_t _time2, time_t _time1)","kind":3,"detail":"double","sortText":"40791bfcdifftime","filterText":"difftime","insertText":"difftime(${1:time_t _time2}, ${2:time_t _time1})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"difftime(${1:time_t _time2}, ${2:time_t _time1})"}},{"label":"•dirent","kind":22,"documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nThe following are dirent.h definitions are declared here to guarantee consistency where structure may be different with different toolchains"},"sortText":"40791bfcdirent","filterText":"dirent","insertText":"dirent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"dirent"}},{"label":" div(int __numer, int __denom)","kind":3,"detail":"div_t","sortText":"40791bfcdiv","filterText":"div","insertText":"div(${1:int __numer}, ${2:int __denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"div(${1:int __numer}, ${2:int __denom})"}},{"label":" div_t","kind":8,"sortText":"40791bfcdiv_t","filterText":"div_t","insertText":"div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"div_t"}},{"label":" double_t","kind":8,"sortText":"40791bfcdouble_t","filterText":"double_t","insertText":"double_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"double_t"}},{"label":" drand48()","kind":3,"detail":"double","sortText":"40791bfcdrand48","filterText":"drand48","insertText":"drand48()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"drand48()"}},{"label":" drem(double, double)","kind":3,"detail":"double","sortText":"40791bfcdrem","filterText":"drem","insertText":"drem(${1:double}, ${2:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"drem(${1:double}, ${2:double})"}},{"label":" dremf(float, float)","kind":3,"detail":"float","sortText":"40791bfcdremf","filterText":"dremf","insertText":"dremf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"dremf(${1:float}, ${2:float})"}},{"label":" dtostrf(double val, signed char width, unsigned char prec, char *sout)","kind":3,"detail":"char *","sortText":"40791bfcdtostrf","filterText":"dtostrf","insertText":"dtostrf(${1:double val}, ${2:signed char width}, ${3:unsigned char prec}, ${4:char *sout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"dtostrf(${1:double val}, ${2:signed char width}, ${3:unsigned char prec}, ${4:char *sout})"}},{"label":" duplocale(locale_t)","kind":3,"detail":"locale_t","sortText":"40791bfcduplocale","filterText":"duplocale","insertText":"duplocale(${1:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"duplocale(${1:locale_t})"}},{"label":"•digitalPinToPort(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"407cc3c8digitalPinToPort","filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"digitalPinToPort(${1:P})"}},{"label":"•daddr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"407f2f3bdaddr_t","filterText":"daddr_t","insertText":"daddr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"daddr_t"}},{"label":"•dev_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"407f2f3bdev_t","filterText":"dev_t","insertText":"dev_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"dev_t"}},{"label":"•DMA_USAGE_ALLOCATED","kind":20,"detail":"DMAUsage","documentation":{"kind":"markdown","value":"From `\"dma_api.h\"`"},"sortText":"4088511fDMA_USAGE_ALLOCATED","filterText":"DMA_USAGE_ALLOCATED","insertText":"DMA_USAGE_ALLOCATED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DMA_USAGE_ALLOCATED"}},{"label":"•DMA_USAGE_ALWAYS","kind":20,"detail":"DMAUsage","documentation":{"kind":"markdown","value":"From `\"dma_api.h\"`"},"sortText":"4088511fDMA_USAGE_ALWAYS","filterText":"DMA_USAGE_ALWAYS","insertText":"DMA_USAGE_ALWAYS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DMA_USAGE_ALWAYS"}},{"label":"•DMA_USAGE_NEVER","kind":20,"detail":"DMAUsage","documentation":{"kind":"markdown","value":"From `\"dma_api.h\"`"},"sortText":"4088511fDMA_USAGE_NEVER","filterText":"DMA_USAGE_NEVER","insertText":"DMA_USAGE_NEVER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DMA_USAGE_NEVER"}},{"label":"•DMA_USAGE_TEMPORARY_ALLOCATED","kind":20,"detail":"DMAUsage","documentation":{"kind":"markdown","value":"From `\"dma_api.h\"`"},"sortText":"4088511fDMA_USAGE_TEMPORARY_ALLOCATED","filterText":"DMA_USAGE_TEMPORARY_ALLOCATED","insertText":"DMA_USAGE_TEMPORARY_ALLOCATED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DMA_USAGE_TEMPORARY_ALLOCATED"}},{"label":"•dma_channel_allocate(uint32_t capabilities)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"dma_api.h\"`"},"sortText":"4088511fdma_channel_allocate","filterText":"dma_channel_allocate","insertText":"dma_channel_allocate(${1:uint32_t capabilities})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"dma_channel_allocate(${1:uint32_t capabilities})"}},{"label":"•dma_channel_free(int channelid)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"dma_api.h\"`"},"sortText":"4088511fdma_channel_free","filterText":"dma_channel_free","insertText":"dma_channel_free(${1:int channelid})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"dma_channel_free(${1:int channelid})"}},{"label":"•dma_init()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"dma_api.h\"`"},"sortText":"4088511fdma_init","filterText":"dma_init","insertText":"dma_init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"dma_init()"}},{"label":"•DEFAULT_STACK","kind":20,"detail":"nsapi_ip_stack","documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`"},"sortText":"40907626DEFAULT_STACK","filterText":"DEFAULT_STACK","insertText":"DEFAULT_STACK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DEFAULT_STACK"}},{"label":"•DNS","kind":7,"documentation":{"kind":"markdown","value":"From `\"DNS.h\"`  \nBase class for DNS provider"},"sortText":"40907626DNS","filterText":"DNS","insertText":"DNS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"DNS"}},{"label":"•std::div(long __i, long __j)","kind":3,"detail":"ldiv_t","documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"4092d0aadiv","filterText":"div","insertText":"std::div(${1:long __i}, ${2:long __j})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::div(${1:long __i}, ${2:long __j})"}},{"label":"•delayed_by_ms(const absolute_time_t t, uint32_t ms)","kind":3,"detail":"absolute_time_t","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Return a timestamp value obtained by adding a number of milliseconds to another timestamp  \n\\\\ingroup timestamp  \n\\\\param t the base timestamp  \n\\\\param ms the number of milliseconds to add  \n\\\\return the timestamp representing the resulting time"},"sortText":"409c96d9delayed_by_ms","filterText":"delayed_by_ms","insertText":"delayed_by_ms(${1:const absolute_time_t t}, ${2:uint32_t ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"delayed_by_ms(${1:const absolute_time_t t}, ${2:uint32_t ms})"}},{"label":"•delayed_by_us(const absolute_time_t t, uint64_t us)","kind":3,"detail":"absolute_time_t","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Return a timestamp value obtained by adding a number of microseconds to another timestamp  \n\\\\ingroup timestamp  \n\\\\param t the base timestamp  \n\\\\param us the number of microseconds to add  \n\\\\return the timestamp representing the resulting time"},"sortText":"409c96d9delayed_by_us","filterText":"delayed_by_us","insertText":"delayed_by_us(${1:const absolute_time_t t}, ${2:uint64_t us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"delayed_by_us(${1:const absolute_time_t t}, ${2:uint64_t us})"}},{"label":"•mbed::DeepSleepLock","kind":7,"documentation":{"kind":"markdown","value":"From `\"DeepSleepLock.h\"`  \nRAII object for disabling, then restoring the deep sleep mode Usage:  \n@code  \nvoid f() { // some code here { DeepSleepLock lock;  \n// Code in this block will run with the deep sleep mode locked } // deep sleep mode will be restored to their previous state }  \n@endcode"},"sortText":"409f2ea4DeepSleepLock","filterText":"DeepSleepLock","insertText":"mbed::DeepSleepLock","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mbed::DeepSleepLock"}},{"label":"•mbed::DirHandle","kind":7,"documentation":{"kind":"markdown","value":"From `\"DirHandle.h\"`  \nRepresents a directory stream. An opendir function returns objects of this type. The core functions are read and seek,  \nbut only a subset needs to be provided.  \nIf a FileSystemLike class defines the opendir method, then you can access the directories of an object of that type by either:  \n@code DIR \\*d = opendir(\"/example/directory\");  \n@endcode or  \n@code DIR \\*d = opendir(\"/example\");  \n@endcode to open the root of the file system.  \nThe root directory is considered to contain all FileHandle and FileSystem objects, so the DIR pointer returned by opendir(\"/\") reflects this.  \n@note to create a directory, @see Dir  \n@note Synchronization level: Set by subclass"},"sortText":"409f2ea4DirHandle","filterText":"DirHandle","insertText":"mbed::DirHandle","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mbed::DirHandle"}},{"label":"•std::deca","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`"},"sortText":"409f2ea4deca","filterText":"deca","insertText":"std::deca","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::deca"}},{"label":"•std::decay\u003ctypename _Tp\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \ndecay"},"sortText":"409f2ea4decay","filterText":"decay","insertText":"std::decay\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::decay\u003c${1:typename _Tp}\u003e"}},{"label":"•std::decay_t\u003ctypename _Tp\u003e","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nAlias template for decay"},"sortText":"409f2ea4decay_t","filterText":"decay_t","insertText":"std::decay_t\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::decay_t\u003c${1:typename _Tp}\u003e"}},{"label":"•std::deci","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`"},"sortText":"409f2ea4deci","filterText":"deci","insertText":"std::deci","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::deci"}},{"label":"•std::declare_no_pointers(char *, size_t)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`"},"sortText":"409f2ea4declare_no_pointers","filterText":"declare_no_pointers","insertText":"std::declare_no_pointers(${1:char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::declare_no_pointers(${1:char *}, ${2:size_t})"}},{"label":"•std::declare_reachable(void *)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`"},"sortText":"409f2ea4declare_reachable","filterText":"declare_reachable","insertText":"std::declare_reachable(${1:void *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::declare_reachable(${1:void *})"}},{"label":"•std::declval\u003ctypename _Tp\u003e()","kind":3,"detail":"typename add_rvalue_reference\u003c_Tp\u003e::type","documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \n@brief Utility to simplify expressions used in unevaluated operands  \n@ingroup utilities"},"sortText":"409f2ea4declval","filterText":"declval","insertText":"std::declval\u003c${1:typename _Tp}\u003e()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::declval\u003c${1:typename _Tp}\u003e()"}},{"label":"•std::denorm_absent","kind":20,"detail":"std::float_denorm_style","documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \nThe type does not allow denormalized values."},"sortText":"409f2ea4denorm_absent","filterText":"denorm_absent","insertText":"std::denorm_absent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::denorm_absent"}},{"label":"•std::denorm_indeterminate","kind":20,"detail":"std::float_denorm_style","documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \nIndeterminate at compile time whether denormalized values are allowed."},"sortText":"409f2ea4denorm_indeterminate","filterText":"denorm_indeterminate","insertText":"std::denorm_indeterminate","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::denorm_indeterminate"}},{"label":"•std::denorm_present","kind":20,"detail":"std::float_denorm_style","documentation":{"kind":"markdown","value":"From `\u003climits\u003e`  \nThe type allows denormalized values."},"sortText":"409f2ea4denorm_present","filterText":"denorm_present","insertText":"std::denorm_present","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::denorm_present"}},{"label":"•std::domain_error","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstdexcept\u003e`  \nThrown by the library, or by you, to report domain errors (domain in the mathematical sense)."},"sortText":"409f2ea4domain_error","filterText":"domain_error","insertText":"std::domain_error","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::domain_error"}},{"label":"•std::chrono::duration\u003ctypename _Rep, typename _Period\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`  \nduration"},"sortText":"409f2ea4duration","filterText":"duration","insertText":"std::chrono::duration\u003c${1:typename _Rep}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::chrono::duration\u003c${1:typename _Rep}\u003e"}},{"label":"•std::chrono::duration_cast\u003ctypename _ToDur\u003e(const duration\u003c_Rep, _Period\u003e \u0026__d)","kind":3,"detail":"typename enable_if\u003c__is_duration\u003c_ToDur\u003e::value, _ToDur\u003e::type","documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`  \nduration_cast"},"sortText":"409f2ea4duration_cast","filterText":"duration_cast","insertText":"std::chrono::duration_cast\u003c${1:typename _ToDur}\u003e(${2:const duration\u003c_Rep, _Period\u003e \u0026__d})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::chrono::duration_cast\u003c${1:typename _ToDur}\u003e(${2:const duration\u003c_Rep, _Period\u003e \u0026__d})"}},{"label":"•std::chrono::duration_values\u003ctypename _Rep\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`  \nduration_values"},"sortText":"409f2ea4duration_values","filterText":"duration_values","insertText":"std::chrono::duration_values\u003c${1:typename _Rep}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::chrono::duration_values\u003c${1:typename _Rep}\u003e"}},{"label":"•datetime_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"pico/types.h\"`  \n\\\\struct datetime_t  \n\\\\ingroup util_datetime  \n\\\\brief Structure containing date and time information  \nWhen setting an RTC alarm, set a field to -1 tells the RTC to not match on this field"},"sortText":"40a4b801datetime_t","filterText":"datetime_t","insertText":"datetime_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"datetime_t"}},{"label":"•std::div","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bdiv","filterText":"div","insertText":"std::div","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::div"}},{"label":"•std::div_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bdiv_t","filterText":"div_t","insertText":"std::div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::div_t"}},{"label":"•std::double_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`  \ntypes"},"sortText":"40a8609bdouble_t","filterText":"double_t","insertText":"std::double_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::double_t"}},{"label":"•mstd::data(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40a94eb8data","filterText":"data","insertText":"mstd::data($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mstd::data($0)"}},{"label":"•std::dec(ios_base \u0026__base)","kind":3,"detail":"ios_base \u0026","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \n[27.4.5.3] basefield manipulators Calls base.setf(ios_base::dec, ios_base::basefield)."},"sortText":"40a94eb8dec","filterText":"dec","insertText":"std::dec(${1:ios_base \u0026__base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::dec(${1:ios_base \u0026__base})"}},{"label":"•std::default_delete\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \nPrimary template of default_delete, used by unique_ptr"},"sortText":"40a94eb8default_delete","filterText":"default_delete","insertText":"std::default_delete\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::default_delete\u003c${1:typename _Tp}\u003e"}},{"label":"•std::defaultfloat(ios_base \u0026__base)","kind":3,"detail":"ios_base \u0026","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nCalls @c base.unsetf(ios_base::floatfield)"},"sortText":"40a94eb8defaultfloat","filterText":"defaultfloat","insertText":"std::defaultfloat(${1:ios_base \u0026__base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::defaultfloat(${1:ios_base \u0026__base})"}},{"label":"•std::defer_lock","kind":6,"detail":"const defer_lock_t","documentation":{"kind":"markdown","value":"From `\u003cmutex\u003e`  \nTag used to prevent a scoped lock from acquiring ownership of a mutex."},"sortText":"40a94eb8defer_lock","filterText":"defer_lock","insertText":"std::defer_lock","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::defer_lock"}},{"label":"•std::defer_lock_t","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cmutex\u003e`  \nDo not acquire ownership of the mutex."},"sortText":"40a94eb8defer_lock_t","filterText":"defer_lock_t","insertText":"std::defer_lock_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::defer_lock_t"}},{"label":"•mstd::destroy(ForwardIterator first, ForwardIterator last)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mstd_memory\"`"},"sortText":"40a94eb8destroy","filterText":"destroy","insertText":"mstd::destroy(${1:ForwardIterator first}, ${2:ForwardIterator last})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mstd::destroy(${1:ForwardIterator first}, ${2:ForwardIterator last})"}},{"label":"•mstd::destroy_at(T *location)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mstd_memory\"`  \n[specialized.destroy] (C++17)"},"sortText":"40a94eb8destroy_at","filterText":"destroy_at","insertText":"mstd::destroy_at(${1:T *location})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mstd::destroy_at(${1:T *location})"}},{"label":"•mstd::destroy_n(ForwardIterator first, Size n)","kind":3,"detail":"ForwardIterator","documentation":{"kind":"markdown","value":"From `\"mstd_memory\"`"},"sortText":"40a94eb8destroy_n","filterText":"destroy_n","insertText":"mstd::destroy_n(${1:ForwardIterator first}, ${2:Size n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mstd::destroy_n(${1:ForwardIterator first}, ${2:Size n})"}},{"label":"•mstd::experimental::impl::detector\u003cclass Default, class Void, template\u003c...\u003e class Op, class Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8detector","filterText":"detector","insertText":"mstd::experimental::impl::detector\u003c${1:class Default}, ${2:class Void}, ${3:template\u003c...\u003e class Op}, ${4:class Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mstd::experimental::impl::detector\u003c${1:class Default}, ${2:class Void}, ${3:template\u003c...\u003e class Op}, ${4:class Args}\u003e"}},{"label":"•mstd::disjunction\u003cclass\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8disjunction","filterText":"disjunction","insertText":"mstd::disjunction\u003c${1:class}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"mstd::disjunction\u003c${1:class}\u003e"}},{"label":"•std::distance(_InputIterator __first, _InputIterator __last)","kind":3,"detail":"typename iterator_traits\u003c_InputIterator\u003e::difference_type","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief A generalization of pointer arithmetic.  \n@param \\_\\_first An input iterator.  \n@param \\_\\_last An input iterator.  \n@return The distance between them.  \nReturns @c n such that \\_\\_first + n == \\_\\_last. This requires that @p \\_\\_last must be reachable from @p \\_\\_first. Note that @c n may be negative.  \nFor random access iterators, this uses their @c + and @c - operations and are constant time. For other %iterator classes they are linear time."},"sortText":"40a94eb8distance","filterText":"distance","insertText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":5}},"newText":"std::distance(${1:_InputIterator __first}, ${2:_InputIterator __last})"}}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":101,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1667

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'de'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":102,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1668

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'del'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":103,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2077

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'dela'; did you mean 'delay'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:103:6:\nnote: 'delay' declared here"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":104,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1685

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":105,"result":[],"jsonrpc":"2.0"}
<<<
20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":265}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":266},"contentChanges":[{"range":{"start":{"line":12,"character":9},"end":{"line":12,"character":9}},"rangeLength":0,"text":"()"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":104}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":105}}Content-Length: 222

{"jsonrpc":"2.0","id":106,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 330

{"jsonrpc":"2.0","id":107,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":10},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}Content-Length: 325

{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":10}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":266}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":267},"contentChanges":[{"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":10}},"rangeLength":0,"text":"1"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":106}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":108}}Content-Length: 222

{"jsonrpc":"2.0","id":109,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":268},"contentChanges":[{"range":{"start":{"line":12,"character":11},"end":{"line":12,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":109}}Content-Length: 222

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":107}}Content-Length: 306

{"jsonrpc":"2.0","id":111,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":12},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":269},"contentChanges":[{"range":{"start":{"line":12,"character":12},"end":{"line":12,"character":12}},"rangeLength":0,"text":"0"}]}}Content-Length
>>>
Content-Length: 601

{"id":106,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2097

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'delay'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:103:6:\nnote: candidate function not viable: requires 1 argument, but 0 were provided"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 183

{"id":107,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 38

{"id":108,"result":[],"jsonrpc":"2.0"}Content-Length: 601

{"id":109,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1685

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 1685

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":110,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 183

{"id":111,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":110}}Content-Length: 222

{"jsonrpc":"2.0","id":112,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":111}}Content-Length: 306

{"jsonrpc":"2.0","id":113,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":13},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 325

{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":12,"character":13},"end":{"line":12,"character":13}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":269}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":270},"contentChanges":[{"range":{"start":{"line":12,"character":12},"end":{"line":12,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":112}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":114}}Content-Length: 222

{"jsonrpc":"2.0","id":115,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":113}}Content-Length: 306

{"jsonrpc":"2.0","id":116,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":12},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":271},"contentChanges":[{"range":{"start":{"line":12,"character":11},"end":{"line":12,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":115}}Content-Length: 222

{"jsonrpc":"2.0","id":117,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":116}}Content-Length: 306

{"jsonrpc":"2.0","id":118,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":11},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":272},"contentChanges":[{"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","para
>>>
Content-Length: 1685

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":112,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 183

{"id":113,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 38

{"id":114,"result":[],"jsonrpc":"2.0"}Content-Length: 1685

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":115,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 183

{"id":116,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 601

{"id":117,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1685

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 183

{"id":118,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
ms":{"id":117}}Content-Length: 222

{"jsonrpc":"2.0","id":119,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":118}}Content-Length: 306

{"jsonrpc":"2.0","id":120,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":10},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":273},"contentChanges":[{"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":10}},"rangeLength":0,"text":"2"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":119}}Content-Length: 222

{"jsonrpc":"2.0","id":121,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":274},"contentChanges":[{"range":{"start":{"line":12,"character":11},"end":{"line":12,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":121}}Content-Length: 222

{"jsonrpc":"2.0","id":122,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":120}}Content-Length: 306

{"jsonrpc":"2.0","id":123,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":12},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":275},"contentChanges":[{"range":{"start":{"line":12,"character":12},"end":{"line":12,"character":12}},"rangeLength":0,"text":"0"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":122}}Content-Length: 222

{"jsonrpc":"2.0","id":124,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":123}}Content-Length: 306

{"jsonrpc":"2.0","id":125,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":13},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 325

{"jsonrpc":"2.0","id":126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":12,"character":13},"end":{"line":12,"character":13}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData
>>>
Content-Length: 601

{"id":119,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2097

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'delay'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:103:6:\nnote: candidate function not viable: requires 1 argument, but 0 were provided"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 183

{"id":120,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 601

{"id":121,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1685

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":122,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1685

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 183

{"id":123,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 1685

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"},{"range":{"start":{"line":13,"character":2},"end":{"line":13,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":124,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 183

{"id":125,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 38

{"id":126,"result":[],"jsonrpc":"2.0"}
<<<
/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":275}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":124}}Content-Length: 222

{"jsonrpc":"2.0","id":127,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":125}}Content-Length: 306

{"jsonrpc":"2.0","id":128,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":14},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 325

{"jsonrpc":"2.0","id":129,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":12,"character":14},"end":{"line":12,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":126}}Content-Length: 325

{"jsonrpc":"2.0","id":130,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":12,"character":14},"end":{"line":12,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":129}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":276},"contentChanges":[{"range":{"start":{"line":12,"character":14},"end":{"line":12,"character":14}},"rangeLength":0,"text":";"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":127}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":130}}Content-Length: 222

{"jsonrpc":"2.0","id":131,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":128}}Content-Length: 306

{"jsonrpc":"2.0","id":132,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":15},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":276}}}Content-Length: 325

{"jsonrpc":"2.0","id":133,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":12,"character":15},"end":{"line":12,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 261

{"jsonrpc":"2.0","id":134,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":9}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":132}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":131}}Content-Length: 222

{"jsonrpc":"2.0","id":135,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:
>>>
Content-Length: 601

{"id":127,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 93

{"id":128,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 38

{"id":129,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":130,"result":[],"jsonrpc":"2.0"}Content-Length: 601

{"id":131,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1485

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"}]},"jsonrpc":"2.0"}Content-Length: 93

{"id":132,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 38

{"id":133,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":134,"result":[],"jsonrpc":"2.0"}
<<<
///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 1391

{"jsonrpc":"2.0","id":136,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call","severity":1,"code":"ovl_unresolvable","source":"clang"}]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":133}}
>>>
Content-Length: 601

{"id":135,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":136,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 1391

{"jsonrpc":"2.0","id":137,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call","severity":1,"code":"ovl_unresolvable","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":137,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 1391

{"jsonrpc":"2.0","id":138,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call","severity":1,"code":"ovl_unresolvable","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":138,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":277},"contentChanges":[{"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"rangeLength":0,"text":"()"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":139,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 1701

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'pinMode'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":139,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":140,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":10},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 183

{"id":140,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":141,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":141,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":278},"contentChanges":[{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":10}},"rangeLength":0,"text":"L"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":142,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 595

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'L'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":142,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":143,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":11},"context":{"triggerKind":1}}}
>>>
Content-Length: 30540

{"id":143,"result":{"isIncomplete":true,"items":[{"label":" long","kind":14,"sortText":"3f000000long","filterText":"long","insertText":"long","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"long"}},{"label":" loop()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3f13a2a3loop","filterText":"loop","insertText":"loop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"loop()"}},{"label":"•LookaheadMode","kind":13,"documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`  \nThis enumeration provides the lookahead options for parseInt(), parseFloat() The rules set out here are used until either the first valid character is found or a time out occurs due to lack of input."},"sortText":"3fab843aLookaheadMode","filterText":"LookaheadMode","insertText":"LookaheadMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"LookaheadMode"}},{"label":"•LED2","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68LED2","filterText":"LED2","insertText":"LED2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"LED2"}},{"label":"•LED3","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68LED3","filterText":"LED3","insertText":"LED3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"LED3"}},{"label":"•LEDB","kind":6,"detail":"NinaPin","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"405d8e68LEDB","filterText":"LEDB","insertText":"LEDB","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"LEDB"}},{"label":"•LEDG","kind":6,"detail":"NinaPin","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"405d8e68LEDG","filterText":"LEDG","insertText":"LEDG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"LEDG"}},{"label":"•LEDR","kind":6,"detail":"NinaPin","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"405d8e68LEDR","filterText":"LEDR","insertText":"LEDR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"LEDR"}},{"label":"•LOW","kind":20,"detail":"PinStatus","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68LOW","filterText":"LOW","insertText":"LOW","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"LOW"}},{"label":"•ltoa(long value, char *string, int radix)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"api/itoa.h\"`"},"sortText":"4068a03fltoa","filterText":"ltoa","insertText":"ltoa(${1:long value}, ${2:char *string}, ${3:int radix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"ltoa(${1:long value}, ${2:char *string}, ${3:int radix})"}},{"label":" labs","kind":18,"sortText":"406c52ealabs","filterText":"labs","insertText":"labs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"labs"}},{"label":" ldexp","kind":18,"sortText":"406c52ealdexp","filterText":"ldexp","insertText":"ldexp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"ldexp"}},{"label":" ldiv","kind":18,"sortText":"406c52ealdiv","filterText":"ldiv","insertText":"ldiv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"ldiv"}},{"label":" lgamma","kind":18,"sortText":"406c52ealgamma","filterText":"lgamma","insertText":"lgamma","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lgamma"}},{"label":" llrint","kind":18,"sortText":"406c52eallrint","filterText":"llrint","insertText":"llrint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"llrint"}},{"label":" llround","kind":18,"sortText":"406c52eallround","filterText":"llround","insertText":"llround","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"llround"}},{"label":" log","kind":18,"sortText":"406c52ealog","filterText":"log","insertText":"log","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"log"}},{"label":" log10","kind":18,"sortText":"406c52ealog10","filterText":"log10","insertText":"log10","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"log10"}},{"label":" log1p","kind":18,"sortText":"406c52ealog1p","filterText":"log1p","insertText":"log1p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"log1p"}},{"label":" log2","kind":18,"sortText":"406c52ealog2","filterText":"log2","insertText":"log2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"log2"}},{"label":" logb","kind":18,"sortText":"406c52ealogb","filterText":"logb","insertText":"logb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"logb"}},{"label":" lrint","kind":18,"sortText":"406c52ealrint","filterText":"lrint","insertText":"lrint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lrint"}},{"label":" lround","kind":18,"sortText":"406c52ealround","filterText":"lround","insertText":"lround","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lround"}},{"label":" locale_t","kind":8,"sortText":"4071b066locale_t","filterText":"locale_t","insertText":"locale_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"locale_t"}},{"label":" l64a(long __input)","kind":3,"detail":"char *","sortText":"40791bfcl64a","filterText":"l64a","insertText":"l64a(${1:long __input})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"l64a(${1:long __input})"}},{"label":" labs(long)","kind":3,"detail":"long","sortText":"40791bfclabs","filterText":"labs","insertText":"labs(${1:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"labs(${1:long})"}},{"label":" lcong48(unsigned short *)","kind":3,"detail":"void","sortText":"40791bfclcong48","filterText":"lcong48","insertText":"lcong48(${1:unsigned short *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lcong48(${1:unsigned short *})"}},{"label":" lconv","kind":22,"sortText":"40791bfclconv","filterText":"lconv","insertText":"lconv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lconv"}},{"label":" ldexpf(float, int)","kind":3,"detail":"float","sortText":"40791bfcldexpf","filterText":"ldexpf","insertText":"ldexpf(${1:float}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"ldexpf(${1:float}, ${2:int})"}},{"label":" ldiv(long __numer, long __denom)","kind":3,"detail":"ldiv_t","sortText":"40791bfcldiv","filterText":"ldiv","insertText":"ldiv(${1:long __numer}, ${2:long __denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"ldiv(${1:long __numer}, ${2:long __denom})"}},{"label":" ldiv_t","kind":8,"sortText":"40791bfcldiv_t","filterText":"ldiv_t","insertText":"ldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"ldiv_t"}},{"label":" lgammaf(float)","kind":3,"detail":"float","sortText":"40791bfclgammaf","filterText":"lgammaf","insertText":"lgammaf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lgammaf(${1:float})"}},{"label":" lgammal(long double)","kind":3,"detail":"long double","sortText":"40791bfclgammal","filterText":"lgammal","insertText":"lgammal(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lgammal(${1:long double})"}},{"label":" llabs(long long)","kind":3,"detail":"long long","sortText":"40791bfcllabs","filterText":"llabs","insertText":"llabs(${1:long long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"llabs(${1:long long})"}},{"label":" lldiv(long long __numer, long long __denom)","kind":3,"detail":"lldiv_t","sortText":"40791bfclldiv","filterText":"lldiv","insertText":"lldiv(${1:long long __numer}, ${2:long long __denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lldiv(${1:long long __numer}, ${2:long long __denom})"}},{"label":" lldiv_t","kind":8,"sortText":"40791bfclldiv_t","filterText":"lldiv_t","insertText":"lldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lldiv_t"}},{"label":" llrint(double)","kind":3,"detail":"long long","sortText":"40791bfcllrint","filterText":"llrint","insertText":"llrint(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"llrint(${1:double})"}},{"label":" llrintl(long double)","kind":3,"detail":"long long","sortText":"40791bfcllrintl","filterText":"llrintl","insertText":"llrintl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"llrintl(${1:long double})"}},{"label":" localeconv()","kind":3,"detail":"struct lconv *","sortText":"40791bfclocaleconv","filterText":"localeconv","insertText":"localeconv()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"localeconv()"}},{"label":" localtime(const time_t *_timer)","kind":3,"detail":"struct tm *","sortText":"40791bfclocaltime","filterText":"localtime","insertText":"localtime(${1:const time_t *_timer})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"localtime(${1:const time_t *_timer})"}},{"label":" localtime_r(const time_t *, struct tm *)","kind":3,"detail":"struct tm *","sortText":"40791bfclocaltime_r","filterText":"localtime_r","insertText":"localtime_r(${1:const time_t *}, ${2:struct tm *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"localtime_r(${1:const time_t *}, ${2:struct tm *})"}},{"label":" log(double)","kind":3,"detail":"double","sortText":"40791bfclog","filterText":"log","insertText":"log(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"log(${1:double})"}},{"label":" log10(double)","kind":3,"detail":"double","sortText":"40791bfclog10","filterText":"log10","insertText":"log10(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"log10(${1:double})"}},{"label":" log1pl(long double)","kind":3,"detail":"long double","sortText":"40791bfclog1pl","filterText":"log1pl","insertText":"log1pl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"log1pl(${1:long double})"}},{"label":" log2f(float)","kind":3,"detail":"float","sortText":"40791bfclog2f","filterText":"log2f","insertText":"log2f(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"log2f(${1:float})"}},{"label":" logb(double)","kind":3,"detail":"double","sortText":"40791bfclogb","filterText":"logb","insertText":"logb(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"logb(${1:double})"}},{"label":" logbf(float)","kind":3,"detail":"float","sortText":"40791bfclogbf","filterText":"logbf","insertText":"logbf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"logbf(${1:float})"}},{"label":" logbl(long double)","kind":3,"detail":"long double","sortText":"40791bfclogbl","filterText":"logbl","insertText":"logbl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"logbl(${1:long double})"}},{"label":" logl(long double)","kind":3,"detail":"long double","sortText":"40791bfclogl","filterText":"logl","insertText":"logl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"logl(${1:long double})"}},{"label":" lrand48()","kind":3,"detail":"long","sortText":"40791bfclrand48","filterText":"lrand48","insertText":"lrand48()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lrand48()"}},{"label":" lround(double)","kind":3,"detail":"long","sortText":"40791bfclround","filterText":"lround","insertText":"lround(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lround(${1:double})"}},{"label":" lroundf(float)","kind":3,"detail":"long","sortText":"40791bfclroundf","filterText":"lroundf","insertText":"lroundf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lroundf(${1:float})"}},{"label":"•lseek(int fildes, off_t offset, int whence)","kind":3,"detail":"off_t","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfclseek","filterText":"lseek","insertText":"lseek(${1:int fildes}, ${2:off_t offset}, ${3:int whence})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"lseek(${1:int fildes}, ${2:off_t offset}, ${3:int whence})"}},{"label":" LEDBLUE","kind":1,"sortText":"40800000LEDBLUE","filterText":"LEDBLUE","insertText":"LEDBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"LEDBLUE"}},{"label":"•std::ldexp(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaldexp","filterText":"ldexp","insertText":"std::ldexp($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::ldexp($0)"}},{"label":"•std::lgamma(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalgamma","filterText":"lgamma","insertText":"std::lgamma($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lgamma($0)"}},{"label":"•std::llrint(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aallrint","filterText":"llrint","insertText":"std::llrint($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::llrint($0)"}},{"label":"•std::llround(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aallround","filterText":"llround","insertText":"std::llround($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::llround($0)"}},{"label":"•std::log(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalog","filterText":"log","insertText":"std::log($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::log($0)"}},{"label":"•std::log10(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalog10","filterText":"log10","insertText":"std::log10($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::log10($0)"}},{"label":"•std::log1p(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalog1p","filterText":"log1p","insertText":"std::log1p($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::log1p($0)"}},{"label":"•std::log2(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalog2","filterText":"log2","insertText":"std::log2($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::log2($0)"}},{"label":"•std::logb(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalogb","filterText":"logb","insertText":"std::logb($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::logb($0)"}},{"label":"•std::lrint(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalrint","filterText":"lrint","insertText":"std::lrint($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lrint($0)"}},{"label":"•std::lround(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalround","filterText":"lround","insertText":"std::lround($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lround($0)"}},{"label":"•LinkedListBase","kind":7,"documentation":{"kind":"markdown","value":"From `\"LinkedListBase.h\"`  \n\\\\defgroup drivers_LinkedListBase LinkedListBase class  \n\\\\ingroup drivers-internal-api-usb  \n@{"},"sortText":"40972137LinkedListBase","filterText":"LinkedListBase","insertText":"LinkedListBase","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"LinkedListBase"}},{"label":"•std::length_error","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstdexcept\u003e`  \nThrown when an object is constructed that would exceed its maximum permitted size (e.g., a basic_string instance)."},"sortText":"409f2ea4length_error","filterText":"length_error","insertText":"std::length_error","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::length_error"}},{"label":"•std::lock(_L1 \u0026__l1, _L2 \u0026__l2, _L3 \u0026__l3...)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003cmutex\u003e`  \n@brief Generic lock.  \n@param \\_\\_l1 Meets Mutex requirements (try_lock() may throw).  \n@param \\_\\_l2 Meets Mutex requirements (try_lock() may throw).  \n@param \\_\\_l3 Meets Mutex requirements (try_lock() may throw).  \n@throw An exception thrown by an argument's lock() or try_lock() member.  \n@post All arguments are locked.  \nAll arguments are locked via a sequence of calls to lock(), try_lock() and unlock(). If the call exits via an exception any locks that were obtained will be released."},"sortText":"409f2ea4lock","filterText":"lock","insertText":"std::lock(${1:_L1 \u0026__l1}, ${2:_L2 \u0026__l2}, ${3:_L3 \u0026__l3...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lock(${1:_L1 \u0026__l1}, ${2:_L2 \u0026__l2}, ${3:_L3 \u0026__l3...})"}},{"label":"•std::labs","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609blabs","filterText":"labs","insertText":"std::labs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::labs"}},{"label":"•std::ldexp","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bldexp","filterText":"ldexp","insertText":"std::ldexp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::ldexp"}},{"label":"•std::ldiv","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bldiv","filterText":"ldiv","insertText":"std::ldiv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::ldiv"}},{"label":"•std::ldiv_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bldiv_t","filterText":"ldiv_t","insertText":"std::ldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::ldiv_t"}},{"label":"•std::lgamma","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blgamma","filterText":"lgamma","insertText":"std::lgamma","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lgamma"}},{"label":"•std::lgammaf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blgammaf","filterText":"lgammaf","insertText":"std::lgammaf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lgammaf"}},{"label":"•std::lgammal","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blgammal","filterText":"lgammal","insertText":"std::lgammal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lgammal"}},{"label":"•std::llabs","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bllabs","filterText":"llabs","insertText":"std::llabs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::llabs"}},{"label":"•std::lldiv","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609blldiv","filterText":"lldiv","insertText":"std::lldiv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lldiv"}},{"label":"•std::lldiv_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609blldiv_t","filterText":"lldiv_t","insertText":"std::lldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lldiv_t"}},{"label":"•std::llrintf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bllrintf","filterText":"llrintf","insertText":"std::llrintf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::llrintf"}},{"label":"•std::llrintl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bllrintl","filterText":"llrintl","insertText":"std::llrintl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::llrintl"}},{"label":"•std::llround","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bllround","filterText":"llround","insertText":"std::llround","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::llround"}},{"label":"•std::llroundf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bllroundf","filterText":"llroundf","insertText":"std::llroundf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::llroundf"}},{"label":"•std::llroundl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bllroundl","filterText":"llroundl","insertText":"std::llroundl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::llroundl"}},{"label":"•std::log","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog","filterText":"log","insertText":"std::log","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::log"}},{"label":"•std::log10","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog10","filterText":"log10","insertText":"std::log10","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::log10"}},{"label":"•std::log1p","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog1p","filterText":"log1p","insertText":"std::log1p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::log1p"}},{"label":"•std::log1pf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog1pf","filterText":"log1pf","insertText":"std::log1pf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::log1pf"}},{"label":"•std::log1pl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog1pl","filterText":"log1pl","insertText":"std::log1pl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::log1pl"}},{"label":"•std::log2","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog2","filterText":"log2","insertText":"std::log2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::log2"}},{"label":"•std::logb","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blogb","filterText":"logb","insertText":"std::logb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::logb"}},{"label":"•std::lrint","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blrint","filterText":"lrint","insertText":"std::lrint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lrint"}},{"label":"•std::lrintf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blrintf","filterText":"lrintf","insertText":"std::lrintf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lrintf"}},{"label":"•std::lrintl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blrintl","filterText":"lrintl","insertText":"std::lrintl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lrintl"}},{"label":"•std::lround","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blround","filterText":"lround","insertText":"std::lround","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lround"}},{"label":"•std::lroundf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blroundf","filterText":"lroundf","insertText":"std::lroundf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lroundf"}},{"label":"•std::lroundl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blroundl","filterText":"lroundl","insertText":"std::lroundl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"std::lroundl"}},{"label":"•mstd::launder(T *p)","kind":3,"detail":"T *","documentation":{"kind":"markdown","value":"From `\"mstd_new\"`"},"sortText":"40a94eb8launder","filterText":"launder","insertText":"mstd::launder(${1:T *p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":11}},"newText":"mstd::launder(${1:T *p})"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":279},"contentChanges":[{"range":{"start":{"line":7,"character":11},"end":{"line":7,"character":11}},"rangeLength":0,"text":"E"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":144,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":144,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":280},"contentChanges":[{"range":{"start":{"line":7,"character":12},"end":{"line":7,"character":12}},"rangeLength":0,"text":"D"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":144}}Content-Length: 222

{"jsonrpc":"2.0","id":145,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 596

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LE'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":145,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":146,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":13},"context":{"triggerKind":3}}}
>>>
Content-Length: 597

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"}]},"jsonrpc":"2.0"}Content-Length: 11145

{"id":146,"result":{"isIncomplete":false,"items":[{"label":"•LED1","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68LED1","filterText":"LED1","insertText":"LED1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"LED1"}},{"label":"•LED2","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68LED2","filterText":"LED2","insertText":"LED2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"LED2"}},{"label":"•LED3","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68LED3","filterText":"LED3","insertText":"LED3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"LED3"}},{"label":"•LED4","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68LED4","filterText":"LED4","insertText":"LED4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"LED4"}},{"label":"•LEDB","kind":6,"detail":"NinaPin","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"405d8e68LEDB","filterText":"LEDB","insertText":"LEDB","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"LEDB"}},{"label":"•LEDG","kind":6,"detail":"NinaPin","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"405d8e68LEDG","filterText":"LEDG","insertText":"LEDG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"LEDG"}},{"label":"•LEDR","kind":6,"detail":"NinaPin","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"405d8e68LEDR","filterText":"LEDR","insertText":"LEDR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"LEDR"}},{"label":" LEDBLUE","kind":1,"sortText":"40800000LEDBLUE","filterText":"LEDBLUE","insertText":"LEDBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"LEDBLUE"}},{"label":"•LED_BUILTIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40d1050aLED_BUILTIN","filterText":"LED_BUILTIN","insertText":"LED_BUILTIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"LED_BUILTIN"}},{"label":"•LED1","kind":1,"documentation":{"kind":"markdown","value":"From `\"objects.h\"`"},"sortText":"411ed562LED1","filterText":"LED1","insertText":"LED1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"LED1"}},{"label":"•MBEDTLS_KEY_LENGTH_DES","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"cipher.h\"`  \nKey length, in bits (including parity), for DES keys."},"sortText":"41604ec4MBEDTLS_KEY_LENGTH_DES","filterText":"MBEDTLS_KEY_LENGTH_DES","insertText":"MBEDTLS_KEY_LENGTH_DES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_KEY_LENGTH_DES"}},{"label":"•MBEDTLS_KEY_LENGTH_DES_EDE","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"cipher.h\"`  \nKey length in bits, including parity, for DES in two-key EDE."},"sortText":"41604ec4MBEDTLS_KEY_LENGTH_DES_EDE","filterText":"MBEDTLS_KEY_LENGTH_DES_EDE","insertText":"MBEDTLS_KEY_LENGTH_DES_EDE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_KEY_LENGTH_DES_EDE"}},{"label":"•MBEDTLS_KEY_LENGTH_DES_EDE3","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"cipher.h\"`  \nKey length in bits, including parity, for DES in three-key EDE."},"sortText":"41604ec4MBEDTLS_KEY_LENGTH_DES_EDE3","filterText":"MBEDTLS_KEY_LENGTH_DES_EDE3","insertText":"MBEDTLS_KEY_LENGTH_DES_EDE3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_KEY_LENGTH_DES_EDE3"}},{"label":"•MBEDTLS_ECP_DP_BP256R1","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for 256-bit Brainpool curve."},"sortText":"80000000MBEDTLS_ECP_DP_BP256R1","filterText":"MBEDTLS_ECP_DP_BP256R1","insertText":"MBEDTLS_ECP_DP_BP256R1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_BP256R1"}},{"label":"•MBEDTLS_ECP_DP_BP384R1","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for 384-bit Brainpool curve."},"sortText":"80000000MBEDTLS_ECP_DP_BP384R1","filterText":"MBEDTLS_ECP_DP_BP384R1","insertText":"MBEDTLS_ECP_DP_BP384R1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_BP384R1"}},{"label":"•MBEDTLS_ECP_DP_BP512R1","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for 512-bit Brainpool curve."},"sortText":"80000000MBEDTLS_ECP_DP_BP512R1","filterText":"MBEDTLS_ECP_DP_BP512R1","insertText":"MBEDTLS_ECP_DP_BP512R1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_BP512R1"}},{"label":"•MBEDTLS_ECP_DP_CURVE25519","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for Curve25519."},"sortText":"80000000MBEDTLS_ECP_DP_CURVE25519","filterText":"MBEDTLS_ECP_DP_CURVE25519","insertText":"MBEDTLS_ECP_DP_CURVE25519","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_CURVE25519"}},{"label":"•MBEDTLS_ECP_DP_CURVE448","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for Curve448."},"sortText":"80000000MBEDTLS_ECP_DP_CURVE448","filterText":"MBEDTLS_ECP_DP_CURVE448","insertText":"MBEDTLS_ECP_DP_CURVE448","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_CURVE448"}},{"label":"•MBEDTLS_ECP_DP_SECP192K1","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for 192-bit \"Koblitz\" curve."},"sortText":"80000000MBEDTLS_ECP_DP_SECP192K1","filterText":"MBEDTLS_ECP_DP_SECP192K1","insertText":"MBEDTLS_ECP_DP_SECP192K1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_SECP192K1"}},{"label":"•MBEDTLS_ECP_DP_SECP192R1","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for the 192-bit curve defined by FIPS 186-4 and SEC1."},"sortText":"80000000MBEDTLS_ECP_DP_SECP192R1","filterText":"MBEDTLS_ECP_DP_SECP192R1","insertText":"MBEDTLS_ECP_DP_SECP192R1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_SECP192R1"}},{"label":"•MBEDTLS_ECP_DP_SECP224K1","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for 224-bit \"Koblitz\" curve."},"sortText":"80000000MBEDTLS_ECP_DP_SECP224K1","filterText":"MBEDTLS_ECP_DP_SECP224K1","insertText":"MBEDTLS_ECP_DP_SECP224K1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_SECP224K1"}},{"label":"•MBEDTLS_ECP_DP_SECP224R1","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for the 224-bit curve defined by FIPS 186-4 and SEC1."},"sortText":"80000000MBEDTLS_ECP_DP_SECP224R1","filterText":"MBEDTLS_ECP_DP_SECP224R1","insertText":"MBEDTLS_ECP_DP_SECP224R1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_SECP224R1"}},{"label":"•MBEDTLS_ECP_DP_SECP256K1","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for 256-bit \"Koblitz\" curve."},"sortText":"80000000MBEDTLS_ECP_DP_SECP256K1","filterText":"MBEDTLS_ECP_DP_SECP256K1","insertText":"MBEDTLS_ECP_DP_SECP256K1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_SECP256K1"}},{"label":"•MBEDTLS_ECP_DP_SECP256R1","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for the 256-bit curve defined by FIPS 186-4 and SEC1."},"sortText":"80000000MBEDTLS_ECP_DP_SECP256R1","filterText":"MBEDTLS_ECP_DP_SECP256R1","insertText":"MBEDTLS_ECP_DP_SECP256R1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_SECP256R1"}},{"label":"•MBEDTLS_ECP_DP_SECP384R1","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for the 384-bit curve defined by FIPS 186-4 and SEC1."},"sortText":"80000000MBEDTLS_ECP_DP_SECP384R1","filterText":"MBEDTLS_ECP_DP_SECP384R1","insertText":"MBEDTLS_ECP_DP_SECP384R1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_SECP384R1"}},{"label":"•MBEDTLS_ECP_DP_SECP521R1","kind":20,"detail":"mbedtls_ecp_group_id","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \nDomain parameters for the 521-bit curve defined by FIPS 186-4 and SEC1."},"sortText":"80000000MBEDTLS_ECP_DP_SECP521R1","filterText":"MBEDTLS_ECP_DP_SECP521R1","insertText":"MBEDTLS_ECP_DP_SECP521R1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBEDTLS_ECP_DP_SECP521R1"}},{"label":"•MBED_MODULE_DRIVER_I2C","kind":20,"detail":"_mbed_module_type","documentation":{"kind":"markdown","value":"From `\"mbed_error.h\"`"},"sortText":"80000000MBED_MODULE_DRIVER_I2C","filterText":"MBED_MODULE_DRIVER_I2C","insertText":"MBED_MODULE_DRIVER_I2C","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":13}},"newText":"MBED_MODULE_DRIVER_I2C"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":281},"contentChanges":[{"range":{"start":{"line":7,"character":13},"end":{"line":7,"character":13}},"rangeLength":0,"text":"B"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":147,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":147,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1696

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'pinMode'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":282},"contentChanges":[{"range":{"start":{"line":7,"character":14},"end":{"line":7,"character":14}},"rangeLength":0,"text":"L"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":148,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":148,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LEDBL'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":283},"contentChanges":[{"range":{"start":{"line":7,"character":15},"end":{"line":7,"character":15}},"rangeLength":0,"text":"U"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":149,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":149,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LEDBLU'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":284},"contentChanges":[{"range":{"start":{"line":7,"character":16},"end":{"line":7,"character":16}},"rangeLength":0,"text":"E"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":150,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":150,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1696

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'pinMode'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided"},{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":285},"contentChanges":[{"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":17}},"rangeLength":0,"text":","}]}}Content-Length: 222

{"jsonrpc":"2.0","id":151,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":151,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 385

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":18},"end":{"line":7,"character":19}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":152,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":18},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 183

{"id":152,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":286},"contentChanges":[{"range":{"start":{"line":7,"character":18},"end":{"line":7,"character":18}},"rangeLength":0,"text":" "}]}}Content-Length: 222

{"jsonrpc":"2.0","id":153,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":153,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 385

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":154,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":19},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 183

{"id":154,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 491

{"jsonrpc":"2.0","id":155,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":155,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":286}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":287},"contentChanges":[{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":19}},"rangeLength":0,"text":"O"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":156,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":156,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":157,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":20},"context":{"triggerKind":1}}}
>>>
Content-Length: 595

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'O'"}]},"jsonrpc":"2.0"}Content-Length: 49334

{"id":157,"result":{"isIncomplete":true,"items":[{"label":" operator","kind":14,"sortText":"3f000000operator","filterText":"operator","insertText":"operator","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"operator"}},{"label":" operator!=(…)","kind":3,"detail":"[3 overloads]","sortText":"3ff25827operator!=","filterText":"operator!=","insertText":"operator!=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"operator!=($0)"}},{"label":" operator\u003c(…)","kind":3,"detail":"[3 overloads]","sortText":"3ff25827operator\u003c","filterText":"operator\u003c","insertText":"operator\u003c($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"operator\u003c($0)"}},{"label":" operator\u003c=(…)","kind":3,"detail":"[3 overloads]","sortText":"3ff25827operator\u003c=","filterText":"operator\u003c=","insertText":"operator\u003c=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"operator\u003c=($0)"}},{"label":" operator==(…)","kind":3,"detail":"[3 overloads]","sortText":"3ff25827operator==","filterText":"operator==","insertText":"operator==($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"operator==($0)"}},{"label":" operator\u003e(…)","kind":3,"detail":"[3 overloads]","sortText":"3ff25827operator\u003e","filterText":"operator\u003e","insertText":"operator\u003e($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"operator\u003e($0)"}},{"label":" operator\u003e=(…)","kind":3,"detail":"[3 overloads]","sortText":"3ff25827operator\u003e=","filterText":"operator\u003e=","insertText":"operator\u003e=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"operator\u003e=($0)"}},{"label":" OpenDrain","kind":20,"detail":"PinMode","sortText":"403f858bOpenDrain","filterText":"OpenDrain","insertText":"OpenDrain","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"OpenDrain"}},{"label":" OpenDrainPullUp","kind":20,"detail":"PinMode","sortText":"403f858bOpenDrainPullUp","filterText":"OpenDrainPullUp","insertText":"OpenDrainPullUp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"OpenDrainPullUp"}},{"label":" on_exit(void (*__func)(int, void *), void *__arg)","kind":3,"detail":"int","sortText":"40791bfcon_exit","filterText":"on_exit","insertText":"on_exit(${1:void (*__func)(int, void *)}, ${2:void *__arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"on_exit(${1:void (*__func)(int, void *)}, ${2:void *__arg})"}},{"label":"•operator delete(void *, void *)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003cnew\u003e`  \nDefault placement versions of operator delete."},"sortText":"40791bfcoperator delete","filterText":"operator delete","insertText":"operator delete(${1:void *}, ${2:void *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"operator delete(${1:void *}, ${2:void *})"}},{"label":"•operator delete[](void *, const std::nothrow_t \u0026)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003cnew\u003e`"},"sortText":"40791bfcoperator delete[]","filterText":"operator delete[]","insertText":"operator delete[](${1:void *}, ${2:const std::nothrow_t \u0026})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"operator delete[](${1:void *}, ${2:const std::nothrow_t \u0026})"}},{"label":"•operator new(std::size_t, void *__p)","kind":3,"detail":"void *","documentation":{"kind":"markdown","value":"From `\u003cnew\u003e`  \nDefault placement versions of operator new."},"sortText":"40791bfcoperator new","filterText":"operator new","insertText":"operator new(${1:std::size_t}, ${2:void *__p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"operator new(${1:std::size_t}, ${2:void *__p})"}},{"label":" open(const char *, int, ...)","kind":3,"detail":"int","sortText":"407f2f3bopen","filterText":"open","insertText":"open(${1:const char *}, ${2:int, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"open(${1:const char *}, ${2:int, ...})"}},{"label":" openat(int, const char *, int, ...)","kind":3,"detail":"int","sortText":"407f2f3bopenat","filterText":"openat","insertText":"openat(${1:int}, ${2:const char *}, ${3:int, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"openat(${1:int}, ${2:const char *}, ${3:int, ...})"}},{"label":"•mbed::operator!=(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"Callback.h\"`  \nTest for non-emptiness"},"sortText":"4092d0aaoperator!=","filterText":"operator!=","insertText":"mbed::operator!=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"mbed::operator!=($0)"}},{"label":"•mbed::operator==(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"Callback.h\"`  \nTest for emptiness"},"sortText":"4092d0aaoperator==","filterText":"operator==","insertText":"mbed::operator==($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"mbed::operator==($0)"}},{"label":"•osErrorISR","kind":20,"detail":"osStatus_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nNot allowed in ISR context: the function cannot be called from interrupt service routines."},"sortText":"40972137osErrorISR","filterText":"osErrorISR","insertText":"osErrorISR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osErrorISR"}},{"label":"•osErrorNoMemory","kind":20,"detail":"osStatus_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nSystem is out of memory: it was impossible to allocate or reserve memory for the operation."},"sortText":"40972137osErrorNoMemory","filterText":"osErrorNoMemory","insertText":"osErrorNoMemory","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osErrorNoMemory"}},{"label":"•osErrorTimeout","kind":20,"detail":"osStatus_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nOperation not completed within the timeout period."},"sortText":"40972137osErrorTimeout","filterText":"osErrorTimeout","insertText":"osErrorTimeout","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osErrorTimeout"}},{"label":"•osEventFlagsDelete(osEventFlagsId_t ef_id)","kind":3,"detail":"osStatus_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nDelete an Event Flags object.  \n\\\\param[in] ef_id event flags ID obtained by \\\\ref osEventFlagsNew.  \n\\\\return status code that indicates the execution status of the function."},"sortText":"40972137osEventFlagsDelete","filterText":"osEventFlagsDelete","insertText":"osEventFlagsDelete(${1:osEventFlagsId_t ef_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osEventFlagsDelete(${1:osEventFlagsId_t ef_id})"}},{"label":"•osKernelGetState()","kind":3,"detail":"osKernelState_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nGet the current RTOS Kernel state.  \n\\\\return current RTOS Kernel state."},"sortText":"40972137osKernelGetState","filterText":"osKernelGetState","insertText":"osKernelGetState()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osKernelGetState()"}},{"label":"•osKernelLock()","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nLock the RTOS Kernel scheduler.  \n\\\\return previous lock state (1 - locked, 0 - not locked, error code if negative)."},"sortText":"40972137osKernelLock","filterText":"osKernelLock","insertText":"osKernelLock()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osKernelLock()"}},{"label":"•osKernelLocked","kind":20,"detail":"osKernelState_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nLocked."},"sortText":"40972137osKernelLocked","filterText":"osKernelLocked","insertText":"osKernelLocked","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osKernelLocked"}},{"label":"•osKernelRestoreLock(int32_t lock)","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nRestore the RTOS Kernel scheduler lock state.  \n\\\\param[in] lock lock state obtained by \\\\ref osKernelLock or \\\\ref osKernelUnlock.  \n\\\\return new lock state (1 - locked, 0 - not locked, error code if negative)."},"sortText":"40972137osKernelRestoreLock","filterText":"osKernelRestoreLock","insertText":"osKernelRestoreLock(${1:int32_t lock})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osKernelRestoreLock(${1:int32_t lock})"}},{"label":"•osKernelRunning","kind":20,"detail":"osKernelState_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nRunning."},"sortText":"40972137osKernelRunning","filterText":"osKernelRunning","insertText":"osKernelRunning","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osKernelRunning"}},{"label":"•osMemoryPoolGetName(osMemoryPoolId_t mp_id)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nGet name of a Memory Pool object.  \n\\\\param[in] mp_id memory pool ID obtained by \\\\ref osMemoryPoolNew.  \n\\\\return name as null-terminated string."},"sortText":"40972137osMemoryPoolGetName","filterText":"osMemoryPoolGetName","insertText":"osMemoryPoolGetName(${1:osMemoryPoolId_t mp_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osMemoryPoolGetName(${1:osMemoryPoolId_t mp_id})"}},{"label":"•osMessageQueueGet(osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout)","kind":3,"detail":"osStatus_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nGet a Message from a Queue or timeout if Queue is empty.  \n\\\\param[in] mq_id message queue ID obtained by \\\\ref osMessageQueueNew.  \n\\\\param[out] msg_ptr pointer to buffer for message to get from a queue.  \n\\\\param[out] msg_prio pointer to buffer for message priority or NULL.  \n\\\\param[in] timeout \\\\ref CMSIS_RTOS_TimeOutValue or 0 in case of no time-out.  \n\\\\return status code that indicates the execution status of the function."},"sortText":"40972137osMessageQueueGet","filterText":"osMessageQueueGet","insertText":"osMessageQueueGet(${1:osMessageQueueId_t mq_id}, ${2:void *msg_ptr}, ${3:uint8_t *msg_prio}, ${4:uint32_t timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osMessageQueueGet(${1:osMessageQueueId_t mq_id}, ${2:void *msg_ptr}, ${3:uint8_t *msg_prio}, ${4:uint32_t timeout})"}},{"label":"•osMutexGetName(osMutexId_t mutex_id)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nGet name of a Mutex object.  \n\\\\param[in] mutex_id mutex ID obtained by \\\\ref osMutexNew.  \n\\\\return name as null-terminated string."},"sortText":"40972137osMutexGetName","filterText":"osMutexGetName","insertText":"osMutexGetName(${1:osMutexId_t mutex_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osMutexGetName(${1:osMutexId_t mutex_id})"}},{"label":"•osMutexId_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \n\\\\details Mutex ID identifies the mutex."},"sortText":"40972137osMutexId_t","filterText":"osMutexId_t","insertText":"osMutexId_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osMutexId_t"}},{"label":"•osOK","kind":20,"detail":"osStatus_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nOperation completed successfully."},"sortText":"40972137osOK","filterText":"osOK","insertText":"osOK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osOK"}},{"label":"•osPriorityAboveNormal5","kind":20,"detail":"osPriority_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nPriority: above normal + 5"},"sortText":"40972137osPriorityAboveNormal5","filterText":"osPriorityAboveNormal5","insertText":"osPriorityAboveNormal5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osPriorityAboveNormal5"}},{"label":"•osPriorityAboveNormal6","kind":20,"detail":"osPriority_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nPriority: above normal + 6"},"sortText":"40972137osPriorityAboveNormal6","filterText":"osPriorityAboveNormal6","insertText":"osPriorityAboveNormal6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osPriorityAboveNormal6"}},{"label":"•osPriorityHigh4","kind":20,"detail":"osPriority_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nPriority: high + 4"},"sortText":"40972137osPriorityHigh4","filterText":"osPriorityHigh4","insertText":"osPriorityHigh4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osPriorityHigh4"}},{"label":"•osPriorityNone","kind":20,"detail":"osPriority_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nNo priority (not initialized)."},"sortText":"40972137osPriorityNone","filterText":"osPriorityNone","insertText":"osPriorityNone","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osPriorityNone"}},{"label":"•osPriorityNormal","kind":20,"detail":"osPriority_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nPriority: normal"},"sortText":"40972137osPriorityNormal","filterText":"osPriorityNormal","insertText":"osPriorityNormal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osPriorityNormal"}},{"label":"•osPriorityNormal2","kind":20,"detail":"osPriority_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nPriority: normal + 2"},"sortText":"40972137osPriorityNormal2","filterText":"osPriorityNormal2","insertText":"osPriorityNormal2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osPriorityNormal2"}},{"label":"•osPriorityNormal7","kind":20,"detail":"osPriority_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nPriority: normal + 7"},"sortText":"40972137osPriorityNormal7","filterText":"osPriorityNormal7","insertText":"osPriorityNormal7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osPriorityNormal7"}},{"label":"•osPriorityRealtime1","kind":20,"detail":"osPriority_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nPriority: realtime + 1"},"sortText":"40972137osPriorityRealtime1","filterText":"osPriorityRealtime1","insertText":"osPriorityRealtime1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osPriorityRealtime1"}},{"label":"•osPriorityRealtime3","kind":20,"detail":"osPriority_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nPriority: realtime + 3"},"sortText":"40972137osPriorityRealtime3","filterText":"osPriorityRealtime3","insertText":"osPriorityRealtime3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osPriorityRealtime3"}},{"label":"•osSemaphoreNew(uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr)","kind":3,"detail":"osSemaphoreId_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nCreate and Initialize a Semaphore object.  \n\\\\param[in] max_count maximum number of available tokens.  \n\\\\param[in] initial_count initial number of available tokens.  \n\\\\param[in] attr semaphore attributes; NULL: default values.  \n\\\\return semaphore ID for reference by other functions or NULL in case of error."},"sortText":"40972137osSemaphoreNew","filterText":"osSemaphoreNew","insertText":"osSemaphoreNew(${1:uint32_t max_count}, ${2:uint32_t initial_count}, ${3:const osSemaphoreAttr_t *attr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osSemaphoreNew(${1:uint32_t max_count}, ${2:uint32_t initial_count}, ${3:const osSemaphoreAttr_t *attr})"}},{"label":"•osThreadError","kind":20,"detail":"osThreadState_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nError."},"sortText":"40972137osThreadError","filterText":"osThreadError","insertText":"osThreadError","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osThreadError"}},{"label":"•osThreadExit()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nTerminate execution of current running thread."},"sortText":"40972137osThreadExit","filterText":"osThreadExit","insertText":"osThreadExit()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osThreadExit()"}},{"label":"•osThreadGetCount()","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nGet number of active threads.  \n\\\\return number of active threads."},"sortText":"40972137osThreadGetCount","filterText":"osThreadGetCount","insertText":"osThreadGetCount()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osThreadGetCount()"}},{"label":"•osThreadGetStackSize(osThreadId_t thread_id)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nGet stack size of a thread.  \n\\\\param[in] thread_id thread ID obtained by \\\\ref osThreadNew or \\\\ref osThreadGetId.  \n\\\\return stack size in bytes."},"sortText":"40972137osThreadGetStackSize","filterText":"osThreadGetStackSize","insertText":"osThreadGetStackSize(${1:osThreadId_t thread_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osThreadGetStackSize(${1:osThreadId_t thread_id})"}},{"label":"•osThreadNew(osThreadFunc_t func, void *argument, const osThreadAttr_t *attr)","kind":3,"detail":"osThreadId_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nCreate a thread and add it to Active Threads.  \n\\\\param[in] func thread function.  \n\\\\param[in] argument pointer that is passed to the thread function as start argument.  \n\\\\param[in] attr thread attributes; NULL: default values.  \n\\\\return thread ID for reference by other functions or NULL in case of error."},"sortText":"40972137osThreadNew","filterText":"osThreadNew","insertText":"osThreadNew(${1:osThreadFunc_t func}, ${2:void *argument}, ${3:const osThreadAttr_t *attr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osThreadNew(${1:osThreadFunc_t func}, ${2:void *argument}, ${3:const osThreadAttr_t *attr})"}},{"label":"•osThreadReady","kind":20,"detail":"osThreadState_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nReady."},"sortText":"40972137osThreadReady","filterText":"osThreadReady","insertText":"osThreadReady","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osThreadReady"}},{"label":"•osThreadRunning","kind":20,"detail":"osThreadState_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nRunning."},"sortText":"40972137osThreadRunning","filterText":"osThreadRunning","insertText":"osThreadRunning","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osThreadRunning"}},{"label":"•osThreadSetPriority(osThreadId_t thread_id, osPriority_t priority)","kind":3,"detail":"osStatus_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nChange priority of a thread.  \n\\\\param[in] thread_id thread ID obtained by \\\\ref osThreadNew or \\\\ref osThreadGetId.  \n\\\\param[in] priority new priority value for the thread function.  \n\\\\return status code that indicates the execution status of the function."},"sortText":"40972137osThreadSetPriority","filterText":"osThreadSetPriority","insertText":"osThreadSetPriority(${1:osThreadId_t thread_id}, ${2:osPriority_t priority})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osThreadSetPriority(${1:osThreadId_t thread_id}, ${2:osPriority_t priority})"}},{"label":"•osThreadState_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nThread state."},"sortText":"40972137osThreadState_t","filterText":"osThreadState_t","insertText":"osThreadState_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osThreadState_t"}},{"label":"•osThreadTerminated","kind":20,"detail":"osThreadState_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nTerminated."},"sortText":"40972137osThreadTerminated","filterText":"osThreadTerminated","insertText":"osThreadTerminated","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osThreadTerminated"}},{"label":"•osThreadYield()","kind":3,"detail":"osStatus_t","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nPass control to next thread that is in state \\\\b READY.  \n\\\\return status code that indicates the execution status of the function."},"sortText":"40972137osThreadYield","filterText":"osThreadYield","insertText":"osThreadYield()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osThreadYield()"}},{"label":"•osTimerGetName(osTimerId_t timer_id)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"From `\"cmsis_os2.h\"`  \nGet name of a timer.  \n\\\\param[in] timer_id timer ID obtained by \\\\ref osTimerNew.  \n\\\\return name as null-terminated string."},"sortText":"40972137osTimerGetName","filterText":"osTimerGetName","insertText":"osTimerGetName(${1:osTimerId_t timer_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osTimerGetName(${1:osTimerId_t timer_id})"}},{"label":"•osPoolDef_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"cmsis_os.h\"`"},"sortText":"409c96d9osPoolDef_t","filterText":"osPoolDef_t","insertText":"osPoolDef_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osPoolDef_t"}},{"label":"•osRtxErrorNotify(uint32_t code, void *object_id)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"rtx_os.h\"`  \nOS Error Callback function"},"sortText":"409c96d9osRtxErrorNotify","filterText":"osRtxErrorNotify","insertText":"osRtxErrorNotify(${1:uint32_t code}, ${2:void *object_id})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osRtxErrorNotify(${1:uint32_t code}, ${2:void *object_id})"}},{"label":"•osRtxMemoryPoolMemUsage","kind":6,"detail":"osRtxObjectMemUsage_t","documentation":{"kind":"markdown","value":"From `\"rtx_os.h\"`"},"sortText":"409c96d9osRtxMemoryPoolMemUsage","filterText":"osRtxMemoryPoolMemUsage","insertText":"osRtxMemoryPoolMemUsage","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osRtxMemoryPoolMemUsage"}},{"label":"•osRtxSemaphoreMemUsage","kind":6,"detail":"osRtxObjectMemUsage_t","documentation":{"kind":"markdown","value":"From `\"rtx_os.h\"`"},"sortText":"409c96d9osRtxSemaphoreMemUsage","filterText":"osRtxSemaphoreMemUsage","insertText":"osRtxSemaphoreMemUsage","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osRtxSemaphoreMemUsage"}},{"label":"•osRtxSemaphore_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"rtx_os.h\"`  \nSemaphore Control Block"},"sortText":"409c96d9osRtxSemaphore_t","filterText":"osRtxSemaphore_t","insertText":"osRtxSemaphore_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osRtxSemaphore_t"}},{"label":"•osRtxThread_s","kind":22,"documentation":{"kind":"markdown","value":"From `\"rtx_os.h\"`  \nThread Control Block"},"sortText":"409c96d9osRtxThread_s","filterText":"osRtxThread_s","insertText":"osRtxThread_s","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osRtxThread_s"}},{"label":"•osRtxTimerMemUsage","kind":6,"detail":"osRtxObjectMemUsage_t","documentation":{"kind":"markdown","value":"From `\"rtx_os.h\"`"},"sortText":"409c96d9osRtxTimerMemUsage","filterText":"osRtxTimerMemUsage","insertText":"osRtxTimerMemUsage","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"osRtxTimerMemUsage"}},{"label":"•os_pthread","kind":8,"documentation":{"kind":"markdown","value":"From `\"cmsis_os.h\"`  \nEntry point of a thread."},"sortText":"409c96d9os_pthread","filterText":"os_pthread","insertText":"os_pthread","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"os_pthread"}},{"label":"•os_ptimer","kind":8,"documentation":{"kind":"markdown","value":"From `\"cmsis_os.h\"`  \nEntry point of a timer call back function."},"sortText":"409c96d9os_ptimer","filterText":"os_ptimer","insertText":"os_ptimer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"os_ptimer"}},{"label":"•std::operator!=(const tuple\u003c_TElements...\u003e \u0026__t, const tuple\u003c_UElements...\u003e \u0026__u)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ctuple\u003e`"},"sortText":"409f2ea4operator!=","filterText":"operator!=","insertText":"std::operator!=(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator!=(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})"}},{"label":"•std::operator!=(const array\u003c_Tp, _Nm\u003e \u0026__one, const array\u003c_Tp, _Nm\u003e \u0026__two)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003carray\u003e`"},"sortText":"409f2ea4operator!=","filterText":"operator!=","insertText":"std::operator!=(${1:const array\u003c_Tp, _Nm\u003e \u0026__one}, ${2:const array\u003c_Tp, _Nm\u003e \u0026__two})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator!=(${1:const array\u003c_Tp, _Nm\u003e \u0026__one}, ${2:const array\u003c_Tp, _Nm\u003e \u0026__two})"}},{"label":"•std::chrono_literals::operator\"\"s\u003cchar _Digits\u003e()","kind":3,"detail":"chrono::seconds","documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`"},"sortText":"409f2ea4operator\"\"s","filterText":"operator\"\"s","insertText":"std::chrono_literals::operator\"\"s\u003c${1:char _Digits}\u003e()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::chrono_literals::operator\"\"s\u003c${1:char _Digits}\u003e()"}},{"label":"•std::operator\"\"us(long double __usecs)","kind":3,"detail":"chrono::duration\u003clong double, micro\u003e","documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`"},"sortText":"409f2ea4operator\"\"us","filterText":"operator\"\"us","insertText":"std::operator\"\"us(${1:long double __usecs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\"\"us(${1:long double __usecs})"}},{"label":"•std::chrono::operator%(const duration\u003c_Rep1, _Period1\u003e \u0026__lhs, const duration\u003c_Rep2, _Period2\u003e \u0026__rhs)","kind":3,"detail":"typename common_type\u003cduration\u003c_Rep1, _Period1\u003e, duration\u003c_Rep2, _Period2\u003e\u003e::type","documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`"},"sortText":"409f2ea4operator%","filterText":"operator%","insertText":"std::chrono::operator%(${1:const duration\u003c_Rep1, _Period1\u003e \u0026__lhs}, ${2:const duration\u003c_Rep2, _Period2\u003e \u0026__rhs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::chrono::operator%(${1:const duration\u003c_Rep1, _Period1\u003e \u0026__lhs}, ${2:const duration\u003c_Rep2, _Period2\u003e \u0026__rhs})"}},{"label":"•std::chrono::operator*(const _Rep1 \u0026__s, const duration\u003c_Rep2, _Period\u003e \u0026__d)","kind":3,"detail":"duration\u003ctypename __common_rep_type\u003c_Rep2, _Rep1\u003e::type, _Period\u003e","documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`"},"sortText":"409f2ea4operator*","filterText":"operator*","insertText":"std::chrono::operator*(${1:const _Rep1 \u0026__s}, ${2:const duration\u003c_Rep2, _Period\u003e \u0026__d})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::chrono::operator*(${1:const _Rep1 \u0026__s}, ${2:const duration\u003c_Rep2, _Period\u003e \u0026__d})"}},{"label":"•std::operator\u003c(const tuple\u003c_TElements...\u003e \u0026__t, const tuple\u003c_UElements...\u003e \u0026__u)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ctuple\u003e`"},"sortText":"409f2ea4operator\u003c","filterText":"operator\u003c","insertText":"std::operator\u003c(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003c(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})"}},{"label":"•std::operator\u003c\u003c(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003costream\u003e`  \n@{  \n@brief String inserters  \n@param \\_\\_out An output stream.  \n@param \\_\\_s A character string.  \n@return out  \n@pre @p \\_\\_s must be a non-NULL pointer  \nBehaves like one of the formatted arithmetic inserters described in std::basic_ostream. After constructing a sentry object with good status, this function inserts @c traits::length(\\_\\_s) characters starting at @p \\_\\_s, widened if necessary, followed by any required padding (as determined by [22.2.2.2.2]). @c \\_\\_out.width(0) is then called."},"sortText":"409f2ea4operator\u003c\u003c","filterText":"operator\u003c\u003c","insertText":"std::operator\u003c\u003c($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003c\u003c($0)"}},{"label":"•std::operator\u003c=(const tuple\u003c_TElements...\u003e \u0026__t, const tuple\u003c_UElements...\u003e \u0026__u)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ctuple\u003e`"},"sortText":"409f2ea4operator\u003c=","filterText":"operator\u003c=","insertText":"std::operator\u003c=(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003c=(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})"}},{"label":"•std::chrono::operator==(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`  \ncomparisons"},"sortText":"409f2ea4operator==","filterText":"operator==","insertText":"std::chrono::operator==($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::chrono::operator==($0)"}},{"label":"•std::operator==(const tuple\u003c_TElements...\u003e \u0026__t, const tuple\u003c_UElements...\u003e \u0026__u)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ctuple\u003e`"},"sortText":"409f2ea4operator==","filterText":"operator==","insertText":"std::operator==(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator==(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})"}},{"label":"•std::operator==(const array\u003c_Tp, _Nm\u003e \u0026__one, const array\u003c_Tp, _Nm\u003e \u0026__two)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003carray\u003e`  \nArray comparisons."},"sortText":"409f2ea4operator==","filterText":"operator==","insertText":"std::operator==(${1:const array\u003c_Tp, _Nm\u003e \u0026__one}, ${2:const array\u003c_Tp, _Nm\u003e \u0026__two})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator==(${1:const array\u003c_Tp, _Nm\u003e \u0026__one}, ${2:const array\u003c_Tp, _Nm\u003e \u0026__two})"}},{"label":"•std::operator\u003e(const array\u003c_Tp, _Nm\u003e \u0026__one, const array\u003c_Tp, _Nm\u003e \u0026__two)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003carray\u003e`"},"sortText":"409f2ea4operator\u003e","filterText":"operator\u003e","insertText":"std::operator\u003e(${1:const array\u003c_Tp, _Nm\u003e \u0026__one}, ${2:const array\u003c_Tp, _Nm\u003e \u0026__two})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003e(${1:const array\u003c_Tp, _Nm\u003e \u0026__one}, ${2:const array\u003c_Tp, _Nm\u003e \u0026__two})"}},{"label":"•std::operator\u003e(const tuple\u003c_TElements...\u003e \u0026__t, const tuple\u003c_UElements...\u003e \u0026__u)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ctuple\u003e`"},"sortText":"409f2ea4operator\u003e","filterText":"operator\u003e","insertText":"std::operator\u003e(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003e(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})"}},{"label":"•std::operator\u003e=(const tuple\u003c_TElements...\u003e \u0026__t, const tuple\u003c_UElements...\u003e \u0026__u)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ctuple\u003e`"},"sortText":"409f2ea4operator\u003e=","filterText":"operator\u003e=","insertText":"std::operator\u003e=(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003e=(${1:const tuple\u003c_TElements...\u003e \u0026__t}, ${2:const tuple\u003c_UElements...\u003e \u0026__u})"}},{"label":"•std::operator\u003e\u003e(_Istream \u0026\u0026__is, _Tp \u0026\u0026__x)","kind":3,"detail":"typename enable_if\u003c__and_\u003c__not_\u003cis_lvalue_reference\u003c_Istream\u003e\u003e, __is_convertible_to_basic_istream\u003c_Istream\u003e, __is_extractable\u003c__rvalue_istream_type\u003c_Istream\u003e, _Tp \u0026\u0026\u003e\u003e::value, __rvalue_istream_type\u003c_Istream\u003e\u003e::type","documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \n[27.7.1.6] Rvalue stream extraction \\_GLIBCXX_RESOLVE_LIB_DEFECTS  \n2328\\. Rvalue stream extraction should use perfect forwarding  \n@brief Generic extractor for rvalue stream  \n@param \\_\\_is An input stream.  \n@param \\_\\_x A reference to the extraction target.  \n@return is  \nThis is just a forwarding function to allow extraction from rvalue streams since they won't bind to the extractor functions that take an lvalue reference."},"sortText":"409f2ea4operator\u003e\u003e","filterText":"operator\u003e\u003e","insertText":"std::operator\u003e\u003e(${1:_Istream \u0026\u0026__is}, ${2:_Tp \u0026\u0026__x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003e\u003e(${1:_Istream \u0026\u0026__is}, ${2:_Tp \u0026\u0026__x})"}},{"label":"•std::oct(ios_base \u0026__base)","kind":3,"detail":"ios_base \u0026","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nCalls base.setf(ios_base::oct, ios_base::basefield)."},"sortText":"40a94eb8oct","filterText":"oct","insertText":"std::oct(${1:ios_base \u0026__base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::oct(${1:ios_base \u0026__base})"}},{"label":"•std::operator!=(const istream_iterator\u003c_Tp, _CharT, _Traits, _Dist\u003e \u0026__x, const istream_iterator\u003c_Tp, _CharT, _Traits, _Dist\u003e \u0026__y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \nReturn false if x and y are both end or not end, or x and y are the same."},"sortText":"40a94eb8operator!=","filterText":"operator!=","insertText":"std::operator!=(${1:const istream_iterator\u003c_Tp, _CharT, _Traits, _Dist\u003e \u0026__x}, ${2:const istream_iterator\u003c_Tp, _CharT, _Traits, _Dist\u003e \u0026__y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator!=(${1:const istream_iterator\u003c_Tp, _CharT, _Traits, _Dist\u003e \u0026__x}, ${2:const istream_iterator\u003c_Tp, _CharT, _Traits, _Dist\u003e \u0026__y})"}},{"label":"•std::operator!=(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \noperator !=  \n@brief Test difference of two strings.  \n@param \\_\\_lhs First string.  \n@param \\_\\_rhs Second string.  \n@return True if @a \\_\\_lhs.compare(@a \\_\\_rhs) != 0. False otherwise."},"sortText":"40a94eb8operator!=","filterText":"operator!=","insertText":"std::operator!=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator!=($0)"}},{"label":"•std::operator!=(const pair\u003c_T1, _T2\u003e \u0026__x, const pair\u003c_T1, _T2\u003e \u0026__y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \nUses @c operator== to find the result."},"sortText":"40a94eb8operator!=","filterText":"operator!=","insertText":"std::operator!=(${1:const pair\u003c_T1, _T2\u003e \u0026__x}, ${2:const pair\u003c_T1, _T2\u003e \u0026__y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator!=(${1:const pair\u003c_T1, _T2\u003e \u0026__x}, ${2:const pair\u003c_T1, _T2\u003e \u0026__y})"}},{"label":"•std::operator!=(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`"},"sortText":"40a94eb8operator!=","filterText":"operator!=","insertText":"std::operator!=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator!=($0)"}},{"label":"•std::operator!=(const fpos\u003c_StateT\u003e \u0026__lhs, const fpos\u003c_StateT\u003e \u0026__rhs)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"40a94eb8operator!=","filterText":"operator!=","insertText":"std::operator!=(${1:const fpos\u003c_StateT\u003e \u0026__lhs}, ${2:const fpos\u003c_StateT\u003e \u0026__rhs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator!=(${1:const fpos\u003c_StateT\u003e \u0026__lhs}, ${2:const fpos\u003c_StateT\u003e \u0026__rhs})"}},{"label":"•std::operator!=(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@overload"},"sortText":"40a94eb8operator!=","filterText":"operator!=","insertText":"std::operator!=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator!=($0)"}},{"label":"•std::__exception_ptr::operator!=(const exception_ptr \u0026, const exception_ptr \u0026)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003cexception\u003e`"},"sortText":"40a94eb8operator!=","filterText":"operator!=","insertText":"std::__exception_ptr::operator!=(${1:const exception_ptr \u0026}, ${2:const exception_ptr \u0026})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::__exception_ptr::operator!=(${1:const exception_ptr \u0026}, ${2:const exception_ptr \u0026})"}},{"label":"•std::operator\u0026(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"40a94eb8operator\u0026","filterText":"operator\u0026","insertText":"std::operator\u0026($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u0026($0)"}},{"label":"•std::operator\u0026(memory_order __m, __memory_order_modifier __mod)","kind":3,"detail":"memory_order","documentation":{"kind":"markdown","value":"From `\u003catomic\u003e`"},"sortText":"40a94eb8operator\u0026","filterText":"operator\u0026","insertText":"std::operator\u0026(${1:memory_order __m}, ${2:__memory_order_modifier __mod})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u0026(${1:memory_order __m}, ${2:__memory_order_modifier __mod})"}},{"label":"•std::operator\u0026=(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`"},"sortText":"40a94eb8operator\u0026=","filterText":"operator\u0026=","insertText":"std::operator\u0026=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u0026=($0)"}},{"label":"•std::operator+(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \n@brief Concatenate string and C string.  \n@param \\_\\_lhs First string.  \n@param \\_\\_rhs Last string.  \n@return New string with @a \\_\\_lhs followed by @a \\_\\_rhs."},"sortText":"40a94eb8operator+","filterText":"operator+","insertText":"std::operator+($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator+($0)"}},{"label":"•std::operator\u003c(const reverse_iterator\u003c_Iterator\u003e \u0026__x, const reverse_iterator\u003c_Iterator\u003e \u0026__y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`"},"sortText":"40a94eb8operator\u003c","filterText":"operator\u003c","insertText":"std::operator\u003c(${1:const reverse_iterator\u003c_Iterator\u003e \u0026__x}, ${2:const reverse_iterator\u003c_Iterator\u003e \u0026__y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003c(${1:const reverse_iterator\u003c_Iterator\u003e \u0026__x}, ${2:const reverse_iterator\u003c_Iterator\u003e \u0026__y})"}},{"label":"•std::operator\u003c(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`"},"sortText":"40a94eb8operator\u003c","filterText":"operator\u003c","insertText":"std::operator\u003c($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003c($0)"}},{"label":"•std::operator\u003c(const pair\u003c_T1, _T2\u003e \u0026__x, const pair\u003c_T1, _T2\u003e \u0026__y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \n\u003chttp://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html\u003e"},"sortText":"40a94eb8operator\u003c","filterText":"operator\u003c","insertText":"std::operator\u003c(${1:const pair\u003c_T1, _T2\u003e \u0026__x}, ${2:const pair\u003c_T1, _T2\u003e \u0026__y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003c(${1:const pair\u003c_T1, _T2\u003e \u0026__x}, ${2:const pair\u003c_T1, _T2\u003e \u0026__y})"}},{"label":"•std::operator\u003c=(const pair\u003c_T1, _T2\u003e \u0026__x, const pair\u003c_T1, _T2\u003e \u0026__y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \nUses @c operator\u003c to find the result."},"sortText":"40a94eb8operator\u003c=","filterText":"operator\u003c=","insertText":"std::operator\u003c=(${1:const pair\u003c_T1, _T2\u003e \u0026__x}, ${2:const pair\u003c_T1, _T2\u003e \u0026__y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003c=(${1:const pair\u003c_T1, _T2\u003e \u0026__x}, ${2:const pair\u003c_T1, _T2\u003e \u0026__y})"}},{"label":"•std::operator\u003c=(const _CharT *__lhs, const basic_string\u003c_CharT, _Traits, _Alloc\u003e \u0026__rhs)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \n@brief Test if C string doesn't follow string.  \n@param \\_\\_lhs C string.  \n@param \\_\\_rhs String.  \n@return True if @a \\_\\_lhs doesn't follow @a \\_\\_rhs. False otherwise."},"sortText":"40a94eb8operator\u003c=","filterText":"operator\u003c=","insertText":"std::operator\u003c=(${1:const _CharT *__lhs}, ${2:const basic_string\u003c_CharT, _Traits, _Alloc\u003e \u0026__rhs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003c=(${1:const _CharT *__lhs}, ${2:const basic_string\u003c_CharT, _Traits, _Alloc\u003e \u0026__rhs})"}},{"label":"•std::operator\u003c=(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`"},"sortText":"40a94eb8operator\u003c=","filterText":"operator\u003c=","insertText":"std::operator\u003c=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":20}},"newText":"std::operator\u003c=($0)"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":288},"contentChanges":[{"range":{"start":{"line":7,"character":20},"end":{"line":7,"character":20}},"rangeLength":0,"text":"U"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":158,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":158,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":159,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":7,"character":21},"context":{"triggerKind":3}}}
>>>
Content-Length: 596

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OU'"}]},"jsonrpc":"2.0"}Content-Length: 2217

{"id":159,"result":{"isIncomplete":false,"items":[{"label":" OUTPUT","kind":20,"detail":"PinMode","sortText":"403f858bOUTPUT","filterText":"OUTPUT","insertText":"OUTPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":21}},"newText":"OUTPUT"}},{"label":"•std::out_of_range","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstdexcept\u003e`  \nThis represents an argument whose value is not within the expected range (e.g., boundary checks in basic_string)."},"sortText":"40bb48d0out_of_range","filterText":"out_of_range","insertText":"std::out_of_range","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":21}},"newText":"std::out_of_range"}},{"label":"•std::output_iterator_tag","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \nMarking output iterators."},"sortText":"40c424e1output_iterator_tag","filterText":"output_iterator_tag","insertText":"std::output_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":21}},"newText":"std::output_iterator_tag"}},{"label":" OUTPUT","kind":1,"sortText":"40d1050aOUTPUT","filterText":"OUTPUT","insertText":"OUTPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":21}},"newText":"OUTPUT"}},{"label":"•mstd::output_iterator_tag","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40d538cdoutput_iterator_tag","filterText":"output_iterator_tag","insertText":"mstd::output_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":21}},"newText":"mstd::output_iterator_tag"}},{"label":"•std::operator\"\"us(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cchrono\u003e`"},"sortText":"40d762fboperator\"\"us","filterText":"operator\"\"us","insertText":"std::operator\"\"us($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":21}},"newText":"std::operator\"\"us($0)"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":289},"contentChanges":[{"range":{"start":{"line":7,"character":21},"end":{"line":7,"character":21}},"rangeLength":0,"text":"T"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":160,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":160,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 597

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUT'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":290},"contentChanges":[{"range":{"start":{"line":7,"character":22},"end":{"line":7,"character":22}},"rangeLength":0,"text":"P"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":161,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":161,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 598

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTP'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":291},"contentChanges":[{"range":{"start":{"line":7,"character":23},"end":{"line":7,"character":23}},"rangeLength":0,"text":"U"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":162,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":162,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 827

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":24}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'OUTPU'; did you mean 'OUTPUT'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:64:5:\nnote: 'OUTPUT' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":292},"contentChanges":[{"range":{"start":{"line":7,"character":24},"end":{"line":7,"character":24}},"rangeLength":0,"text":"T"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":163,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":163,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":292}}}Content-Length: 323

{"jsonrpc":"2.0","id":164,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":25},"end":{"line":7,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":164,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":293},"contentChanges":[{"range":{"start":{"line":7,"character":25},"end":{"line":7,"character":25}},"rangeLength":0,"text":"0"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":165,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 829

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":26}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'OUTPUT0'; did you mean 'OUTPUT'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:64:5:\nnote: 'OUTPUT' declared here"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":165,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 737

{"jsonrpc":"2.0","id":166,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":26},"end":{"line":7,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":7,"character":19},"end":{"line":7,"character":26}},"message":"Use of undeclared identifier 'OUTPUT0'; did you mean 'OUTPUT'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:64:5:\nnote: 'OUTPUT' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":166,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":293}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":294},"contentChanges":[{"range":{"start":{"line":7,"character":25},"end":{"line":7,"character":26}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":167,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":167,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":168,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":25},"end":{"line":7,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":168,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":294}}}Content-Length: 323

{"jsonrpc":"2.0","id":169,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":26},"end":{"line":7,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":169,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":295},"contentChanges":[{"range":{"start":{"line":7,"character":26},"end":{"line":7,"character":26}},"rangeLength":0,"text":";"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":170,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":171,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":27},"end":{"line":7,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":171,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 349

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":296},"contentChanges":[{"range":{"start":{"line":7,"character":27},"end":{"line":7,"character":27}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 222

{"jsonrpc":"2.0","id":172,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":172,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":296}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":297},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":173,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":173,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":298},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":0}},"rangeLength":0,"text":"p"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":173}}Content-Length: 222

{"jsonrpc":"2.0","id":174,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'p'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":174,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":175,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":1},"context":{"triggerKind":1}}}
>>>
Content-Length: 40501

{"id":175,"result":{"isIncomplete":true,"items":[{"label":"•pin_size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3eff2eb1pin_size_t","filterText":"pin_size_t","insertText":"pin_size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pin_size_t"}},{"label":" PinMode","kind":8,"sortText":"3f17ae13PinMode","filterText":"PinMode","insertText":"PinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PinMode"}},{"label":"•pinMode(NinaPin pin, PinMode mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\* FUNCTION DECLARATION  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})"}},{"label":"•pinMode(pin_size_t pinNumber, int mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Compat.h\"`"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})"}},{"label":" pinMode(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"Redeclare Common.h functions with the updated PinMode"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pinMode($0)"}},{"label":"•PinName","kind":8,"documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"3f5d4142PinName","filterText":"PinName","insertText":"PinName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PinName"}},{"label":"•Print","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Print.h\"`"},"sortText":"3fdbfc9cPrint","filterText":"Print","insertText":"Print","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"Print"}},{"label":"•PluggableUSBDevice","kind":7,"documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`  \nforward declaration"},"sortText":"3ff74b80PluggableUSBDevice","filterText":"PluggableUSBDevice","insertText":"PluggableUSBDevice","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PluggableUSBDevice"}},{"label":"•PluggableUSBModule","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`"},"sortText":"3ff8a156PluggableUSBModule","filterText":"PluggableUSBModule","insertText":"PluggableUSBModule","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PluggableUSBModule"}},{"label":"•PluggableUSB_","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`"},"sortText":"3ff8a156PluggableUSB_","filterText":"PluggableUSB_","insertText":"PluggableUSB_","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PluggableUSB_"}},{"label":"•Printable","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Printable.h\"`  \nThe Printable class provides a way for new classes to allow themselves to be printed.  \nBy deriving from Printable and implementing the printTo method, it will then be possible for users to print out instances of this class by passing them into the usual Print::print and Print::println methods."},"sortText":"3ff8a156Printable","filterText":"Printable","insertText":"Printable","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"Printable"}},{"label":"•PINCOUNT_fn()","kind":3,"detail":"unsigned int","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"403ec9efPINCOUNT_fn","filterText":"PINCOUNT_fn","insertText":"PINCOUNT_fn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PINCOUNT_fn()"}},{"label":" PullNone","kind":20,"detail":"PinMode","sortText":"403f858bPullNone","filterText":"PullNone","insertText":"PullNone","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PullNone"}},{"label":" PushPullNoPull","kind":20,"detail":"PinMode","sortText":"403f858bPushPullNoPull","filterText":"PushPullNoPull","insertText":"PushPullNoPull","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PushPullNoPull"}},{"label":" PushPullPullDown","kind":20,"detail":"PinMode","sortText":"403f858bPushPullPullDown","filterText":"PushPullPullDown","insertText":"PushPullPullDown","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PushPullPullDown"}},{"label":" PushPullPullUp","kind":20,"detail":"PinMode","sortText":"403f858bPushPullPullUp","filterText":"PushPullPullUp","insertText":"PushPullPullUp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PushPullPullUp"}},{"label":"•PinStatus","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40532740PinStatus","filterText":"PinStatus","insertText":"PinStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PinStatus"}},{"label":"•pwm_clkdiv_mode","kind":13,"documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief PWM Divider mode settings  \n\\\\ingroup hardware_pwm"},"sortText":"40557123pwm_clkdiv_mode","filterText":"pwm_clkdiv_mode","insertText":"pwm_clkdiv_mode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_clkdiv_mode"}},{"label":"•pwm_set_output_polarity(uint slice_num, bool a, bool b)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM output polarity  \n\\\\ingroup hardware_pwm  \n\\\\param slice_num PWM slice number  \n\\\\param a true to invert output A  \n\\\\param b true to invert output B"},"sortText":"40557123pwm_set_output_polarity","filterText":"pwm_set_output_polarity","insertText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})"}},{"label":"•PluggableUSBD()","kind":3,"detail":"arduino::PluggableUSBDevice \u0026","documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`"},"sortText":"405adf97PluggableUSBD","filterText":"PluggableUSBD","insertText":"PluggableUSBD()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PluggableUSBD()"}},{"label":"•PluggableUSB()","kind":3,"detail":"arduino::PluggableUSB_ \u0026","documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`  \nReplacement for global singleton.  \nThis function prevents static-initialization-order-fiasco https://isocpp.org/wiki/faq/ctors#static-init-order-on-first-use"},"sortText":"405d8e68PluggableUSB","filterText":"PluggableUSB","insertText":"PluggableUSB()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PluggableUSB()"}},{"label":"•p13","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p13","filterText":"p13","insertText":"p13","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p13"}},{"label":"•p14","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p14","filterText":"p14","insertText":"p14","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p14"}},{"label":"•p2","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p2","filterText":"p2","insertText":"p2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p2"}},{"label":"•p20","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p20","filterText":"p20","insertText":"p20","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p20"}},{"label":"•p27","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p27","filterText":"p27","insertText":"p27","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p27"}},{"label":"•p6","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p6","filterText":"p6","insertText":"p6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p6"}},{"label":"•p7","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p7","filterText":"p7","insertText":"p7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p7"}},{"label":"•p8","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p8","filterText":"p8","insertText":"p8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p8"}},{"label":"•pulseIn(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`  \ngeneric, overloaded implementations"},"sortText":"405d8e68pulseIn","filterText":"pulseIn","insertText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":"•pulseInLong(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68pulseInLong","filterText":"pulseInLong","insertText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":" PinNameToIndex(PinName P)","kind":3,"detail":"int","sortText":"4068a03fPinNameToIndex","filterText":"PinNameToIndex","insertText":"PinNameToIndex(${1:PinName P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PinNameToIndex(${1:PinName P})"}},{"label":"•internal::PluggableUSBModule","kind":7,"documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`"},"sortText":"406cec00PluggableUSBModule","filterText":"PluggableUSBModule","insertText":"internal::PluggableUSBModule","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"internal::PluggableUSBModule"}},{"label":" perror(const char *)","kind":3,"detail":"void","sortText":"4071b066perror","filterText":"perror","insertText":"perror(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"perror(${1:const char *})"}},{"label":"•prog_char","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_char","filterText":"prog_char","insertText":"prog_char","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_char"}},{"label":"•prog_int16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_int16_t","filterText":"prog_int16_t","insertText":"prog_int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_int16_t"}},{"label":"•prog_int8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_int8_t","filterText":"prog_int8_t","insertText":"prog_int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_int8_t"}},{"label":"•prog_uchar","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uchar","filterText":"prog_uchar","insertText":"prog_uchar","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_uchar"}},{"label":"•prog_uint16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uint16_t","filterText":"prog_uint16_t","insertText":"prog_uint16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_uint16_t"}},{"label":"•prog_uint32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uint32_t","filterText":"prog_uint32_t","insertText":"prog_uint32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_uint32_t"}},{"label":"•prog_void","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_void","filterText":"prog_void","insertText":"prog_void","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_void"}},{"label":" putc(int, FILE *)","kind":3,"detail":"int","sortText":"4071b066putc","filterText":"putc","insertText":"putc(${1:int}, ${2:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"putc(${1:int}, ${2:FILE *})"}},{"label":" puts(const char *)","kind":3,"detail":"int","sortText":"4071b066puts","filterText":"puts","insertText":"puts(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"puts(${1:const char *})"}},{"label":" putw(int, FILE *)","kind":3,"detail":"int","sortText":"4071b066putw","filterText":"putw","insertText":"putw(${1:int}, ${2:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"putw(${1:int}, ${2:FILE *})"}},{"label":" posix_memalign(void **, size_t, size_t)","kind":3,"detail":"int","sortText":"40791bfcposix_memalign","filterText":"posix_memalign","insertText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})"}},{"label":" powf(float, float)","kind":3,"detail":"float","sortText":"40791bfcpowf","filterText":"powf","insertText":"powf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"powf(${1:float}, ${2:float})"}},{"label":"•PIN_INPUT","kind":20,"detail":"PinDirection","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPIN_INPUT","filterText":"PIN_INPUT","insertText":"PIN_INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PIN_INPUT"}},{"label":"•PWM_1","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_1","filterText":"PWM_1","insertText":"PWM_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PWM_1"}},{"label":"•PWM_4","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_4","filterText":"PWM_4","insertText":"PWM_4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PWM_4"}},{"label":"•PWM_5","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_5","filterText":"PWM_5","insertText":"PWM_5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PWM_5"}},{"label":"•pselect(int __n, _types_fd_set *__readfds, _types_fd_set *__writefds, _types_fd_set *__exceptfds, const struct timespec *__timeout, const sigset_t *__set)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/select.h\u003e`"},"sortText":"407f2f3bpselect","filterText":"pselect","insertText":"pselect(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:const struct timespec *__timeout}, ${6:const sigset_t *__set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pselect(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:const struct timespec *__timeout}, ${6:const sigset_t *__set})"}},{"label":" pthread_attr_t","kind":8,"sortText":"407f2f3bpthread_attr_t","filterText":"pthread_attr_t","insertText":"pthread_attr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pthread_attr_t"}},{"label":" pthread_key_t","kind":8,"documentation":{"kind":"markdown","value":"Keys"},"sortText":"407f2f3bpthread_key_t","filterText":"pthread_key_t","insertText":"pthread_key_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pthread_key_t"}},{"label":" pthread_mutex_t","kind":8,"sortText":"407f2f3bpthread_mutex_t","filterText":"pthread_mutex_t","insertText":"pthread_mutex_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pthread_mutex_t"}},{"label":" pthread_mutexattr_t","kind":8,"sortText":"407f2f3bpthread_mutexattr_t","filterText":"pthread_mutexattr_t","insertText":"pthread_mutexattr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pthread_mutexattr_t"}},{"label":" pthread_once_t","kind":8,"sortText":"407f2f3bpthread_once_t","filterText":"pthread_once_t","insertText":"pthread_once_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pthread_once_t"}},{"label":" PICO_FLASH_SIZE_BYTES","kind":1,"sortText":"40800000PICO_FLASH_SIZE_BYTES","filterText":"PICO_FLASH_SIZE_BYTES","insertText":"PICO_FLASH_SIZE_BYTES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_FLASH_SIZE_BYTES"}},{"label":" PICO_NO_BINARY_INFO","kind":1,"sortText":"40800000PICO_NO_BINARY_INFO","filterText":"PICO_NO_BINARY_INFO","insertText":"PICO_NO_BINARY_INFO","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_NO_BINARY_INFO"}},{"label":" PICO_ON_DEVICE","kind":1,"sortText":"40800000PICO_ON_DEVICE","filterText":"PICO_ON_DEVICE","insertText":"PICO_ON_DEVICE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_ON_DEVICE"}},{"label":" PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","kind":1,"sortText":"40800000PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","filterText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","insertText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX"}},{"label":" PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","kind":1,"sortText":"40800000PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","filterText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","insertText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED"}},{"label":" PICO_UART_ENABLE_CRLF_SUPPORT","kind":1,"sortText":"40800000PICO_UART_ENABLE_CRLF_SUPPORT","filterText":"PICO_UART_ENABLE_CRLF_SUPPORT","insertText":"PICO_UART_ENABLE_CRLF_SUPPORT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_UART_ENABLE_CRLF_SUPPORT"}},{"label":"•POLY_16BIT_IBM","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx16+x15+x2+1"},"sortText":"4088511fPOLY_16BIT_IBM","filterText":"POLY_16BIT_IBM","insertText":"POLY_16BIT_IBM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"POLY_16BIT_IBM"}},{"label":"•POLY_7BIT_SD","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx7+x3+1"},"sortText":"4088511fPOLY_7BIT_SD","filterText":"POLY_7BIT_SD","insertText":"POLY_7BIT_SD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"POLY_7BIT_SD"}},{"label":"•POLY_8BIT_CCITT","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx8+x2+x+1"},"sortText":"4088511fPOLY_8BIT_CCITT","filterText":"POLY_8BIT_CCITT","insertText":"POLY_8BIT_CCITT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"POLY_8BIT_CCITT"}},{"label":"•ParityEven","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityEven","filterText":"ParityEven","insertText":"ParityEven","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"ParityEven"}},{"label":"•ParityNone","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityNone","filterText":"ParityNone","insertText":"ParityNone","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"ParityNone"}},{"label":"•ParityOdd","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityOdd","filterText":"ParityOdd","insertText":"ParityOdd","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"ParityOdd"}},{"label":"•PinList","kind":8,"documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fPinList","filterText":"PinList","insertText":"PinList","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PinList"}},{"label":"•Port0","kind":20,"detail":"PortName","documentation":{"kind":"markdown","value":"From `\"PortNames.h\"`"},"sortText":"4088511fPort0","filterText":"Port0","insertText":"Port0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"Port0"}},{"label":"•PortName","kind":8,"documentation":{"kind":"markdown","value":"From `\"PortNames.h\"`"},"sortText":"4088511fPortName","filterText":"PortName","insertText":"PortName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PortName"}},{"label":"•pin_function(PinName pin, int function)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpin_function","filterText":"pin_function","insertText":"pin_function(${1:PinName pin}, ${2:int function})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pin_function(${1:PinName pin}, ${2:int function})"}},{"label":"•pwmout_period_ms(pwmout_t *obj, int ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM period specified in miliseconds, keeping the duty cycle the same  \n@param obj The pwmout object  \n@param ms The milisecond period"},"sortText":"4088511fpwmout_period_ms","filterText":"pwmout_period_ms","insertText":"pwmout_period_ms(${1:pwmout_t *obj}, ${2:int ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_period_ms(${1:pwmout_t *obj}, ${2:int ms})"}},{"label":"•pwmout_period_us(pwmout_t *obj, int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM period specified in microseconds, keeping the duty cycle the same  \n@param obj The pwmout object  \n@param us The microsecond period"},"sortText":"4088511fpwmout_period_us","filterText":"pwmout_period_us","insertText":"pwmout_period_us(${1:pwmout_t *obj}, ${2:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_period_us(${1:pwmout_t *obj}, ${2:int us})"}},{"label":"•pwmout_pulsewidth(pwmout_t *obj, float seconds)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM pulsewidth specified in seconds, keeping the period the same.  \n@param obj The pwmout object  \n@param seconds The floating-point pulsewidth in seconds"},"sortText":"4088511fpwmout_pulsewidth","filterText":"pwmout_pulsewidth","insertText":"pwmout_pulsewidth(${1:pwmout_t *obj}, ${2:float seconds})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_pulsewidth(${1:pwmout_t *obj}, ${2:float seconds})"}},{"label":"•pwmout_pulsewidth_us(pwmout_t *obj, int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM pulsewidth specified in microseconds, keeping the period the same.  \n@param obj The pwmout object  \n@param us The floating-point pulsewidth in microseconds"},"sortText":"4088511fpwmout_pulsewidth_us","filterText":"pwmout_pulsewidth_us","insertText":"pwmout_pulsewidth_us(${1:pwmout_t *obj}, ${2:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_pulsewidth_us(${1:pwmout_t *obj}, ${2:int us})"}},{"label":"•pwmout_read(pwmout_t *obj)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nRead the current float-point output duty-cycle  \n@param obj The pwmout object  \n@return A floating-point output duty-cycle"},"sortText":"4088511fpwmout_read","filterText":"pwmout_read","insertText":"pwmout_read(${1:pwmout_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_read(${1:pwmout_t *obj})"}},{"label":"•pwmout_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nPwmout hal structure. pwmout_s is declared in the target's hal"},"sortText":"4088511fpwmout_t","filterText":"pwmout_t","insertText":"pwmout_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_t"}},{"label":"•std::pow(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aapow","filterText":"pow","insertText":"std::pow($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::pow($0)"}},{"label":"•PWM_CHAN_B","kind":20,"detail":"pwm_chan","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`"},"sortText":"409c96d9PWM_CHAN_B","filterText":"PWM_CHAN_B","insertText":"PWM_CHAN_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PWM_CHAN_B"}},{"label":"•PWM_DIV_B_HIGH","kind":20,"detail":"pwm_clkdiv_mode","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \nFractional divider is gated by the PWM B pin"},"sortText":"409c96d9PWM_DIV_B_HIGH","filterText":"PWM_DIV_B_HIGH","insertText":"PWM_DIV_B_HIGH","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PWM_DIV_B_HIGH"}},{"label":"•panic(const char *fmt, ...)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"platform.h\"`"},"sortText":"409c96d9panic","filterText":"panic","insertText":"panic(${1:const char *fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"panic(${1:const char *fmt, ...})"}},{"label":"•pwm_config_set_clkdiv(pwm_config *c, float div)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set clock divider in a PWM configuration  \n\\\\ingroup hardware_pwm  \n\\\\param c PWM configuration struct to modify  \n\\\\param div Value to divide counting rate by. Must be greater than or equal to 1.  \nIf the divide mode is free-running, the PWM counter runs at clk_sys / div.  \nOtherwise, the divider reduces the rate of events seen on the B pin input (level or edge) before passing them on to the PWM counter."},"sortText":"409c96d9pwm_config_set_clkdiv","filterText":"pwm_config_set_clkdiv","insertText":"pwm_config_set_clkdiv(${1:pwm_config *c}, ${2:float div})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_config_set_clkdiv(${1:pwm_config *c}, ${2:float div})"}},{"label":"•pwm_config_set_wrap(pwm_config *c, uint16_t wrap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM counter wrap value in a PWM configuration  \n\\\\ingroup hardware_pwm  \nSet the highest value the counter will reach before returning to 0. Also known as TOP.  \n\\\\param c PWM configuration struct to modify  \n\\\\param wrap Value to set wrap to"},"sortText":"409c96d9pwm_config_set_wrap","filterText":"pwm_config_set_wrap","insertText":"pwm_config_set_wrap(${1:pwm_config *c}, ${2:uint16_t wrap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_config_set_wrap(${1:pwm_config *c}, ${2:uint16_t wrap})"}},{"label":"•pwm_get_default_config()","kind":3,"detail":"pwm_config","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Get a set of default values for PWM configuration  \n\\\\ingroup hardware_pwm  \nPWM config is free running at system clock speed, no phase correction, wrapping at 0xffff,  \nwith standard polarities for channels A and B.  \n\\\\return Set of default values."},"sortText":"409c96d9pwm_get_default_config","filterText":"pwm_get_default_config","insertText":"pwm_get_default_config()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_get_default_config()"}},{"label":"•pwm_get_irq_status_mask()","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Get PWM interrupt status, raw  \n\\\\ingroup hardware_pwm  \n\\\\return Bitmask of all PWM interrupts currently set"},"sortText":"409c96d9pwm_get_irq_status_mask","filterText":"pwm_get_irq_status_mask","insertText":"pwm_get_irq_status_mask()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_get_irq_status_mask()"}},{"label":"•pwm_gpio_to_channel(uint gpio)","kind":3,"detail":"uint","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Determine the PWM channel that is attached to the specified GPIO.  \n\\\\ingroup hardware_pwm  \nEach slice 0 to 7 has two channels, A and B.  \n\\\\return The PWM channel that controls the specified GPIO."},"sortText":"409c96d9pwm_gpio_to_channel","filterText":"pwm_gpio_to_channel","insertText":"pwm_gpio_to_channel(${1:uint gpio})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_gpio_to_channel(${1:uint gpio})"}},{"label":"•pwm_set_mask_enabled(uint32_t mask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Enable/Disable multiple PWM slices simultaneously  \n\\\\ingroup hardware_pwm  \n\\\\param mask Bitmap of PWMs to enable/disable. Bits 0 to 7 enable slices 0-7 respectively"},"sortText":"409c96d9pwm_set_mask_enabled","filterText":"pwm_set_mask_enabled","insertText":"pwm_set_mask_enabled(${1:uint32_t mask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_set_mask_enabled(${1:uint32_t mask})"}},{"label":"•pwm_set_phase_correct(uint slice_num, bool phase_correct)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM phase correct on/off  \n\\\\ingroup hardware_pwm  \n\\\\param slice_num PWM slice number  \n\\\\param phase_correct true to set phase correct modulation, false to set trailing edge  \nSetting phase control to true means that instead of wrapping back to zero when the wrap point is reached,  \nthe PWM starts counting back down. The output frequency is halved when phase-correct mode is enabled."},"sortText":"409c96d9pwm_set_phase_correct","filterText":"pwm_set_phase_correct","insertText":"pwm_set_phase_correct(${1:uint slice_num}, ${2:bool phase_correct})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_set_phase_correct(${1:uint slice_num}, ${2:bool phase_correct})"}},{"label":"•pwm_slice_hw","kind":22,"documentation":{"kind":"markdown","value":"From `\"structs/pwm.h\"`"},"sortText":"40a4b801pwm_slice_hw","filterText":"pwm_slice_hw","insertText":"pwm_slice_hw","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_slice_hw"}},{"label":"•std::perror","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bperror","filterText":"perror","insertText":"std::perror","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::perror"}},{"label":"•std::printf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bprintf","filterText":"printf","insertText":"std::printf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::printf"}},{"label":"•std::putc","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bputc","filterText":"putc","insertText":"std::putc","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::putc"}},{"label":"•std::partial_sort(_RAIter, _RAIter, _RAIter, _Compare)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partial_sort","filterText":"partial_sort","insertText":"std::partial_sort(${1:_RAIter}, ${2:_RAIter}, ${3:_RAIter}, ${4:_Compare})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::partial_sort(${1:_RAIter}, ${2:_RAIter}, ${3:_RAIter}, ${4:_Compare})"}},{"label":"•std::partial_sort_copy(_IIter, _IIter, _RAIter, _RAIter)","kind":3,"detail":"_RAIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nnth_element partial_sort"},"sortText":"40a94eb8partial_sort_copy","filterText":"partial_sort_copy","insertText":"std::partial_sort_copy(${1:_IIter}, ${2:_IIter}, ${3:_RAIter}, ${4:_RAIter})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::partial_sort_copy(${1:_IIter}, ${2:_IIter}, ${3:_RAIter}, ${4:_RAIter})"}},{"label":"•std::partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partition","filterText":"partition","insertText":"std::partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"•std::partition_point(_FIter, _FIter, _Predicate)","kind":3,"detail":"_FIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partition_point","filterText":"partition_point","insertText":"std::partition_point(${1:_FIter}, ${2:_FIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::partition_point(${1:_FIter}, ${2:_FIter}, ${3:_Predicate})"}},{"label":"•std::pop_heap(_RAIter, _RAIter, _Compare)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8pop_heap","filterText":"pop_heap","insertText":"std::pop_heap(${1:_RAIter}, ${2:_RAIter}, ${3:_Compare})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::pop_heap(${1:_RAIter}, ${2:_RAIter}, ${3:_Compare})"}},{"label":"•std::prev(_BidirectionalIterator __x, typename iterator_traits\u003c_BidirectionalIterator\u003e::difference_type __n = 1)","kind":3,"detail":"_BidirectionalIterator","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`"},"sortText":"40a94eb8prev","filterText":"prev","insertText":"std::prev(${1:_BidirectionalIterator __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::prev(${1:_BidirectionalIterator __x})"}},{"label":"•std::ptrdiff_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`"},"sortText":"40a94eb8ptrdiff_t","filterText":"ptrdiff_t","insertText":"std::ptrdiff_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::ptrdiff_t"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":299},"contentChanges":[{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":1}},"rangeLength":0,"text":"i"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":176,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":176,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":177,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":2},"context":{"triggerKind":3}}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pi'"}]},"jsonrpc":"2.0"}Content-Length: 42858

{"id":177,"result":{"isIncomplete":true,"items":[{"label":"•pin_size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3eff2eb1pin_size_t","filterText":"pin_size_t","insertText":"pin_size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pin_size_t"}},{"label":" PinMode","kind":8,"documentation":{"kind":"markdown","value":"Define the PinName symbol to be used in all the contexts"},"sortText":"3f17ae13PinMode","filterText":"PinMode","insertText":"PinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PinMode"}},{"label":" pinMode(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"Redeclare Common.h functions with the updated PinMode"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinMode($0)"}},{"label":"•pinMode(NinaPin pin, PinMode mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\* FUNCTION DECLARATION  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})"}},{"label":"•pinMode(pin_size_t pinNumber, int mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Compat.h\"`"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})"}},{"label":"•pinMode(pin_size_t pinNumber, ArduinoPinMode pinMode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:pin_size_t pinNumber}, ${2:ArduinoPinMode pinMode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinMode(${1:pin_size_t pinNumber}, ${2:ArduinoPinMode pinMode})"}},{"label":"•PinName","kind":8,"documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"3f5d4142PinName","filterText":"PinName","insertText":"PinName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PinName"}},{"label":" ArduinoPinMode","kind":8,"sortText":"3fd1c28eArduinoPinMode","filterText":"ArduinoPinMode","insertText":"ArduinoPinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"ArduinoPinMode"}},{"label":" MbedPinMode","kind":8,"sortText":"3fd1c28eMbedPinMode","filterText":"MbedPinMode","insertText":"MbedPinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"MbedPinMode"}},{"label":" NinaPin","kind":7,"sortText":"4017ae13NinaPin","filterText":"NinaPin","insertText":"NinaPin","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"NinaPin"}},{"label":" NinaPin(…)","kind":4,"detail":"[3 overloads]","sortText":"402cccccNinaPin","filterText":"NinaPin","insertText":"NinaPin($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"NinaPin($0)"}},{"label":"•pin_mode(PinName pin, PinMode mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"40463cd8pin_mode","filterText":"pin_mode","insertText":"pin_mode(${1:PinName pin}, ${2:PinMode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pin_mode(${1:PinName pin}, ${2:PinMode mode})"}},{"label":"•PinStatus","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40532740PinStatus","filterText":"PinStatus","insertText":"PinStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PinStatus"}},{"label":"•PIN_OUTPUT","kind":20,"detail":"PinDirection","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"4056edfdPIN_OUTPUT","filterText":"PIN_OUTPUT","insertText":"PIN_OUTPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_OUTPUT"}},{"label":"•PINCOUNT_fn()","kind":3,"detail":"unsigned int","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4056f0b0PINCOUNT_fn","filterText":"PINCOUNT_fn","insertText":"PINCOUNT_fn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PINCOUNT_fn()"}},{"label":" PinDescription","kind":8,"documentation":{"kind":"markdown","value":"Types used for the table below"},"sortText":"405d8e68PinDescription","filterText":"PinDescription","insertText":"PinDescription","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PinDescription"}},{"label":" PinNameToIndex(PinName P)","kind":3,"detail":"int","sortText":"4068a03fPinNameToIndex","filterText":"PinNameToIndex","insertText":"PinNameToIndex(${1:PinName P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PinNameToIndex(${1:PinName P})"}},{"label":" PinMode","kind":1,"sortText":"407cc3c8PinMode","filterText":"PinMode","insertText":"PinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PinMode"}},{"label":"•PI","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"407ec88dPI","filterText":"PI","insertText":"PI","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PI"}},{"label":"•PinDirection","kind":8,"documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`  \nDefines to be used by application"},"sortText":"407f2f3bPinDirection","filterText":"PinDirection","insertText":"PinDirection","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PinDirection"}},{"label":"•pid_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"407f2f3bpid_t","filterText":"pid_t","insertText":"pid_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pid_t"}},{"label":"•PIO0_IRQ_0n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4086f4b4PIO0_IRQ_0n","filterText":"PIO0_IRQ_0n","insertText":"PIO0_IRQ_0n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIO0_IRQ_0n"}},{"label":"•PIO0_IRQ_1n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4086f4b4PIO0_IRQ_1n","filterText":"PIO0_IRQ_1n","insertText":"PIO0_IRQ_1n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIO0_IRQ_1n"}},{"label":"•PIO1_IRQ_0n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4086f4b4PIO1_IRQ_0n","filterText":"PIO1_IRQ_0n","insertText":"PIO1_IRQ_0n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIO1_IRQ_0n"}},{"label":"•PIO1_IRQ_1n","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4086f4b4PIO1_IRQ_1n","filterText":"PIO1_IRQ_1n","insertText":"PIO1_IRQ_1n","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIO1_IRQ_1n"}},{"label":"•PinList","kind":8,"documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fPinList","filterText":"PinList","insertText":"PinList","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PinList"}},{"label":"•PinMap","kind":8,"documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fPinMap","filterText":"PinMap","insertText":"PinMap","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PinMap"}},{"label":"•pin_function(PinName pin, int function)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpin_function","filterText":"pin_function","insertText":"pin_function(${1:PinName pin}, ${2:int function})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pin_function(${1:PinName pin}, ${2:int function})"}},{"label":"•pinmap_find_function(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_find_function","filterText":"pinmap_find_function","insertText":"pinmap_find_function(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_find_function(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_find_peripheral(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_find_peripheral","filterText":"pinmap_find_peripheral","insertText":"pinmap_find_peripheral(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_find_peripheral(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_find_peripheral_pins(const PinList *whitelist, const PinList *blacklist, int per, const PinMap *const *maps, PinName **pins, uint32_t count)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nFind a combination of pins suitable for use given the constraints  \nThis function finds pins which meet these specific properties:  \n\\- The pin is part of the form factor  \n\\- The pin is not in the restricted list  \n\\- The pin is contained within the respective pinmap  \n\\- The pin belongs to the given peripheral  \n\\- Each pin found is distinct; in the example below mosi and miso will never be assigned the same pin  \nExample:  \n@code  \n#include \"mbed.h\"  \n#include \"pinmap.h\"  \nint main() { int per = spi_master_cs_pinmap()-\u003eperipheral;  \nconst PinList \\*pins_ff = pinmap_ff_default_pins();  \nconst PinList \\*pins_avoid = pinmap_restricted_pins();  \nPinName mosi = NC;  \nPinName miso = NC;  \nPinName sclk = NC;  \nPinName ssel = NC;  \nconst PinMap \\*maps[] = { spi_master_mosi_pinmap(),  \nspi_master_miso_pinmap(),  \nspi_master_clk_pinmap(),  \nspi_master_cs_pinmap() };  \nPinName \\*pins[] = { \u0026mosi,  \n\u0026miso,  \n\u0026sclk,  \n\u0026ssel };  \nif (pinmap_find_peripheral_pins(pins_ff, pins_avoid, per, maps, pins, sizeof(maps) / sizeof(maps[0]))) { printf(\"Found SPI pins to test instance %i with:\\\\n\" \" mosi=%s\\\\n\" \" miso=%s\\\\n\" \" sclk=%s\\\\n\" \" ssel=%s\\\\n\", per,  \npinmap_ff_default_pin_to_string(mosi),  \npinmap_ff_default_pin_to_string(miso),  \npinmap_ff_default_pin_to_string(sclk),  \npinmap_ff_default_pin_to_string(ssel));  \n} else { printf(\"Could not find SPI combination to test %i\\\\n\", per);  \n} return 0;  \n}  \n@endcode  \n@param whitelist List of pins to choose from  \n@param blacklist List of pins which cannot be used  \n@param per Peripheral to which the pins belong  \n@param maps An array of pin maps to select from  \n@param pins An array of pins to find. Pins already set to a value will be left unchanged. Only pins initialized to NC will be updated by this function  \n@param count The size of maps and pins  \n@return true if a suitable combination of pins was found and written to the pins array, otherwise false"},"sortText":"4088511fpinmap_find_peripheral_pins","filterText":"pinmap_find_peripheral_pins","insertText":"pinmap_find_peripheral_pins(${1:const PinList *whitelist}, ${2:const PinList *blacklist}, ${3:int per}, ${4:const PinMap *const *maps}, ${5:PinName **pins}, ${6:uint32_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_find_peripheral_pins(${1:const PinList *whitelist}, ${2:const PinList *blacklist}, ${3:int per}, ${4:const PinMap *const *maps}, ${5:PinName **pins}, ${6:uint32_t count})"}},{"label":"•pinmap_function(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_function","filterText":"pinmap_function","insertText":"pinmap_function(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_function(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_gpio_restricted_pins()","kind":3,"detail":"const PinList *","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nGet the pin list of pins to avoid during GPIO/GPIO_IRQ testing  \nThe GPIO restricted pin list is used to indicate to testing that a pin should be skipped due to some caveat about it.  \nTargets should override the weak implementation of this function if they have peripherals which should be skipped during testing.  \n@note This is special case only for GPIO/GPIO_IRQ tests because targets do not provide pin-maps for GPIO.  \n@return Pointer to a peripheral list of peripheral to avoid"},"sortText":"4088511fpinmap_gpio_restricted_pins","filterText":"pinmap_gpio_restricted_pins","insertText":"pinmap_gpio_restricted_pins()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_gpio_restricted_pins()"}},{"label":"•pinmap_list_has_peripheral(const PeripheralList *list, int peripheral)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nCheck if the peripheral is in the list  \n@param list peripheral list to check  \n@param peripheral peripheral to check for in the list  \n@return true if the peripheral is in the list, false otherwise"},"sortText":"4088511fpinmap_list_has_peripheral","filterText":"pinmap_list_has_peripheral","insertText":"pinmap_list_has_peripheral(${1:const PeripheralList *list}, ${2:int peripheral})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_list_has_peripheral(${1:const PeripheralList *list}, ${2:int peripheral})"}},{"label":"•pinmap_list_has_pin(const PinList *list, PinName pin)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nCheck if the pin is in the list  \n@param list pin list to check  \n@param pin pin to check for in the list  \n@return true if the pin is in the list, false otherwise"},"sortText":"4088511fpinmap_list_has_pin","filterText":"pinmap_list_has_pin","insertText":"pinmap_list_has_pin(${1:const PinList *list}, ${2:PinName pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_list_has_pin(${1:const PinList *list}, ${2:PinName pin})"}},{"label":"•pinmap_merge(uint32_t a, uint32_t b)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_merge","filterText":"pinmap_merge","insertText":"pinmap_merge(${1:uint32_t a}, ${2:uint32_t b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_merge(${1:uint32_t a}, ${2:uint32_t b})"}},{"label":"•pinmap_peripheral(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_peripheral","filterText":"pinmap_peripheral","insertText":"pinmap_peripheral(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_peripheral(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_pinout(PinName pin, const PinMap *map)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_pinout","filterText":"pinmap_pinout","insertText":"pinmap_pinout(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_pinout(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_restricted_pins()","kind":3,"detail":"const PinList *","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nGet the pin list of pins to avoid during testing  \nThe restricted pin list is used to indicate to testing that a pin should be skipped due to some caveat about it.  \nFor example, using CONSOLE_RX and CONSOLE_TX during tests will interfere with the test runner and should be avoided.  \nTargets should override the weak implementation of this function if they have additional pins which should be skipped during testing.  \n@return Pointer to a pin list of pins to avoid"},"sortText":"4088511fpinmap_restricted_pins","filterText":"pinmap_restricted_pins","insertText":"pinmap_restricted_pins()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_restricted_pins()"}},{"label":"•pinmap_uart_restricted_peripherals()","kind":3,"detail":"const PeripheralList *","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_uart_restricted_peripherals","filterText":"pinmap_uart_restricted_peripherals","insertText":"pinmap_uart_restricted_peripherals()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pinmap_uart_restricted_peripherals()"}},{"label":"•pulseIn(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`  \ngeneric, overloaded implementations"},"sortText":"408c559bpulseIn","filterText":"pulseIn","insertText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":"•pulseInLong(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"408c559bpulseInLong","filterText":"pulseInLong","insertText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":" pulseIn(PinName pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","sortText":"409cf05epulseIn","filterText":"pulseIn","insertText":"pulseIn(${1:PinName pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pulseIn(${1:PinName pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":" pulseInLong(PinName pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","sortText":"409cf05epulseInLong","filterText":"pulseInLong","insertText":"pulseInLong(${1:PinName pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pulseInLong(${1:PinName pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":"•PIN_INPUT","kind":20,"detail":"PinDirection","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"409e92a8PIN_INPUT","filterText":"PIN_INPUT","insertText":"PIN_INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_INPUT"}},{"label":"•std::pico","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cratio\u003e`"},"sortText":"409f2ea4pico","filterText":"pico","insertText":"std::pico","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"std::pico"}},{"label":"•std::piecewise_construct","kind":6,"detail":"const piecewise_construct_t","documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \npiecewise_construct"},"sortText":"40a94eb8piecewise_construct","filterText":"piecewise_construct","insertText":"std::piecewise_construct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"std::piecewise_construct"}},{"label":"•std::piecewise_construct_t","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \npiecewise_construct_t"},"sortText":"40a94eb8piecewise_construct_t","filterText":"piecewise_construct_t","insertText":"std::piecewise_construct_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"std::piecewise_construct_t"}},{"label":"•PWM_IRQ_WRAPn","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"40aa889bPWM_IRQ_WRAPn","filterText":"PWM_IRQ_WRAPn","insertText":"PWM_IRQ_WRAPn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PWM_IRQ_WRAPn"}},{"label":"•prog_int16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"40aa889bprog_int16_t","filterText":"prog_int16_t","insertText":"prog_int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"prog_int16_t"}},{"label":"•prog_int32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"40aa889bprog_int32_t","filterText":"prog_int32_t","insertText":"prog_int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"prog_int32_t"}},{"label":"•prog_int64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"40aa889bprog_int64_t","filterText":"prog_int64_t","insertText":"prog_int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"prog_int64_t"}},{"label":"•prog_int8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"40aa889bprog_int8_t","filterText":"prog_int8_t","insertText":"prog_int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"prog_int8_t"}},{"label":"•PICO_ERROR_GENERIC","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"pico/error.h\"`"},"sortText":"40c02101PICO_ERROR_GENERIC","filterText":"PICO_ERROR_GENERIC","insertText":"PICO_ERROR_GENERIC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_ERROR_GENERIC"}},{"label":"•PICO_ERROR_NONE","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"pico/error.h\"`"},"sortText":"40c02101PICO_ERROR_NONE","filterText":"PICO_ERROR_NONE","insertText":"PICO_ERROR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_ERROR_NONE"}},{"label":"•PICO_ERROR_NO_DATA","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"pico/error.h\"`"},"sortText":"40c02101PICO_ERROR_NO_DATA","filterText":"PICO_ERROR_NO_DATA","insertText":"PICO_ERROR_NO_DATA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_ERROR_NO_DATA"}},{"label":"•PICO_ERROR_TIMEOUT","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"pico/error.h\"`"},"sortText":"40c02101PICO_ERROR_TIMEOUT","filterText":"PICO_ERROR_TIMEOUT","insertText":"PICO_ERROR_TIMEOUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_ERROR_TIMEOUT"}},{"label":"•PICO_OK","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"pico/error.h\"`"},"sortText":"40c02101PICO_OK","filterText":"PICO_OK","insertText":"PICO_OK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_OK"}},{"label":"•pwmout_init(pwmout_t *obj, PinName pin)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nInitialize the pwm out peripheral and configure the pin  \n@param obj The pwmout object to initialize  \n@param pin The pwmout pin to initialize"},"sortText":"40c63cd6pwmout_init","filterText":"pwmout_init","insertText":"pwmout_init(${1:pwmout_t *obj}, ${2:PinName pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pwmout_init(${1:pwmout_t *obj}, ${2:PinName pin})"}},{"label":"•pwmout_init_direct(pwmout_t *obj, const PinMap *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nInitialize the pwm out peripheral and configure the pin  \n@param obj The pwmout object to initialize  \n@param pinmap pointer to structure which holds static pinmap"},"sortText":"40c63cd6pwmout_init_direct","filterText":"pwmout_init_direct","insertText":"pwmout_init_direct(${1:pwmout_t *obj}, ${2:const PinMap *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pwmout_init_direct(${1:pwmout_t *obj}, ${2:const PinMap *pinmap})"}},{"label":"•PPPInterface","kind":7,"documentation":{"kind":"markdown","value":"From `\"NetworkInterface.h\"`"},"sortText":"40cc589cPPPInterface","filterText":"PPPInterface","insertText":"PPPInterface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PPPInterface"}},{"label":"•pwm_init(uint slice_num, pwm_config *c, bool start)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Initialise a PWM with settings from a configuration object  \n\\\\ingroup hardware_pwm  \nUse the \\\\ref pwm_get_default_config() function to initialise a config structure, make changes as needed using the pwm_config\\_\\* functions, then call this function to set up the PWM.  \n\\\\param slice_num PWM slice number  \n\\\\param c The configuration to use  \n\\\\param start If true the PWM will be started running once configured. If false you will need to start manually using \\\\ref pwm_set_enabled() or \\\\ref pwm_set_mask_enabled()"},"sortText":"40d57123pwm_init","filterText":"pwm_init","insertText":"pwm_init(${1:uint slice_num}, ${2:pwm_config *c}, ${3:bool start})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"pwm_init(${1:uint slice_num}, ${2:pwm_config *c}, ${3:bool start})"}},{"label":"•PICO_SMPS_MODE_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"boards/pico.h\"`"},"sortText":"40d6327bPICO_SMPS_MODE_PIN","filterText":"PICO_SMPS_MODE_PIN","insertText":"PICO_SMPS_MODE_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_SMPS_MODE_PIN"}},{"label":"•PINS_COUNT","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PINS_COUNT","filterText":"PINS_COUNT","insertText":"PINS_COUNT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PINS_COUNT"}},{"label":"•PIN_A0","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_A0","filterText":"PIN_A0","insertText":"PIN_A0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_A0"}},{"label":"•PIN_A1","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_A1","filterText":"PIN_A1","insertText":"PIN_A1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_A1"}},{"label":"•PIN_A2","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_A2","filterText":"PIN_A2","insertText":"PIN_A2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_A2"}},{"label":"•PIN_A3","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_A3","filterText":"PIN_A3","insertText":"PIN_A3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_A3"}},{"label":"•PIN_LED","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_LED","filterText":"PIN_LED","insertText":"PIN_LED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_LED"}},{"label":"•PIN_PDM_CLK","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_PDM_CLK","filterText":"PIN_PDM_CLK","insertText":"PIN_PDM_CLK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_PDM_CLK"}},{"label":"•PIN_PDM_DIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_PDM_DIN","filterText":"PIN_PDM_DIN","insertText":"PIN_PDM_DIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_PDM_DIN"}},{"label":"•PIN_SERIAL_RX","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_SERIAL_RX","filterText":"PIN_SERIAL_RX","insertText":"PIN_SERIAL_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_SERIAL_RX"}},{"label":"•PIN_SERIAL_TX","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_SERIAL_TX","filterText":"PIN_SERIAL_TX","insertText":"PIN_SERIAL_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_SERIAL_TX"}},{"label":"•PIN_SPI_MISO","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_SPI_MISO","filterText":"PIN_SPI_MISO","insertText":"PIN_SPI_MISO","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_SPI_MISO"}},{"label":"•PIN_SPI_MOSI","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_SPI_MOSI","filterText":"PIN_SPI_MOSI","insertText":"PIN_SPI_MOSI","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_SPI_MOSI"}},{"label":"•PIN_SPI_SCK","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_SPI_SCK","filterText":"PIN_SPI_SCK","insertText":"PIN_SPI_SCK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_SPI_SCK"}},{"label":"•PIN_SPI_SS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_SPI_SS","filterText":"PIN_SPI_SS","insertText":"PIN_SPI_SS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_SPI_SS"}},{"label":"•PIN_WIRE_SCL","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_WIRE_SCL","filterText":"PIN_WIRE_SCL","insertText":"PIN_WIRE_SCL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_WIRE_SCL"}},{"label":"•PIN_WIRE_SDA","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40e6e468PIN_WIRE_SDA","filterText":"PIN_WIRE_SDA","insertText":"PIN_WIRE_SDA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PIN_WIRE_SDA"}},{"label":"•PICO_DEFAULT_LED_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"boards/pico.h\"`"},"sortText":"411d98a4PICO_DEFAULT_LED_PIN","filterText":"PICO_DEFAULT_LED_PIN","insertText":"PICO_DEFAULT_LED_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_DEFAULT_LED_PIN"}},{"label":"•PICO_DEFAULT_UART","kind":1,"documentation":{"kind":"markdown","value":"From `\"boards/pico.h\"`"},"sortText":"411d98a4PICO_DEFAULT_UART","filterText":"PICO_DEFAULT_UART","insertText":"PICO_DEFAULT_UART","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_DEFAULT_UART"}},{"label":"•PICO_DEFAULT_UART_RX_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"boards/pico.h\"`"},"sortText":"411d98a4PICO_DEFAULT_UART_RX_PIN","filterText":"PICO_DEFAULT_UART_RX_PIN","insertText":"PICO_DEFAULT_UART_RX_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_DEFAULT_UART_RX_PIN"}},{"label":"•PICO_DEFAULT_UART_TX_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"boards/pico.h\"`"},"sortText":"411d98a4PICO_DEFAULT_UART_TX_PIN","filterText":"PICO_DEFAULT_UART_TX_PIN","insertText":"PICO_DEFAULT_UART_TX_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_DEFAULT_UART_TX_PIN"}},{"label":"•PICO_DOUBLE_SUPPORT_ROM_V1","kind":1,"documentation":{"kind":"markdown","value":"From `\"boards/pico.h\"`"},"sortText":"411d98a4PICO_DOUBLE_SUPPORT_ROM_V1","filterText":"PICO_DOUBLE_SUPPORT_ROM_V1","insertText":"PICO_DOUBLE_SUPPORT_ROM_V1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_DOUBLE_SUPPORT_ROM_V1"}},{"label":"•PICO_FLASH_SPI_CLKDIV","kind":1,"documentation":{"kind":"markdown","value":"From `\"boards/pico.h\"`"},"sortText":"411d98a4PICO_FLASH_SPI_CLKDIV","filterText":"PICO_FLASH_SPI_CLKDIV","insertText":"PICO_FLASH_SPI_CLKDIV","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_FLASH_SPI_CLKDIV"}},{"label":"•PICO_FLOAT_SUPPORT_ROM_V1","kind":1,"documentation":{"kind":"markdown","value":"From `\"boards/pico.h\"`"},"sortText":"411d98a4PICO_FLOAT_SUPPORT_ROM_V1","filterText":"PICO_FLOAT_SUPPORT_ROM_V1","insertText":"PICO_FLOAT_SUPPORT_ROM_V1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_FLOAT_SUPPORT_ROM_V1"}},{"label":"•PICO_DEBUG_PIN_BASE","kind":1,"documentation":{"kind":"markdown","value":"From `\"gpio.h\"`"},"sortText":"414b1ae7PICO_DEBUG_PIN_BASE","filterText":"PICO_DEBUG_PIN_BASE","insertText":"PICO_DEBUG_PIN_BASE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_DEBUG_PIN_BASE"}},{"label":"•PICO_DEBUG_PIN_COUNT","kind":1,"documentation":{"kind":"markdown","value":"From `\"gpio.h\"`"},"sortText":"414b1ae7PICO_DEBUG_PIN_COUNT","filterText":"PICO_DEBUG_PIN_COUNT","insertText":"PICO_DEBUG_PIN_COUNT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_DEBUG_PIN_COUNT"}},{"label":"•PICO_DEFAULT_IRQ_PRIORITY","kind":1,"documentation":{"kind":"markdown","value":"From `\"irq.h\"`"},"sortText":"414b1ae7PICO_DEFAULT_IRQ_PRIORITY","filterText":"PICO_DEFAULT_IRQ_PRIORITY","insertText":"PICO_DEFAULT_IRQ_PRIORITY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_DEFAULT_IRQ_PRIORITY"}},{"label":"•PICO_DEFAULT_UART_BAUD_RATE","kind":1,"documentation":{"kind":"markdown","value":"From `\"uart.h\"`"},"sortText":"414b1ae7PICO_DEFAULT_UART_BAUD_RATE","filterText":"PICO_DEFAULT_UART_BAUD_RATE","insertText":"PICO_DEFAULT_UART_BAUD_RATE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_DEFAULT_UART_BAUD_RATE"}},{"label":"•PICO_DEFAULT_UART_INSTANCE","kind":1,"documentation":{"kind":"markdown","value":"From `\"uart.h\"`"},"sortText":"414b1ae7PICO_DEFAULT_UART_INSTANCE","filterText":"PICO_DEFAULT_UART_INSTANCE","insertText":"PICO_DEFAULT_UART_INSTANCE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_DEFAULT_UART_INSTANCE"}},{"label":"•PICO_DISABLE_SHARED_IRQ_HANDLERS","kind":1,"documentation":{"kind":"markdown","value":"From `\"irq.h\"`"},"sortText":"414b1ae7PICO_DISABLE_SHARED_IRQ_HANDLERS","filterText":"PICO_DISABLE_SHARED_IRQ_HANDLERS","insertText":"PICO_DISABLE_SHARED_IRQ_HANDLERS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_DISABLE_SHARED_IRQ_HANDLERS"}},{"label":"•PICO_HIGHEST_IRQ_PRIORITY","kind":1,"documentation":{"kind":"markdown","value":"From `\"irq.h\"`"},"sortText":"414b1ae7PICO_HIGHEST_IRQ_PRIORITY","filterText":"PICO_HIGHEST_IRQ_PRIORITY","insertText":"PICO_HIGHEST_IRQ_PRIORITY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_HIGHEST_IRQ_PRIORITY"}},{"label":"•PICO_LOWEST_IRQ_PRIORITY","kind":1,"documentation":{"kind":"markdown","value":"From `\"irq.h\"`"},"sortText":"414b1ae7PICO_LOWEST_IRQ_PRIORITY","filterText":"PICO_LOWEST_IRQ_PRIORITY","insertText":"PICO_LOWEST_IRQ_PRIORITY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_LOWEST_IRQ_PRIORITY"}},{"label":"•PICO_MAX_SHARED_IRQ_HANDLERS","kind":1,"documentation":{"kind":"markdown","value":"From `\"irq.h\"`"},"sortText":"414b1ae7PICO_MAX_SHARED_IRQ_HANDLERS","filterText":"PICO_MAX_SHARED_IRQ_HANDLERS","insertText":"PICO_MAX_SHARED_IRQ_HANDLERS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_MAX_SHARED_IRQ_HANDLERS"}},{"label":"•PICO_SDK_VERSION_MAJOR","kind":1,"documentation":{"kind":"markdown","value":"From `\"version.h\"`"},"sortText":"414b1ae7PICO_SDK_VERSION_MAJOR","filterText":"PICO_SDK_VERSION_MAJOR","insertText":"PICO_SDK_VERSION_MAJOR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_SDK_VERSION_MAJOR"}},{"label":"•PICO_SDK_VERSION_MINOR","kind":1,"documentation":{"kind":"markdown","value":"From `\"version.h\"`"},"sortText":"414b1ae7PICO_SDK_VERSION_MINOR","filterText":"PICO_SDK_VERSION_MINOR","insertText":"PICO_SDK_VERSION_MINOR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_SDK_VERSION_MINOR"}},{"label":"•PICO_SDK_VERSION_REVISION","kind":1,"documentation":{"kind":"markdown","value":"From `\"version.h\"`"},"sortText":"414b1ae7PICO_SDK_VERSION_REVISION","filterText":"PICO_SDK_VERSION_REVISION","insertText":"PICO_SDK_VERSION_REVISION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_SDK_VERSION_REVISION"}},{"label":"•PICO_SDK_VERSION_STRING","kind":1,"documentation":{"kind":"markdown","value":"From `\"version.h\"`"},"sortText":"414b1ae7PICO_SDK_VERSION_STRING","filterText":"PICO_SDK_VERSION_STRING","insertText":"PICO_SDK_VERSION_STRING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_SDK_VERSION_STRING"}},{"label":"•PICO_SHARED_IRQ_HANDLER_DEFAULT_ORDER_PRIORITY","kind":1,"documentation":{"kind":"markdown","value":"From `\"irq.h\"`"},"sortText":"414b1ae7PICO_SHARED_IRQ_HANDLER_DEFAULT_ORDER_PRIORITY","filterText":"PICO_SHARED_IRQ_HANDLER_DEFAULT_ORDER_PRIORITY","insertText":"PICO_SHARED_IRQ_HANDLER_DEFAULT_ORDER_PRIORITY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"newText":"PICO_SHARED_IRQ_HANDLER_DEFAULT_ORDER_PRIORITY"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 500

{"jsonrpc":"2.0","id":178,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":2}},"message":"Use of undeclared identifier 'pi'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":178,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":300},"contentChanges":[{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":2}},"rangeLength":1,"text":""}]}}Content-Length: 282

{"jsonrpc":"2.0","id":179,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":1},"context":{"triggerKind":1}}}Content-Length: 222

{"jsonrpc":"2.0","id":180,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'p'"}]},"jsonrpc":"2.0"}Content-Length: 40501

{"id":179,"result":{"isIncomplete":true,"items":[{"label":"•pin_size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3eff2eb1pin_size_t","filterText":"pin_size_t","insertText":"pin_size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pin_size_t"}},{"label":" PinMode","kind":8,"sortText":"3f17ae13PinMode","filterText":"PinMode","insertText":"PinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PinMode"}},{"label":"•pinMode(NinaPin pin, PinMode mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\* FUNCTION DECLARATION  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})"}},{"label":"•pinMode(pin_size_t pinNumber, int mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Compat.h\"`"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})"}},{"label":" pinMode(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"Redeclare Common.h functions with the updated PinMode"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pinMode($0)"}},{"label":"•PinName","kind":8,"documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"3f5d4142PinName","filterText":"PinName","insertText":"PinName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PinName"}},{"label":"•Print","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Print.h\"`"},"sortText":"3fdbfc9cPrint","filterText":"Print","insertText":"Print","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"Print"}},{"label":"•PluggableUSBDevice","kind":7,"documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`  \nforward declaration"},"sortText":"3ff74b80PluggableUSBDevice","filterText":"PluggableUSBDevice","insertText":"PluggableUSBDevice","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PluggableUSBDevice"}},{"label":"•PluggableUSBModule","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`"},"sortText":"3ff8a156PluggableUSBModule","filterText":"PluggableUSBModule","insertText":"PluggableUSBModule","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PluggableUSBModule"}},{"label":"•PluggableUSB_","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`"},"sortText":"3ff8a156PluggableUSB_","filterText":"PluggableUSB_","insertText":"PluggableUSB_","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PluggableUSB_"}},{"label":"•Printable","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Printable.h\"`  \nThe Printable class provides a way for new classes to allow themselves to be printed.  \nBy deriving from Printable and implementing the printTo method, it will then be possible for users to print out instances of this class by passing them into the usual Print::print and Print::println methods."},"sortText":"3ff8a156Printable","filterText":"Printable","insertText":"Printable","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"Printable"}},{"label":"•PINCOUNT_fn()","kind":3,"detail":"unsigned int","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"403ec9efPINCOUNT_fn","filterText":"PINCOUNT_fn","insertText":"PINCOUNT_fn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PINCOUNT_fn()"}},{"label":" PullNone","kind":20,"detail":"PinMode","sortText":"403f858bPullNone","filterText":"PullNone","insertText":"PullNone","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PullNone"}},{"label":" PushPullNoPull","kind":20,"detail":"PinMode","sortText":"403f858bPushPullNoPull","filterText":"PushPullNoPull","insertText":"PushPullNoPull","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PushPullNoPull"}},{"label":" PushPullPullDown","kind":20,"detail":"PinMode","sortText":"403f858bPushPullPullDown","filterText":"PushPullPullDown","insertText":"PushPullPullDown","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PushPullPullDown"}},{"label":" PushPullPullUp","kind":20,"detail":"PinMode","sortText":"403f858bPushPullPullUp","filterText":"PushPullPullUp","insertText":"PushPullPullUp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PushPullPullUp"}},{"label":"•PinStatus","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40532740PinStatus","filterText":"PinStatus","insertText":"PinStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PinStatus"}},{"label":"•pwm_clkdiv_mode","kind":13,"documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief PWM Divider mode settings  \n\\\\ingroup hardware_pwm"},"sortText":"40557123pwm_clkdiv_mode","filterText":"pwm_clkdiv_mode","insertText":"pwm_clkdiv_mode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_clkdiv_mode"}},{"label":"•pwm_set_output_polarity(uint slice_num, bool a, bool b)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM output polarity  \n\\\\ingroup hardware_pwm  \n\\\\param slice_num PWM slice number  \n\\\\param a true to invert output A  \n\\\\param b true to invert output B"},"sortText":"40557123pwm_set_output_polarity","filterText":"pwm_set_output_polarity","insertText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})"}},{"label":"•PluggableUSBD()","kind":3,"detail":"arduino::PluggableUSBDevice \u0026","documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`"},"sortText":"405adf97PluggableUSBD","filterText":"PluggableUSBD","insertText":"PluggableUSBD()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PluggableUSBD()"}},{"label":"•PluggableUSB()","kind":3,"detail":"arduino::PluggableUSB_ \u0026","documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`  \nReplacement for global singleton.  \nThis function prevents static-initialization-order-fiasco https://isocpp.org/wiki/faq/ctors#static-init-order-on-first-use"},"sortText":"405d8e68PluggableUSB","filterText":"PluggableUSB","insertText":"PluggableUSB()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PluggableUSB()"}},{"label":"•p13","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p13","filterText":"p13","insertText":"p13","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p13"}},{"label":"•p14","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p14","filterText":"p14","insertText":"p14","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p14"}},{"label":"•p2","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p2","filterText":"p2","insertText":"p2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p2"}},{"label":"•p20","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p20","filterText":"p20","insertText":"p20","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p20"}},{"label":"•p27","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p27","filterText":"p27","insertText":"p27","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p27"}},{"label":"•p6","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p6","filterText":"p6","insertText":"p6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p6"}},{"label":"•p7","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p7","filterText":"p7","insertText":"p7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p7"}},{"label":"•p8","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p8","filterText":"p8","insertText":"p8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"p8"}},{"label":"•pulseIn(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`  \ngeneric, overloaded implementations"},"sortText":"405d8e68pulseIn","filterText":"pulseIn","insertText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":"•pulseInLong(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68pulseInLong","filterText":"pulseInLong","insertText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":" PinNameToIndex(PinName P)","kind":3,"detail":"int","sortText":"4068a03fPinNameToIndex","filterText":"PinNameToIndex","insertText":"PinNameToIndex(${1:PinName P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PinNameToIndex(${1:PinName P})"}},{"label":"•internal::PluggableUSBModule","kind":7,"documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`"},"sortText":"406cec00PluggableUSBModule","filterText":"PluggableUSBModule","insertText":"internal::PluggableUSBModule","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"internal::PluggableUSBModule"}},{"label":" perror(const char *)","kind":3,"detail":"void","sortText":"4071b066perror","filterText":"perror","insertText":"perror(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"perror(${1:const char *})"}},{"label":"•prog_char","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_char","filterText":"prog_char","insertText":"prog_char","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_char"}},{"label":"•prog_int16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_int16_t","filterText":"prog_int16_t","insertText":"prog_int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_int16_t"}},{"label":"•prog_int8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_int8_t","filterText":"prog_int8_t","insertText":"prog_int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_int8_t"}},{"label":"•prog_uchar","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uchar","filterText":"prog_uchar","insertText":"prog_uchar","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_uchar"}},{"label":"•prog_uint16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uint16_t","filterText":"prog_uint16_t","insertText":"prog_uint16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_uint16_t"}},{"label":"•prog_uint32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uint32_t","filterText":"prog_uint32_t","insertText":"prog_uint32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_uint32_t"}},{"label":"•prog_void","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_void","filterText":"prog_void","insertText":"prog_void","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"prog_void"}},{"label":" putc(int, FILE *)","kind":3,"detail":"int","sortText":"4071b066putc","filterText":"putc","insertText":"putc(${1:int}, ${2:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"putc(${1:int}, ${2:FILE *})"}},{"label":" puts(const char *)","kind":3,"detail":"int","sortText":"4071b066puts","filterText":"puts","insertText":"puts(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"puts(${1:const char *})"}},{"label":" putw(int, FILE *)","kind":3,"detail":"int","sortText":"4071b066putw","filterText":"putw","insertText":"putw(${1:int}, ${2:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"putw(${1:int}, ${2:FILE *})"}},{"label":" posix_memalign(void **, size_t, size_t)","kind":3,"detail":"int","sortText":"40791bfcposix_memalign","filterText":"posix_memalign","insertText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})"}},{"label":" powf(float, float)","kind":3,"detail":"float","sortText":"40791bfcpowf","filterText":"powf","insertText":"powf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"powf(${1:float}, ${2:float})"}},{"label":"•PIN_INPUT","kind":20,"detail":"PinDirection","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPIN_INPUT","filterText":"PIN_INPUT","insertText":"PIN_INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PIN_INPUT"}},{"label":"•PWM_1","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_1","filterText":"PWM_1","insertText":"PWM_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PWM_1"}},{"label":"•PWM_4","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_4","filterText":"PWM_4","insertText":"PWM_4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PWM_4"}},{"label":"•PWM_5","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_5","filterText":"PWM_5","insertText":"PWM_5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PWM_5"}},{"label":"•pselect(int __n, _types_fd_set *__readfds, _types_fd_set *__writefds, _types_fd_set *__exceptfds, const struct timespec *__timeout, const sigset_t *__set)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/select.h\u003e`"},"sortText":"407f2f3bpselect","filterText":"pselect","insertText":"pselect(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:const struct timespec *__timeout}, ${6:const sigset_t *__set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pselect(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:const struct timespec *__timeout}, ${6:const sigset_t *__set})"}},{"label":" pthread_attr_t","kind":8,"sortText":"407f2f3bpthread_attr_t","filterText":"pthread_attr_t","insertText":"pthread_attr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pthread_attr_t"}},{"label":" pthread_key_t","kind":8,"documentation":{"kind":"markdown","value":"Keys"},"sortText":"407f2f3bpthread_key_t","filterText":"pthread_key_t","insertText":"pthread_key_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pthread_key_t"}},{"label":" pthread_mutex_t","kind":8,"sortText":"407f2f3bpthread_mutex_t","filterText":"pthread_mutex_t","insertText":"pthread_mutex_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pthread_mutex_t"}},{"label":" pthread_mutexattr_t","kind":8,"sortText":"407f2f3bpthread_mutexattr_t","filterText":"pthread_mutexattr_t","insertText":"pthread_mutexattr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pthread_mutexattr_t"}},{"label":" pthread_once_t","kind":8,"sortText":"407f2f3bpthread_once_t","filterText":"pthread_once_t","insertText":"pthread_once_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pthread_once_t"}},{"label":" PICO_FLASH_SIZE_BYTES","kind":1,"sortText":"40800000PICO_FLASH_SIZE_BYTES","filterText":"PICO_FLASH_SIZE_BYTES","insertText":"PICO_FLASH_SIZE_BYTES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_FLASH_SIZE_BYTES"}},{"label":" PICO_NO_BINARY_INFO","kind":1,"sortText":"40800000PICO_NO_BINARY_INFO","filterText":"PICO_NO_BINARY_INFO","insertText":"PICO_NO_BINARY_INFO","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_NO_BINARY_INFO"}},{"label":" PICO_ON_DEVICE","kind":1,"sortText":"40800000PICO_ON_DEVICE","filterText":"PICO_ON_DEVICE","insertText":"PICO_ON_DEVICE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_ON_DEVICE"}},{"label":" PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","kind":1,"sortText":"40800000PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","filterText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","insertText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX"}},{"label":" PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","kind":1,"sortText":"40800000PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","filterText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","insertText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED"}},{"label":" PICO_UART_ENABLE_CRLF_SUPPORT","kind":1,"sortText":"40800000PICO_UART_ENABLE_CRLF_SUPPORT","filterText":"PICO_UART_ENABLE_CRLF_SUPPORT","insertText":"PICO_UART_ENABLE_CRLF_SUPPORT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PICO_UART_ENABLE_CRLF_SUPPORT"}},{"label":"•POLY_16BIT_IBM","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx16+x15+x2+1"},"sortText":"4088511fPOLY_16BIT_IBM","filterText":"POLY_16BIT_IBM","insertText":"POLY_16BIT_IBM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"POLY_16BIT_IBM"}},{"label":"•POLY_7BIT_SD","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx7+x3+1"},"sortText":"4088511fPOLY_7BIT_SD","filterText":"POLY_7BIT_SD","insertText":"POLY_7BIT_SD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"POLY_7BIT_SD"}},{"label":"•POLY_8BIT_CCITT","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx8+x2+x+1"},"sortText":"4088511fPOLY_8BIT_CCITT","filterText":"POLY_8BIT_CCITT","insertText":"POLY_8BIT_CCITT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"POLY_8BIT_CCITT"}},{"label":"•ParityEven","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityEven","filterText":"ParityEven","insertText":"ParityEven","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"ParityEven"}},{"label":"•ParityNone","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityNone","filterText":"ParityNone","insertText":"ParityNone","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"ParityNone"}},{"label":"•ParityOdd","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityOdd","filterText":"ParityOdd","insertText":"ParityOdd","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"ParityOdd"}},{"label":"•PinList","kind":8,"documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fPinList","filterText":"PinList","insertText":"PinList","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PinList"}},{"label":"•Port0","kind":20,"detail":"PortName","documentation":{"kind":"markdown","value":"From `\"PortNames.h\"`"},"sortText":"4088511fPort0","filterText":"Port0","insertText":"Port0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"Port0"}},{"label":"•PortName","kind":8,"documentation":{"kind":"markdown","value":"From `\"PortNames.h\"`"},"sortText":"4088511fPortName","filterText":"PortName","insertText":"PortName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PortName"}},{"label":"•pin_function(PinName pin, int function)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpin_function","filterText":"pin_function","insertText":"pin_function(${1:PinName pin}, ${2:int function})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pin_function(${1:PinName pin}, ${2:int function})"}},{"label":"•pwmout_period_ms(pwmout_t *obj, int ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM period specified in miliseconds, keeping the duty cycle the same  \n@param obj The pwmout object  \n@param ms The milisecond period"},"sortText":"4088511fpwmout_period_ms","filterText":"pwmout_period_ms","insertText":"pwmout_period_ms(${1:pwmout_t *obj}, ${2:int ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_period_ms(${1:pwmout_t *obj}, ${2:int ms})"}},{"label":"•pwmout_period_us(pwmout_t *obj, int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM period specified in microseconds, keeping the duty cycle the same  \n@param obj The pwmout object  \n@param us The microsecond period"},"sortText":"4088511fpwmout_period_us","filterText":"pwmout_period_us","insertText":"pwmout_period_us(${1:pwmout_t *obj}, ${2:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_period_us(${1:pwmout_t *obj}, ${2:int us})"}},{"label":"•pwmout_pulsewidth(pwmout_t *obj, float seconds)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM pulsewidth specified in seconds, keeping the period the same.  \n@param obj The pwmout object  \n@param seconds The floating-point pulsewidth in seconds"},"sortText":"4088511fpwmout_pulsewidth","filterText":"pwmout_pulsewidth","insertText":"pwmout_pulsewidth(${1:pwmout_t *obj}, ${2:float seconds})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_pulsewidth(${1:pwmout_t *obj}, ${2:float seconds})"}},{"label":"•pwmout_pulsewidth_us(pwmout_t *obj, int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM pulsewidth specified in microseconds, keeping the period the same.  \n@param obj The pwmout object  \n@param us The floating-point pulsewidth in microseconds"},"sortText":"4088511fpwmout_pulsewidth_us","filterText":"pwmout_pulsewidth_us","insertText":"pwmout_pulsewidth_us(${1:pwmout_t *obj}, ${2:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_pulsewidth_us(${1:pwmout_t *obj}, ${2:int us})"}},{"label":"•pwmout_read(pwmout_t *obj)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nRead the current float-point output duty-cycle  \n@param obj The pwmout object  \n@return A floating-point output duty-cycle"},"sortText":"4088511fpwmout_read","filterText":"pwmout_read","insertText":"pwmout_read(${1:pwmout_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_read(${1:pwmout_t *obj})"}},{"label":"•pwmout_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nPwmout hal structure. pwmout_s is declared in the target's hal"},"sortText":"4088511fpwmout_t","filterText":"pwmout_t","insertText":"pwmout_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwmout_t"}},{"label":"•std::pow(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aapow","filterText":"pow","insertText":"std::pow($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::pow($0)"}},{"label":"•PWM_CHAN_B","kind":20,"detail":"pwm_chan","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`"},"sortText":"409c96d9PWM_CHAN_B","filterText":"PWM_CHAN_B","insertText":"PWM_CHAN_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PWM_CHAN_B"}},{"label":"•PWM_DIV_B_HIGH","kind":20,"detail":"pwm_clkdiv_mode","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \nFractional divider is gated by the PWM B pin"},"sortText":"409c96d9PWM_DIV_B_HIGH","filterText":"PWM_DIV_B_HIGH","insertText":"PWM_DIV_B_HIGH","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"PWM_DIV_B_HIGH"}},{"label":"•panic(const char *fmt, ...)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"platform.h\"`"},"sortText":"409c96d9panic","filterText":"panic","insertText":"panic(${1:const char *fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"panic(${1:const char *fmt, ...})"}},{"label":"•pwm_config_set_clkdiv(pwm_config *c, float div)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set clock divider in a PWM configuration  \n\\\\ingroup hardware_pwm  \n\\\\param c PWM configuration struct to modify  \n\\\\param div Value to divide counting rate by. Must be greater than or equal to 1.  \nIf the divide mode is free-running, the PWM counter runs at clk_sys / div.  \nOtherwise, the divider reduces the rate of events seen on the B pin input (level or edge) before passing them on to the PWM counter."},"sortText":"409c96d9pwm_config_set_clkdiv","filterText":"pwm_config_set_clkdiv","insertText":"pwm_config_set_clkdiv(${1:pwm_config *c}, ${2:float div})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_config_set_clkdiv(${1:pwm_config *c}, ${2:float div})"}},{"label":"•pwm_config_set_wrap(pwm_config *c, uint16_t wrap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM counter wrap value in a PWM configuration  \n\\\\ingroup hardware_pwm  \nSet the highest value the counter will reach before returning to 0. Also known as TOP.  \n\\\\param c PWM configuration struct to modify  \n\\\\param wrap Value to set wrap to"},"sortText":"409c96d9pwm_config_set_wrap","filterText":"pwm_config_set_wrap","insertText":"pwm_config_set_wrap(${1:pwm_config *c}, ${2:uint16_t wrap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_config_set_wrap(${1:pwm_config *c}, ${2:uint16_t wrap})"}},{"label":"•pwm_get_default_config()","kind":3,"detail":"pwm_config","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Get a set of default values for PWM configuration  \n\\\\ingroup hardware_pwm  \nPWM config is free running at system clock speed, no phase correction, wrapping at 0xffff,  \nwith standard polarities for channels A and B.  \n\\\\return Set of default values."},"sortText":"409c96d9pwm_get_default_config","filterText":"pwm_get_default_config","insertText":"pwm_get_default_config()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_get_default_config()"}},{"label":"•pwm_get_irq_status_mask()","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Get PWM interrupt status, raw  \n\\\\ingroup hardware_pwm  \n\\\\return Bitmask of all PWM interrupts currently set"},"sortText":"409c96d9pwm_get_irq_status_mask","filterText":"pwm_get_irq_status_mask","insertText":"pwm_get_irq_status_mask()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_get_irq_status_mask()"}},{"label":"•pwm_gpio_to_channel(uint gpio)","kind":3,"detail":"uint","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Determine the PWM channel that is attached to the specified GPIO.  \n\\\\ingroup hardware_pwm  \nEach slice 0 to 7 has two channels, A and B.  \n\\\\return The PWM channel that controls the specified GPIO."},"sortText":"409c96d9pwm_gpio_to_channel","filterText":"pwm_gpio_to_channel","insertText":"pwm_gpio_to_channel(${1:uint gpio})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_gpio_to_channel(${1:uint gpio})"}},{"label":"•pwm_set_mask_enabled(uint32_t mask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Enable/Disable multiple PWM slices simultaneously  \n\\\\ingroup hardware_pwm  \n\\\\param mask Bitmap of PWMs to enable/disable. Bits 0 to 7 enable slices 0-7 respectively"},"sortText":"409c96d9pwm_set_mask_enabled","filterText":"pwm_set_mask_enabled","insertText":"pwm_set_mask_enabled(${1:uint32_t mask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_set_mask_enabled(${1:uint32_t mask})"}},{"label":"•pwm_set_phase_correct(uint slice_num, bool phase_correct)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM phase correct on/off  \n\\\\ingroup hardware_pwm  \n\\\\param slice_num PWM slice number  \n\\\\param phase_correct true to set phase correct modulation, false to set trailing edge  \nSetting phase control to true means that instead of wrapping back to zero when the wrap point is reached,  \nthe PWM starts counting back down. The output frequency is halved when phase-correct mode is enabled."},"sortText":"409c96d9pwm_set_phase_correct","filterText":"pwm_set_phase_correct","insertText":"pwm_set_phase_correct(${1:uint slice_num}, ${2:bool phase_correct})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_set_phase_correct(${1:uint slice_num}, ${2:bool phase_correct})"}},{"label":"•pwm_slice_hw","kind":22,"documentation":{"kind":"markdown","value":"From `\"structs/pwm.h\"`"},"sortText":"40a4b801pwm_slice_hw","filterText":"pwm_slice_hw","insertText":"pwm_slice_hw","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"pwm_slice_hw"}},{"label":"•std::perror","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bperror","filterText":"perror","insertText":"std::perror","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::perror"}},{"label":"•std::printf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bprintf","filterText":"printf","insertText":"std::printf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::printf"}},{"label":"•std::putc","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bputc","filterText":"putc","insertText":"std::putc","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::putc"}},{"label":"•std::partial_sort(_RAIter, _RAIter, _RAIter, _Compare)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partial_sort","filterText":"partial_sort","insertText":"std::partial_sort(${1:_RAIter}, ${2:_RAIter}, ${3:_RAIter}, ${4:_Compare})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::partial_sort(${1:_RAIter}, ${2:_RAIter}, ${3:_RAIter}, ${4:_Compare})"}},{"label":"•std::partial_sort_copy(_IIter, _IIter, _RAIter, _RAIter)","kind":3,"detail":"_RAIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nnth_element partial_sort"},"sortText":"40a94eb8partial_sort_copy","filterText":"partial_sort_copy","insertText":"std::partial_sort_copy(${1:_IIter}, ${2:_IIter}, ${3:_RAIter}, ${4:_RAIter})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::partial_sort_copy(${1:_IIter}, ${2:_IIter}, ${3:_RAIter}, ${4:_RAIter})"}},{"label":"•std::partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partition","filterText":"partition","insertText":"std::partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"•std::partition_point(_FIter, _FIter, _Predicate)","kind":3,"detail":"_FIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partition_point","filterText":"partition_point","insertText":"std::partition_point(${1:_FIter}, ${2:_FIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::partition_point(${1:_FIter}, ${2:_FIter}, ${3:_Predicate})"}},{"label":"•std::pop_heap(_RAIter, _RAIter, _Compare)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8pop_heap","filterText":"pop_heap","insertText":"std::pop_heap(${1:_RAIter}, ${2:_RAIter}, ${3:_Compare})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::pop_heap(${1:_RAIter}, ${2:_RAIter}, ${3:_Compare})"}},{"label":"•std::prev(_BidirectionalIterator __x, typename iterator_traits\u003c_BidirectionalIterator\u003e::difference_type __n = 1)","kind":3,"detail":"_BidirectionalIterator","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`"},"sortText":"40a94eb8prev","filterText":"prev","insertText":"std::prev(${1:_BidirectionalIterator __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::prev(${1:_BidirectionalIterator __x})"}},{"label":"•std::ptrdiff_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`"},"sortText":"40a94eb8ptrdiff_t","filterText":"ptrdiff_t","insertText":"std::ptrdiff_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"newText":"std::ptrdiff_t"}}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":180,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":301},"contentChanges":[{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":1}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":180}}Content-Length: 222

{"jsonrpc":"2.0","id":181,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'p'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":181,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":302},"contentChanges":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":2}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":181}}Content-Length: 222

{"jsonrpc":"2.0","id":182,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":182,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'p'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":303},"contentChanges":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":183,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'p'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":183,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":304},"contentChanges":[{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":2}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":184,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'p'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":184,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":305},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":1}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":185,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":185,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":306},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":0}},"rangeLength":0,"text":" "}]}}Content-Length: 222

{"jsonrpc":"2.0","id":186,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":186,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":307},"contentChanges":[{"range":{"start":{"line":8,"character":1},"end":{"line":8,"character":1}},"rangeLength":0,"text":" "}]}}Content-Length: 222

{"jsonrpc":"2.0","id":187,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":187,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":307}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":308},"contentChanges":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":2}},"rangeLength":0,"text":"p"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":188,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 395

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'p'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":188,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":189,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 40501

{"id":189,"result":{"isIncomplete":true,"items":[{"label":"•pin_size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3eff2eb1pin_size_t","filterText":"pin_size_t","insertText":"pin_size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pin_size_t"}},{"label":" PinMode","kind":8,"sortText":"3f17ae13PinMode","filterText":"PinMode","insertText":"PinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PinMode"}},{"label":" pinMode(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"Redeclare Common.h functions with the updated PinMode"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pinMode($0)"}},{"label":"•pinMode(pin_size_t pinNumber, int mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Compat.h\"`"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})"}},{"label":"•pinMode(NinaPin pin, PinMode mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\* FUNCTION DECLARATION  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})"}},{"label":"•PinName","kind":8,"documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"3f5d4142PinName","filterText":"PinName","insertText":"PinName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PinName"}},{"label":"•Print","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Print.h\"`"},"sortText":"3fdbfc9cPrint","filterText":"Print","insertText":"Print","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"Print"}},{"label":"•PluggableUSBDevice","kind":7,"documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`  \nforward declaration"},"sortText":"3ff74b80PluggableUSBDevice","filterText":"PluggableUSBDevice","insertText":"PluggableUSBDevice","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PluggableUSBDevice"}},{"label":"•PluggableUSBModule","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`"},"sortText":"3ff8a156PluggableUSBModule","filterText":"PluggableUSBModule","insertText":"PluggableUSBModule","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PluggableUSBModule"}},{"label":"•PluggableUSB_","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`"},"sortText":"3ff8a156PluggableUSB_","filterText":"PluggableUSB_","insertText":"PluggableUSB_","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PluggableUSB_"}},{"label":"•Printable","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/Printable.h\"`  \nThe Printable class provides a way for new classes to allow themselves to be printed.  \nBy deriving from Printable and implementing the printTo method, it will then be possible for users to print out instances of this class by passing them into the usual Print::print and Print::println methods."},"sortText":"3ff8a156Printable","filterText":"Printable","insertText":"Printable","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"Printable"}},{"label":"•PINCOUNT_fn()","kind":3,"detail":"unsigned int","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"403ec9efPINCOUNT_fn","filterText":"PINCOUNT_fn","insertText":"PINCOUNT_fn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PINCOUNT_fn()"}},{"label":" PullNone","kind":20,"detail":"PinMode","sortText":"403f858bPullNone","filterText":"PullNone","insertText":"PullNone","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PullNone"}},{"label":" PushPullNoPull","kind":20,"detail":"PinMode","sortText":"403f858bPushPullNoPull","filterText":"PushPullNoPull","insertText":"PushPullNoPull","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PushPullNoPull"}},{"label":" PushPullPullDown","kind":20,"detail":"PinMode","sortText":"403f858bPushPullPullDown","filterText":"PushPullPullDown","insertText":"PushPullPullDown","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PushPullPullDown"}},{"label":" PushPullPullUp","kind":20,"detail":"PinMode","sortText":"403f858bPushPullPullUp","filterText":"PushPullPullUp","insertText":"PushPullPullUp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PushPullPullUp"}},{"label":"•PinStatus","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40532740PinStatus","filterText":"PinStatus","insertText":"PinStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PinStatus"}},{"label":"•pwm_clkdiv_mode","kind":13,"documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief PWM Divider mode settings  \n\\\\ingroup hardware_pwm"},"sortText":"40557123pwm_clkdiv_mode","filterText":"pwm_clkdiv_mode","insertText":"pwm_clkdiv_mode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwm_clkdiv_mode"}},{"label":"•pwm_set_output_polarity(uint slice_num, bool a, bool b)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM output polarity  \n\\\\ingroup hardware_pwm  \n\\\\param slice_num PWM slice number  \n\\\\param a true to invert output A  \n\\\\param b true to invert output B"},"sortText":"40557123pwm_set_output_polarity","filterText":"pwm_set_output_polarity","insertText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})"}},{"label":"•PluggableUSBD()","kind":3,"detail":"arduino::PluggableUSBDevice \u0026","documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`"},"sortText":"405adf97PluggableUSBD","filterText":"PluggableUSBD","insertText":"PluggableUSBD()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PluggableUSBD()"}},{"label":"•PluggableUSB()","kind":3,"detail":"arduino::PluggableUSB_ \u0026","documentation":{"kind":"markdown","value":"From `\"api/PluggableUSB.h\"`  \nReplacement for global singleton.  \nThis function prevents static-initialization-order-fiasco https://isocpp.org/wiki/faq/ctors#static-init-order-on-first-use"},"sortText":"405d8e68PluggableUSB","filterText":"PluggableUSB","insertText":"PluggableUSB()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PluggableUSB()"}},{"label":"•p13","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p13","filterText":"p13","insertText":"p13","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"p13"}},{"label":"•p14","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p14","filterText":"p14","insertText":"p14","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"p14"}},{"label":"•p2","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p2","filterText":"p2","insertText":"p2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"p2"}},{"label":"•p20","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p20","filterText":"p20","insertText":"p20","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"p20"}},{"label":"•p27","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p27","filterText":"p27","insertText":"p27","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"p27"}},{"label":"•p6","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p6","filterText":"p6","insertText":"p6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"p6"}},{"label":"•p7","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p7","filterText":"p7","insertText":"p7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"p7"}},{"label":"•p8","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68p8","filterText":"p8","insertText":"p8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"p8"}},{"label":"•pulseIn(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`  \ngeneric, overloaded implementations"},"sortText":"405d8e68pulseIn","filterText":"pulseIn","insertText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":"•pulseInLong(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68pulseInLong","filterText":"pulseInLong","insertText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":" PinNameToIndex(PinName P)","kind":3,"detail":"int","sortText":"4068a03fPinNameToIndex","filterText":"PinNameToIndex","insertText":"PinNameToIndex(${1:PinName P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PinNameToIndex(${1:PinName P})"}},{"label":"•internal::PluggableUSBModule","kind":7,"documentation":{"kind":"markdown","value":"From `\"USB/PluggableUSBDevice.h\"`"},"sortText":"406cec00PluggableUSBModule","filterText":"PluggableUSBModule","insertText":"internal::PluggableUSBModule","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"internal::PluggableUSBModule"}},{"label":" perror(const char *)","kind":3,"detail":"void","sortText":"4071b066perror","filterText":"perror","insertText":"perror(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"perror(${1:const char *})"}},{"label":"•prog_char","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_char","filterText":"prog_char","insertText":"prog_char","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"prog_char"}},{"label":"•prog_int16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_int16_t","filterText":"prog_int16_t","insertText":"prog_int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"prog_int16_t"}},{"label":"•prog_int8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_int8_t","filterText":"prog_int8_t","insertText":"prog_int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"prog_int8_t"}},{"label":"•prog_uchar","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uchar","filterText":"prog_uchar","insertText":"prog_uchar","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"prog_uchar"}},{"label":"•prog_uint16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uint16_t","filterText":"prog_uint16_t","insertText":"prog_uint16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"prog_uint16_t"}},{"label":"•prog_uint32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_uint32_t","filterText":"prog_uint32_t","insertText":"prog_uint32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"prog_uint32_t"}},{"label":"•prog_void","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4071b066prog_void","filterText":"prog_void","insertText":"prog_void","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"prog_void"}},{"label":" putc(int, FILE *)","kind":3,"detail":"int","sortText":"4071b066putc","filterText":"putc","insertText":"putc(${1:int}, ${2:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"putc(${1:int}, ${2:FILE *})"}},{"label":" puts(const char *)","kind":3,"detail":"int","sortText":"4071b066puts","filterText":"puts","insertText":"puts(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"puts(${1:const char *})"}},{"label":" putw(int, FILE *)","kind":3,"detail":"int","sortText":"4071b066putw","filterText":"putw","insertText":"putw(${1:int}, ${2:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"putw(${1:int}, ${2:FILE *})"}},{"label":" posix_memalign(void **, size_t, size_t)","kind":3,"detail":"int","sortText":"40791bfcposix_memalign","filterText":"posix_memalign","insertText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})"}},{"label":" powf(float, float)","kind":3,"detail":"float","sortText":"40791bfcpowf","filterText":"powf","insertText":"powf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"powf(${1:float}, ${2:float})"}},{"label":"•PIN_INPUT","kind":20,"detail":"PinDirection","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPIN_INPUT","filterText":"PIN_INPUT","insertText":"PIN_INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PIN_INPUT"}},{"label":"•PWM_1","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_1","filterText":"PWM_1","insertText":"PWM_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PWM_1"}},{"label":"•PWM_4","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_4","filterText":"PWM_4","insertText":"PWM_4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PWM_4"}},{"label":"•PWM_5","kind":20,"detail":"PWMName","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"407f2f3bPWM_5","filterText":"PWM_5","insertText":"PWM_5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PWM_5"}},{"label":"•pselect(int __n, _types_fd_set *__readfds, _types_fd_set *__writefds, _types_fd_set *__exceptfds, const struct timespec *__timeout, const sigset_t *__set)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/select.h\u003e`"},"sortText":"407f2f3bpselect","filterText":"pselect","insertText":"pselect(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:const struct timespec *__timeout}, ${6:const sigset_t *__set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pselect(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:const struct timespec *__timeout}, ${6:const sigset_t *__set})"}},{"label":" pthread_attr_t","kind":8,"sortText":"407f2f3bpthread_attr_t","filterText":"pthread_attr_t","insertText":"pthread_attr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pthread_attr_t"}},{"label":" pthread_key_t","kind":8,"documentation":{"kind":"markdown","value":"Keys"},"sortText":"407f2f3bpthread_key_t","filterText":"pthread_key_t","insertText":"pthread_key_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pthread_key_t"}},{"label":" pthread_mutex_t","kind":8,"sortText":"407f2f3bpthread_mutex_t","filterText":"pthread_mutex_t","insertText":"pthread_mutex_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pthread_mutex_t"}},{"label":" pthread_mutexattr_t","kind":8,"sortText":"407f2f3bpthread_mutexattr_t","filterText":"pthread_mutexattr_t","insertText":"pthread_mutexattr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pthread_mutexattr_t"}},{"label":" pthread_once_t","kind":8,"sortText":"407f2f3bpthread_once_t","filterText":"pthread_once_t","insertText":"pthread_once_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pthread_once_t"}},{"label":" PICO_FLASH_SIZE_BYTES","kind":1,"sortText":"40800000PICO_FLASH_SIZE_BYTES","filterText":"PICO_FLASH_SIZE_BYTES","insertText":"PICO_FLASH_SIZE_BYTES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PICO_FLASH_SIZE_BYTES"}},{"label":" PICO_NO_BINARY_INFO","kind":1,"sortText":"40800000PICO_NO_BINARY_INFO","filterText":"PICO_NO_BINARY_INFO","insertText":"PICO_NO_BINARY_INFO","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PICO_NO_BINARY_INFO"}},{"label":" PICO_ON_DEVICE","kind":1,"sortText":"40800000PICO_ON_DEVICE","filterText":"PICO_ON_DEVICE","insertText":"PICO_ON_DEVICE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PICO_ON_DEVICE"}},{"label":" PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","kind":1,"sortText":"40800000PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","filterText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","insertText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PICO_RP2040_USB_DEVICE_ENUMERATION_FIX"}},{"label":" PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","kind":1,"sortText":"40800000PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","filterText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","insertText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PICO_TIME_DEFAULT_ALARM_POOL_DISABLED"}},{"label":" PICO_UART_ENABLE_CRLF_SUPPORT","kind":1,"sortText":"40800000PICO_UART_ENABLE_CRLF_SUPPORT","filterText":"PICO_UART_ENABLE_CRLF_SUPPORT","insertText":"PICO_UART_ENABLE_CRLF_SUPPORT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PICO_UART_ENABLE_CRLF_SUPPORT"}},{"label":"•POLY_16BIT_IBM","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx16+x15+x2+1"},"sortText":"4088511fPOLY_16BIT_IBM","filterText":"POLY_16BIT_IBM","insertText":"POLY_16BIT_IBM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"POLY_16BIT_IBM"}},{"label":"•POLY_7BIT_SD","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx7+x3+1"},"sortText":"4088511fPOLY_7BIT_SD","filterText":"POLY_7BIT_SD","insertText":"POLY_7BIT_SD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"POLY_7BIT_SD"}},{"label":"•POLY_8BIT_CCITT","kind":20,"detail":"crc_polynomial","documentation":{"kind":"markdown","value":"From `\"crc_api.h\"`  \nx8+x2+x+1"},"sortText":"4088511fPOLY_8BIT_CCITT","filterText":"POLY_8BIT_CCITT","insertText":"POLY_8BIT_CCITT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"POLY_8BIT_CCITT"}},{"label":"•ParityEven","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityEven","filterText":"ParityEven","insertText":"ParityEven","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"ParityEven"}},{"label":"•ParityNone","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityNone","filterText":"ParityNone","insertText":"ParityNone","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"ParityNone"}},{"label":"•ParityOdd","kind":20,"detail":"SerialParity","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4088511fParityOdd","filterText":"ParityOdd","insertText":"ParityOdd","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"ParityOdd"}},{"label":"•PinList","kind":8,"documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fPinList","filterText":"PinList","insertText":"PinList","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PinList"}},{"label":"•Port0","kind":20,"detail":"PortName","documentation":{"kind":"markdown","value":"From `\"PortNames.h\"`"},"sortText":"4088511fPort0","filterText":"Port0","insertText":"Port0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"Port0"}},{"label":"•PortName","kind":8,"documentation":{"kind":"markdown","value":"From `\"PortNames.h\"`"},"sortText":"4088511fPortName","filterText":"PortName","insertText":"PortName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PortName"}},{"label":"•pin_function(PinName pin, int function)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpin_function","filterText":"pin_function","insertText":"pin_function(${1:PinName pin}, ${2:int function})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pin_function(${1:PinName pin}, ${2:int function})"}},{"label":"•pwmout_period_ms(pwmout_t *obj, int ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM period specified in miliseconds, keeping the duty cycle the same  \n@param obj The pwmout object  \n@param ms The milisecond period"},"sortText":"4088511fpwmout_period_ms","filterText":"pwmout_period_ms","insertText":"pwmout_period_ms(${1:pwmout_t *obj}, ${2:int ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwmout_period_ms(${1:pwmout_t *obj}, ${2:int ms})"}},{"label":"•pwmout_period_us(pwmout_t *obj, int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM period specified in microseconds, keeping the duty cycle the same  \n@param obj The pwmout object  \n@param us The microsecond period"},"sortText":"4088511fpwmout_period_us","filterText":"pwmout_period_us","insertText":"pwmout_period_us(${1:pwmout_t *obj}, ${2:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwmout_period_us(${1:pwmout_t *obj}, ${2:int us})"}},{"label":"•pwmout_pulsewidth(pwmout_t *obj, float seconds)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM pulsewidth specified in seconds, keeping the period the same.  \n@param obj The pwmout object  \n@param seconds The floating-point pulsewidth in seconds"},"sortText":"4088511fpwmout_pulsewidth","filterText":"pwmout_pulsewidth","insertText":"pwmout_pulsewidth(${1:pwmout_t *obj}, ${2:float seconds})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwmout_pulsewidth(${1:pwmout_t *obj}, ${2:float seconds})"}},{"label":"•pwmout_pulsewidth_us(pwmout_t *obj, int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nSet the PWM pulsewidth specified in microseconds, keeping the period the same.  \n@param obj The pwmout object  \n@param us The floating-point pulsewidth in microseconds"},"sortText":"4088511fpwmout_pulsewidth_us","filterText":"pwmout_pulsewidth_us","insertText":"pwmout_pulsewidth_us(${1:pwmout_t *obj}, ${2:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwmout_pulsewidth_us(${1:pwmout_t *obj}, ${2:int us})"}},{"label":"•pwmout_read(pwmout_t *obj)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nRead the current float-point output duty-cycle  \n@param obj The pwmout object  \n@return A floating-point output duty-cycle"},"sortText":"4088511fpwmout_read","filterText":"pwmout_read","insertText":"pwmout_read(${1:pwmout_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwmout_read(${1:pwmout_t *obj})"}},{"label":"•pwmout_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nPwmout hal structure. pwmout_s is declared in the target's hal"},"sortText":"4088511fpwmout_t","filterText":"pwmout_t","insertText":"pwmout_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwmout_t"}},{"label":"•std::pow(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aapow","filterText":"pow","insertText":"std::pow($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"std::pow($0)"}},{"label":"•PWM_CHAN_B","kind":20,"detail":"pwm_chan","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`"},"sortText":"409c96d9PWM_CHAN_B","filterText":"PWM_CHAN_B","insertText":"PWM_CHAN_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PWM_CHAN_B"}},{"label":"•PWM_DIV_B_HIGH","kind":20,"detail":"pwm_clkdiv_mode","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \nFractional divider is gated by the PWM B pin"},"sortText":"409c96d9PWM_DIV_B_HIGH","filterText":"PWM_DIV_B_HIGH","insertText":"PWM_DIV_B_HIGH","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"PWM_DIV_B_HIGH"}},{"label":"•panic(const char *fmt, ...)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"platform.h\"`"},"sortText":"409c96d9panic","filterText":"panic","insertText":"panic(${1:const char *fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"panic(${1:const char *fmt, ...})"}},{"label":"•pwm_config_set_clkdiv(pwm_config *c, float div)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set clock divider in a PWM configuration  \n\\\\ingroup hardware_pwm  \n\\\\param c PWM configuration struct to modify  \n\\\\param div Value to divide counting rate by. Must be greater than or equal to 1.  \nIf the divide mode is free-running, the PWM counter runs at clk_sys / div.  \nOtherwise, the divider reduces the rate of events seen on the B pin input (level or edge) before passing them on to the PWM counter."},"sortText":"409c96d9pwm_config_set_clkdiv","filterText":"pwm_config_set_clkdiv","insertText":"pwm_config_set_clkdiv(${1:pwm_config *c}, ${2:float div})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwm_config_set_clkdiv(${1:pwm_config *c}, ${2:float div})"}},{"label":"•pwm_config_set_wrap(pwm_config *c, uint16_t wrap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM counter wrap value in a PWM configuration  \n\\\\ingroup hardware_pwm  \nSet the highest value the counter will reach before returning to 0. Also known as TOP.  \n\\\\param c PWM configuration struct to modify  \n\\\\param wrap Value to set wrap to"},"sortText":"409c96d9pwm_config_set_wrap","filterText":"pwm_config_set_wrap","insertText":"pwm_config_set_wrap(${1:pwm_config *c}, ${2:uint16_t wrap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwm_config_set_wrap(${1:pwm_config *c}, ${2:uint16_t wrap})"}},{"label":"•pwm_get_default_config()","kind":3,"detail":"pwm_config","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Get a set of default values for PWM configuration  \n\\\\ingroup hardware_pwm  \nPWM config is free running at system clock speed, no phase correction, wrapping at 0xffff,  \nwith standard polarities for channels A and B.  \n\\\\return Set of default values."},"sortText":"409c96d9pwm_get_default_config","filterText":"pwm_get_default_config","insertText":"pwm_get_default_config()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwm_get_default_config()"}},{"label":"•pwm_get_irq_status_mask()","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Get PWM interrupt status, raw  \n\\\\ingroup hardware_pwm  \n\\\\return Bitmask of all PWM interrupts currently set"},"sortText":"409c96d9pwm_get_irq_status_mask","filterText":"pwm_get_irq_status_mask","insertText":"pwm_get_irq_status_mask()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwm_get_irq_status_mask()"}},{"label":"•pwm_gpio_to_channel(uint gpio)","kind":3,"detail":"uint","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Determine the PWM channel that is attached to the specified GPIO.  \n\\\\ingroup hardware_pwm  \nEach slice 0 to 7 has two channels, A and B.  \n\\\\return The PWM channel that controls the specified GPIO."},"sortText":"409c96d9pwm_gpio_to_channel","filterText":"pwm_gpio_to_channel","insertText":"pwm_gpio_to_channel(${1:uint gpio})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwm_gpio_to_channel(${1:uint gpio})"}},{"label":"•pwm_set_mask_enabled(uint32_t mask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Enable/Disable multiple PWM slices simultaneously  \n\\\\ingroup hardware_pwm  \n\\\\param mask Bitmap of PWMs to enable/disable. Bits 0 to 7 enable slices 0-7 respectively"},"sortText":"409c96d9pwm_set_mask_enabled","filterText":"pwm_set_mask_enabled","insertText":"pwm_set_mask_enabled(${1:uint32_t mask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwm_set_mask_enabled(${1:uint32_t mask})"}},{"label":"•pwm_set_phase_correct(uint slice_num, bool phase_correct)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Set PWM phase correct on/off  \n\\\\ingroup hardware_pwm  \n\\\\param slice_num PWM slice number  \n\\\\param phase_correct true to set phase correct modulation, false to set trailing edge  \nSetting phase control to true means that instead of wrapping back to zero when the wrap point is reached,  \nthe PWM starts counting back down. The output frequency is halved when phase-correct mode is enabled."},"sortText":"409c96d9pwm_set_phase_correct","filterText":"pwm_set_phase_correct","insertText":"pwm_set_phase_correct(${1:uint slice_num}, ${2:bool phase_correct})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwm_set_phase_correct(${1:uint slice_num}, ${2:bool phase_correct})"}},{"label":"•pwm_slice_hw","kind":22,"documentation":{"kind":"markdown","value":"From `\"structs/pwm.h\"`"},"sortText":"40a4b801pwm_slice_hw","filterText":"pwm_slice_hw","insertText":"pwm_slice_hw","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"pwm_slice_hw"}},{"label":"•std::perror","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bperror","filterText":"perror","insertText":"std::perror","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"std::perror"}},{"label":"•std::printf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bprintf","filterText":"printf","insertText":"std::printf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"std::printf"}},{"label":"•std::putc","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40a8609bputc","filterText":"putc","insertText":"std::putc","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"std::putc"}},{"label":"•std::partial_sort(_RAIter, _RAIter, _RAIter, _Compare)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partial_sort","filterText":"partial_sort","insertText":"std::partial_sort(${1:_RAIter}, ${2:_RAIter}, ${3:_RAIter}, ${4:_Compare})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"std::partial_sort(${1:_RAIter}, ${2:_RAIter}, ${3:_RAIter}, ${4:_Compare})"}},{"label":"•std::partial_sort_copy(_IIter, _IIter, _RAIter, _RAIter)","kind":3,"detail":"_RAIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nnth_element partial_sort"},"sortText":"40a94eb8partial_sort_copy","filterText":"partial_sort_copy","insertText":"std::partial_sort_copy(${1:_IIter}, ${2:_IIter}, ${3:_RAIter}, ${4:_RAIter})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"std::partial_sort_copy(${1:_IIter}, ${2:_IIter}, ${3:_RAIter}, ${4:_RAIter})"}},{"label":"•std::partition(_BIter, _BIter, _Predicate)","kind":3,"detail":"_BIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partition","filterText":"partition","insertText":"std::partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"std::partition(${1:_BIter}, ${2:_BIter}, ${3:_Predicate})"}},{"label":"•std::partition_point(_FIter, _FIter, _Predicate)","kind":3,"detail":"_FIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8partition_point","filterText":"partition_point","insertText":"std::partition_point(${1:_FIter}, ${2:_FIter}, ${3:_Predicate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"std::partition_point(${1:_FIter}, ${2:_FIter}, ${3:_Predicate})"}},{"label":"•std::pop_heap(_RAIter, _RAIter, _Compare)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8pop_heap","filterText":"pop_heap","insertText":"std::pop_heap(${1:_RAIter}, ${2:_RAIter}, ${3:_Compare})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"std::pop_heap(${1:_RAIter}, ${2:_RAIter}, ${3:_Compare})"}},{"label":"•std::prev(_BidirectionalIterator __x, typename iterator_traits\u003c_BidirectionalIterator\u003e::difference_type __n = 1)","kind":3,"detail":"_BidirectionalIterator","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`"},"sortText":"40a94eb8prev","filterText":"prev","insertText":"std::prev(${1:_BidirectionalIterator __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"std::prev(${1:_BidirectionalIterator __x})"}},{"label":"•std::ptrdiff_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`"},"sortText":"40a94eb8ptrdiff_t","filterText":"ptrdiff_t","insertText":"std::ptrdiff_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":3}},"newText":"std::ptrdiff_t"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":309},"contentChanges":[{"range":{"start":{"line":8,"character":3},"end":{"line":8,"character":3}},"rangeLength":0,"text":"i"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":190,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 396

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pi'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":190,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":310},"contentChanges":[{"range":{"start":{"line":8,"character":4},"end":{"line":8,"character":4}},"rangeLength":0,"text":"n"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":190}}Content-Length: 222

{"jsonrpc":"2.0","id":191,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 597

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pin'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":191,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":192,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":5},"context":{"triggerKind":3}}}
>>>
Content-Length: 47964

{"id":192,"result":{"isIncomplete":true,"items":[{"label":"•pin_size_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3eff2eb1pin_size_t","filterText":"pin_size_t","insertText":"pin_size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pin_size_t"}},{"label":" PinMode","kind":8,"documentation":{"kind":"markdown","value":"Define the PinName symbol to be used in all the contexts"},"sortText":"3f17ae13PinMode","filterText":"PinMode","insertText":"PinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PinMode"}},{"label":" pinMode(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"Redeclare Common.h functions with the updated PinMode"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinMode($0)"}},{"label":"•pinMode(pin_size_t pinNumber, int mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Compat.h\"`"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})"}},{"label":"•pinMode(pin_size_t pinNumber, ArduinoPinMode pinMode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:pin_size_t pinNumber}, ${2:ArduinoPinMode pinMode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinMode(${1:pin_size_t pinNumber}, ${2:ArduinoPinMode pinMode})"}},{"label":"•pinMode(NinaPin pin, PinMode mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\* FUNCTION DECLARATION  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})"}},{"label":"•PinName","kind":8,"documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"3f5d4142PinName","filterText":"PinName","insertText":"PinName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PinName"}},{"label":"•ArduinoPinMode","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3f787ae0ArduinoPinMode","filterText":"ArduinoPinMode","insertText":"ArduinoPinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"ArduinoPinMode"}},{"label":"•MbedPinMode","kind":8,"documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"3f787ae0MbedPinMode","filterText":"MbedPinMode","insertText":"MbedPinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"MbedPinMode"}},{"label":"•NinaPin","kind":7,"documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"3fcb4e81NinaPin","filterText":"NinaPin","insertText":"NinaPin","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"NinaPin"}},{"label":" NinaPin(…)","kind":4,"detail":"[3 overloads]","sortText":"3fdbbbbbNinaPin","filterText":"NinaPin","insertText":"NinaPin($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"NinaPin($0)"}},{"label":"•pin_mode(PinName pin, PinMode mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"40463cd8pin_mode","filterText":"pin_mode","insertText":"pin_mode(${1:PinName pin}, ${2:PinMode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pin_mode(${1:PinName pin}, ${2:PinMode mode})"}},{"label":"•PinStatus","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40532740PinStatus","filterText":"PinStatus","insertText":"PinStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PinStatus"}},{"label":" PinDescription","kind":8,"documentation":{"kind":"markdown","value":"Types used for the table below"},"sortText":"405d8e68PinDescription","filterText":"PinDescription","insertText":"PinDescription","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PinDescription"}},{"label":"•PIN_OUTPUT","kind":20,"detail":"PinDirection","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"405efb0aPIN_OUTPUT","filterText":"PIN_OUTPUT","insertText":"PIN_OUTPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_OUTPUT"}},{"label":"•PINCOUNT_fn()","kind":3,"detail":"unsigned int","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"405efd9cPINCOUNT_fn","filterText":"PINCOUNT_fn","insertText":"PINCOUNT_fn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PINCOUNT_fn()"}},{"label":" PinNameToIndex(PinName P)","kind":3,"detail":"int","sortText":"4068a03fPinNameToIndex","filterText":"PinNameToIndex","insertText":"PinNameToIndex(${1:PinName P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PinNameToIndex(${1:PinName P})"}},{"label":"•pulseIn(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`  \ngeneric, overloaded implementations"},"sortText":"4078a156pulseIn","filterText":"pulseIn","insertText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":"•pulseInLong(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"4078a156pulseInLong","filterText":"pulseInLong","insertText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":" PinMode","kind":1,"sortText":"407cc3c8PinMode","filterText":"PinMode","insertText":"PinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PinMode"}},{"label":"•PinDirection","kind":8,"documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`  \nDefines to be used by application"},"sortText":"407f2f3bPinDirection","filterText":"PinDirection","insertText":"PinDirection","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PinDirection"}},{"label":"•digitalPinToPinName(pin_size_t P)","kind":3,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"407f7690digitalPinToPinName","filterText":"digitalPinToPinName","insertText":"digitalPinToPinName(${1:pin_size_t P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"digitalPinToPinName(${1:pin_size_t P})"}},{"label":" pulseIn(PinName pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","sortText":"4083b5bdpulseIn","filterText":"pulseIn","insertText":"pulseIn(${1:PinName pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pulseIn(${1:PinName pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":" pulseInLong(PinName pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","sortText":"4083b5bdpulseInLong","filterText":"pulseInLong","insertText":"pulseInLong(${1:PinName pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pulseInLong(${1:PinName pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":"•PinList","kind":8,"documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fPinList","filterText":"PinList","insertText":"PinList","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PinList"}},{"label":"•PinMap","kind":8,"documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fPinMap","filterText":"PinMap","insertText":"PinMap","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PinMap"}},{"label":"•pin_function(PinName pin, int function)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpin_function","filterText":"pin_function","insertText":"pin_function(${1:PinName pin}, ${2:int function})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pin_function(${1:PinName pin}, ${2:int function})"}},{"label":"•pinmap_find_function(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_find_function","filterText":"pinmap_find_function","insertText":"pinmap_find_function(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_find_function(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_find_peripheral(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_find_peripheral","filterText":"pinmap_find_peripheral","insertText":"pinmap_find_peripheral(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_find_peripheral(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_find_peripheral_pins(const PinList *whitelist, const PinList *blacklist, int per, const PinMap *const *maps, PinName **pins, uint32_t count)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nFind a combination of pins suitable for use given the constraints  \nThis function finds pins which meet these specific properties:  \n\\- The pin is part of the form factor  \n\\- The pin is not in the restricted list  \n\\- The pin is contained within the respective pinmap  \n\\- The pin belongs to the given peripheral  \n\\- Each pin found is distinct; in the example below mosi and miso will never be assigned the same pin  \nExample:  \n@code  \n#include \"mbed.h\"  \n#include \"pinmap.h\"  \nint main() { int per = spi_master_cs_pinmap()-\u003eperipheral;  \nconst PinList \\*pins_ff = pinmap_ff_default_pins();  \nconst PinList \\*pins_avoid = pinmap_restricted_pins();  \nPinName mosi = NC;  \nPinName miso = NC;  \nPinName sclk = NC;  \nPinName ssel = NC;  \nconst PinMap \\*maps[] = { spi_master_mosi_pinmap(),  \nspi_master_miso_pinmap(),  \nspi_master_clk_pinmap(),  \nspi_master_cs_pinmap() };  \nPinName \\*pins[] = { \u0026mosi,  \n\u0026miso,  \n\u0026sclk,  \n\u0026ssel };  \nif (pinmap_find_peripheral_pins(pins_ff, pins_avoid, per, maps, pins, sizeof(maps) / sizeof(maps[0]))) { printf(\"Found SPI pins to test instance %i with:\\\\n\" \" mosi=%s\\\\n\" \" miso=%s\\\\n\" \" sclk=%s\\\\n\" \" ssel=%s\\\\n\", per,  \npinmap_ff_default_pin_to_string(mosi),  \npinmap_ff_default_pin_to_string(miso),  \npinmap_ff_default_pin_to_string(sclk),  \npinmap_ff_default_pin_to_string(ssel));  \n} else { printf(\"Could not find SPI combination to test %i\\\\n\", per);  \n} return 0;  \n}  \n@endcode  \n@param whitelist List of pins to choose from  \n@param blacklist List of pins which cannot be used  \n@param per Peripheral to which the pins belong  \n@param maps An array of pin maps to select from  \n@param pins An array of pins to find. Pins already set to a value will be left unchanged. Only pins initialized to NC will be updated by this function  \n@param count The size of maps and pins  \n@return true if a suitable combination of pins was found and written to the pins array, otherwise false"},"sortText":"4088511fpinmap_find_peripheral_pins","filterText":"pinmap_find_peripheral_pins","insertText":"pinmap_find_peripheral_pins(${1:const PinList *whitelist}, ${2:const PinList *blacklist}, ${3:int per}, ${4:const PinMap *const *maps}, ${5:PinName **pins}, ${6:uint32_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_find_peripheral_pins(${1:const PinList *whitelist}, ${2:const PinList *blacklist}, ${3:int per}, ${4:const PinMap *const *maps}, ${5:PinName **pins}, ${6:uint32_t count})"}},{"label":"•pinmap_function(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_function","filterText":"pinmap_function","insertText":"pinmap_function(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_function(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_gpio_restricted_pins()","kind":3,"detail":"const PinList *","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nGet the pin list of pins to avoid during GPIO/GPIO_IRQ testing  \nThe GPIO restricted pin list is used to indicate to testing that a pin should be skipped due to some caveat about it.  \nTargets should override the weak implementation of this function if they have peripherals which should be skipped during testing.  \n@note This is special case only for GPIO/GPIO_IRQ tests because targets do not provide pin-maps for GPIO.  \n@return Pointer to a peripheral list of peripheral to avoid"},"sortText":"4088511fpinmap_gpio_restricted_pins","filterText":"pinmap_gpio_restricted_pins","insertText":"pinmap_gpio_restricted_pins()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_gpio_restricted_pins()"}},{"label":"•pinmap_list_has_peripheral(const PeripheralList *list, int peripheral)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nCheck if the peripheral is in the list  \n@param list peripheral list to check  \n@param peripheral peripheral to check for in the list  \n@return true if the peripheral is in the list, false otherwise"},"sortText":"4088511fpinmap_list_has_peripheral","filterText":"pinmap_list_has_peripheral","insertText":"pinmap_list_has_peripheral(${1:const PeripheralList *list}, ${2:int peripheral})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_list_has_peripheral(${1:const PeripheralList *list}, ${2:int peripheral})"}},{"label":"•pinmap_list_has_pin(const PinList *list, PinName pin)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nCheck if the pin is in the list  \n@param list pin list to check  \n@param pin pin to check for in the list  \n@return true if the pin is in the list, false otherwise"},"sortText":"4088511fpinmap_list_has_pin","filterText":"pinmap_list_has_pin","insertText":"pinmap_list_has_pin(${1:const PinList *list}, ${2:PinName pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_list_has_pin(${1:const PinList *list}, ${2:PinName pin})"}},{"label":"•pinmap_merge(uint32_t a, uint32_t b)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_merge","filterText":"pinmap_merge","insertText":"pinmap_merge(${1:uint32_t a}, ${2:uint32_t b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_merge(${1:uint32_t a}, ${2:uint32_t b})"}},{"label":"•pinmap_peripheral(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_peripheral","filterText":"pinmap_peripheral","insertText":"pinmap_peripheral(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_peripheral(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_pinout(PinName pin, const PinMap *map)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_pinout","filterText":"pinmap_pinout","insertText":"pinmap_pinout(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_pinout(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_restricted_pins()","kind":3,"detail":"const PinList *","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nGet the pin list of pins to avoid during testing  \nThe restricted pin list is used to indicate to testing that a pin should be skipped due to some caveat about it.  \nFor example, using CONSOLE_RX and CONSOLE_TX during tests will interfere with the test runner and should be avoided.  \nTargets should override the weak implementation of this function if they have additional pins which should be skipped during testing.  \n@return Pointer to a pin list of pins to avoid"},"sortText":"4088511fpinmap_restricted_pins","filterText":"pinmap_restricted_pins","insertText":"pinmap_restricted_pins()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_restricted_pins()"}},{"label":"•pinmap_uart_restricted_peripherals()","kind":3,"detail":"const PeripheralList *","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fpinmap_uart_restricted_peripherals","filterText":"pinmap_uart_restricted_peripherals","insertText":"pinmap_uart_restricted_peripherals()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pinmap_uart_restricted_peripherals()"}},{"label":"•prog_int16_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4092d0aaprog_int16_t","filterText":"prog_int16_t","insertText":"prog_int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"prog_int16_t"}},{"label":"•prog_int32_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4092d0aaprog_int32_t","filterText":"prog_int32_t","insertText":"prog_int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"prog_int32_t"}},{"label":"•prog_int64_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4092d0aaprog_int64_t","filterText":"prog_int64_t","insertText":"prog_int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"prog_int64_t"}},{"label":"•prog_int8_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4092d0aaprog_int8_t","filterText":"prog_int8_t","insertText":"prog_int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"prog_int8_t"}},{"label":"•PIN_INPUT","kind":20,"detail":"PinDirection","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"40a94eb8PIN_INPUT","filterText":"PIN_INPUT","insertText":"PIN_INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_INPUT"}},{"label":"•pwmout_init(pwmout_t *obj, PinName pin)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nInitialize the pwm out peripheral and configure the pin  \n@param obj The pwmout object to initialize  \n@param pin The pwmout pin to initialize"},"sortText":"40b198efpwmout_init","filterText":"pwmout_init","insertText":"pwmout_init(${1:pwmout_t *obj}, ${2:PinName pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pwmout_init(${1:pwmout_t *obj}, ${2:PinName pin})"}},{"label":"•pwmout_init_direct(pwmout_t *obj, const PinMap *pinmap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nInitialize the pwm out peripheral and configure the pin  \n@param obj The pwmout object to initialize  \n@param pinmap pointer to structure which holds static pinmap"},"sortText":"40b198efpwmout_init_direct","filterText":"pwmout_init_direct","insertText":"pwmout_init_direct(${1:pwmout_t *obj}, ${2:const PinMap *pinmap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pwmout_init_direct(${1:pwmout_t *obj}, ${2:const PinMap *pinmap})"}},{"label":"•PPPInterface","kind":7,"documentation":{"kind":"markdown","value":"From `\"NetworkInterface.h\"`"},"sortText":"40b86273PPPInterface","filterText":"PPPInterface","insertText":"PPPInterface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PPPInterface"}},{"label":" AnalogPinDescription","kind":8,"sortText":"40c27b78AnalogPinDescription","filterText":"AnalogPinDescription","insertText":"AnalogPinDescription","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"AnalogPinDescription"}},{"label":"•pwm_init(uint slice_num, pwm_config *c, bool start)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pwm.h\"`  \n\\\\brief Initialise a PWM with settings from a configuration object  \n\\\\ingroup hardware_pwm  \nUse the \\\\ref pwm_get_default_config() function to initialise a config structure, make changes as needed using the pwm_config\\_\\* functions, then call this function to set up the PWM.  \n\\\\param slice_num PWM slice number  \n\\\\param c The configuration to use  \n\\\\param start If true the PWM will be started running once configured. If false you will need to start manually using \\\\ref pwm_set_enabled() or \\\\ref pwm_set_mask_enabled()"},"sortText":"40c27db5pwm_init","filterText":"pwm_init","insertText":"pwm_init(${1:uint slice_num}, ${2:pwm_config *c}, ${3:bool start})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pwm_init(${1:uint slice_num}, ${2:pwm_config *c}, ${3:bool start})"}},{"label":" g_APinDescription","kind":6,"detail":"PinDescription []","documentation":{"kind":"markdown","value":"Pins table to be instantiated into variant.cpp"},"sortText":"40ca4952g_APinDescription","filterText":"g_APinDescription","insertText":"g_APinDescription","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"g_APinDescription"}},{"label":"•PINS_COUNT","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPINS_COUNT","filterText":"PINS_COUNT","insertText":"PINS_COUNT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PINS_COUNT"}},{"label":"•PIN_A0","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_A0","filterText":"PIN_A0","insertText":"PIN_A0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_A0"}},{"label":"•PIN_A1","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_A1","filterText":"PIN_A1","insertText":"PIN_A1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_A1"}},{"label":"•PIN_A2","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_A2","filterText":"PIN_A2","insertText":"PIN_A2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_A2"}},{"label":"•PIN_A3","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_A3","filterText":"PIN_A3","insertText":"PIN_A3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_A3"}},{"label":"•PIN_LED","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_LED","filterText":"PIN_LED","insertText":"PIN_LED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_LED"}},{"label":"•PIN_PDM_CLK","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_PDM_CLK","filterText":"PIN_PDM_CLK","insertText":"PIN_PDM_CLK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_PDM_CLK"}},{"label":"•PIN_PDM_DIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_PDM_DIN","filterText":"PIN_PDM_DIN","insertText":"PIN_PDM_DIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_PDM_DIN"}},{"label":"•PIN_SERIAL_RX","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_SERIAL_RX","filterText":"PIN_SERIAL_RX","insertText":"PIN_SERIAL_RX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_SERIAL_RX"}},{"label":"•PIN_SERIAL_TX","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_SERIAL_TX","filterText":"PIN_SERIAL_TX","insertText":"PIN_SERIAL_TX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_SERIAL_TX"}},{"label":"•PIN_SPI_MISO","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_SPI_MISO","filterText":"PIN_SPI_MISO","insertText":"PIN_SPI_MISO","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_SPI_MISO"}},{"label":"•PIN_SPI_MOSI","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_SPI_MOSI","filterText":"PIN_SPI_MOSI","insertText":"PIN_SPI_MOSI","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_SPI_MOSI"}},{"label":"•PIN_SPI_SCK","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_SPI_SCK","filterText":"PIN_SPI_SCK","insertText":"PIN_SPI_SCK","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_SPI_SCK"}},{"label":"•PIN_SPI_SS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_SPI_SS","filterText":"PIN_SPI_SS","insertText":"PIN_SPI_SS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_SPI_SS"}},{"label":"•PIN_WIRE_SCL","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_WIRE_SCL","filterText":"PIN_WIRE_SCL","insertText":"PIN_WIRE_SCL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_WIRE_SCL"}},{"label":"•PIN_WIRE_SDA","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40ee2eddPIN_WIRE_SDA","filterText":"PIN_WIRE_SDA","insertText":"PIN_WIRE_SDA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"PIN_WIRE_SDA"}},{"label":"•analogin_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"analogin_api.h\"`  \nGet the pins that support analogin  \nReturn a PinMap array of pins that support analogin. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40ef84a6analogin_pinmap","filterText":"analogin_pinmap","insertText":"analogin_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"analogin_pinmap()"}},{"label":"•gpio_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"gpio_api.h\"`  \nGet the pins that support all GPIO tests  \nReturn a PinMap array of pins that support GPIO. The array is terminated with {NC, NC, 0}.  \nTargets should override the weak implementation of this function to provide the actual pinmap for GPIO testing.  \n@return PinMap array"},"sortText":"40ef84a6gpio_pinmap","filterText":"gpio_pinmap","insertText":"gpio_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"gpio_pinmap()"}},{"label":"•i2c_pinmap_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`"},"sortText":"40ef84a6i2c_pinmap_t","filterText":"i2c_pinmap_t","insertText":"i2c_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"i2c_pinmap_t"}},{"label":"•pwmout_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nGet the pins that support PWM  \nReturn a PinMap array of pins that support PWM.  \nThe array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40ef84a6pwmout_pinmap","filterText":"pwmout_pinmap","insertText":"pwmout_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"pwmout_pinmap()"}},{"label":"•serial_pinmap_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"40ef84a6serial_pinmap_t","filterText":"serial_pinmap_t","insertText":"serial_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"serial_pinmap_t"}},{"label":"•serial_pinout_tx(PinName tx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nConfigure the TX pin for UART function.  \n@param tx The pin name used for TX"},"sortText":"40ef84a6serial_pinout_tx","filterText":"serial_pinout_tx","insertText":"serial_pinout_tx(${1:PinName tx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"serial_pinout_tx(${1:PinName tx})"}},{"label":"•spi_pinmap_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`"},"sortText":"40ef84a6spi_pinmap_t","filterText":"spi_pinmap_t","insertText":"spi_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"spi_pinmap_t"}},{"label":" g_AAnalogPinDescription","kind":6,"detail":"AnalogPinDescription []","sortText":"40f8a156g_AAnalogPinDescription","filterText":"g_AAnalogPinDescription","insertText":"g_AAnalogPinDescription","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"g_AAnalogPinDescription"}},{"label":"•gpio_irq_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"gpio_irq_api.h\"`  \nGet the pins that support all GPIO IRQ tests  \nReturn a PinMap array of pins that support GPIO IRQ.  \nThe array is terminated with {NC, NC, 0}.  \nTargets should override the weak implementation of this function to provide the actual pinmap for GPIO IRQ testing.  \n@return PinMap array"},"sortText":"4108511fgpio_irq_pinmap","filterText":"gpio_irq_pinmap","insertText":"gpio_irq_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"gpio_irq_pinmap()"}},{"label":"•serial_cts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nGet the pins that support Serial CTS  \nReturn a PinMap array of pins that support Serial CTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"4108511fserial_cts_pinmap","filterText":"serial_cts_pinmap","insertText":"serial_cts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"serial_cts_pinmap()"}},{"label":"•serial_fc_pinmap_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4108511fserial_fc_pinmap_t","filterText":"serial_fc_pinmap_t","insertText":"serial_fc_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"serial_fc_pinmap_t"}},{"label":"•serial_rts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nGet the pins that support Serial RTS  \nReturn a PinMap array of pins that support Serial RTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"4108511fserial_rts_pinmap","filterText":"serial_rts_pinmap","insertText":"serial_rts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"serial_rts_pinmap()"}},{"label":"•serial_rx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nGet the pins that support Serial RX  \nReturn a PinMap array of pins that support Serial RX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"4108511fserial_rx_pinmap","filterText":"serial_rx_pinmap","insertText":"serial_rx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"serial_rx_pinmap()"}},{"label":"•serial_tx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nGet the pins that support Serial TX  \nReturn a PinMap array of pins that support Serial TX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"4108511fserial_tx_pinmap","filterText":"serial_tx_pinmap","insertText":"serial_tx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"serial_tx_pinmap()"}},{"label":"•gpio_debug_pins_init()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"gpio.h\"`"},"sortText":"411c96d9gpio_debug_pins_init","filterText":"gpio_debug_pins_init","insertText":"gpio_debug_pins_init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"gpio_debug_pins_init()"}},{"label":"•i2c_master_scl_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nGet the pins that support I2C SCL  \nReturn a PinMap array of pins that support I2C SCL in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efi2c_master_scl_pinmap","filterText":"i2c_master_scl_pinmap","insertText":"i2c_master_scl_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"i2c_master_scl_pinmap()"}},{"label":"•i2c_master_sda_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nGet the pins that support I2C SDA  \nReturn a PinMap array of pins that support I2C SDA in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efi2c_master_sda_pinmap","filterText":"i2c_master_sda_pinmap","insertText":"i2c_master_sda_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"i2c_master_sda_pinmap()"}},{"label":"•i2c_slave_scl_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nGet the pins that support I2C SCL  \nReturn a PinMap array of pins that support I2C SCL in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efi2c_slave_scl_pinmap","filterText":"i2c_slave_scl_pinmap","insertText":"i2c_slave_scl_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"i2c_slave_scl_pinmap()"}},{"label":"•i2c_slave_sda_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nGet the pins that support I2C SDA  \nReturn a PinMap array of pins that support I2C SDA in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efi2c_slave_sda_pinmap","filterText":"i2c_slave_sda_pinmap","insertText":"i2c_slave_sda_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"i2c_slave_sda_pinmap()"}},{"label":"•spi_master_clk_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI CLK  \nReturn a PinMap array of pins that support SPI CLK in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efspi_master_clk_pinmap","filterText":"spi_master_clk_pinmap","insertText":"spi_master_clk_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"spi_master_clk_pinmap()"}},{"label":"•spi_master_cs_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI CS  \nReturn a PinMap array of pins that support SPI CS in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efspi_master_cs_pinmap","filterText":"spi_master_cs_pinmap","insertText":"spi_master_cs_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"spi_master_cs_pinmap()"}},{"label":"•spi_master_miso_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI MISO  \nReturn a PinMap array of pins that support SPI MISO in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efspi_master_miso_pinmap","filterText":"spi_master_miso_pinmap","insertText":"spi_master_miso_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"spi_master_miso_pinmap()"}},{"label":"•spi_master_mosi_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI MOSI  \nReturn a PinMap array of pins that support SPI MOSI in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efspi_master_mosi_pinmap","filterText":"spi_master_mosi_pinmap","insertText":"spi_master_mosi_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"spi_master_mosi_pinmap()"}},{"label":"•spi_slave_clk_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI CLK  \nReturn a PinMap array of pins that support SPI CLK in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efspi_slave_clk_pinmap","filterText":"spi_slave_clk_pinmap","insertText":"spi_slave_clk_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"spi_slave_clk_pinmap()"}},{"label":"•spi_slave_cs_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI CS  \nReturn a PinMap array of pins that support SPI CS in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efspi_slave_cs_pinmap","filterText":"spi_slave_cs_pinmap","insertText":"spi_slave_cs_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"spi_slave_cs_pinmap()"}},{"label":"•spi_slave_miso_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI MISO  \nReturn a PinMap array of pins that support SPI MISO in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efspi_slave_miso_pinmap","filterText":"spi_slave_miso_pinmap","insertText":"spi_slave_miso_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"spi_slave_miso_pinmap()"}},{"label":"•spi_slave_mosi_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI MOSI  \nReturn a PinMap array of pins that support SPI MOSI in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"413198efspi_slave_mosi_pinmap","filterText":"spi_slave_mosi_pinmap","insertText":"spi_slave_mosi_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"spi_slave_mosi_pinmap()"}},{"label":"•mbedtls_pk_info_from_type(mbedtls_pk_type_t pk_type)","kind":3,"detail":"const mbedtls_pk_info_t *","documentation":{"kind":"markdown","value":"From `\"pk.h\"`  \n\\\\brief Return information associated with the given PK type  \n\\\\param pk_type PK type to search for.  \n\\\\return The PK info associated with the type or NULL if not found."},"sortText":"41386273mbedtls_pk_info_from_type","filterText":"mbedtls_pk_info_from_type","insertText":"mbedtls_pk_info_from_type(${1:mbedtls_pk_type_t pk_type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"mbedtls_pk_info_from_type(${1:mbedtls_pk_type_t pk_type})"}},{"label":"•mbedtls_pk_info_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"pk.h\"`  \n\\\\brief Public key information and operations"},"sortText":"41386273mbedtls_pk_info_t","filterText":"mbedtls_pk_info_t","insertText":"mbedtls_pk_info_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"mbedtls_pk_info_t"}},{"label":"•mbedtls_pk_init(mbedtls_pk_context *ctx)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pk.h\"`  \n\\\\brief Initialize a #mbedtls_pk_context (as NONE).  \n\\\\param ctx The context to initialize.  \nThis must not be \\\\c NULL."},"sortText":"41386273mbedtls_pk_init","filterText":"mbedtls_pk_init","insertText":"mbedtls_pk_init(${1:mbedtls_pk_context *ctx})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"mbedtls_pk_init(${1:mbedtls_pk_context *ctx})"}},{"label":"•alarm_pool_init_default()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Create the default alarm pool (if not already created or disabled)  \n\\\\ingroup alarm"},"sortText":"41427db5alarm_pool_init_default","filterText":"alarm_pool_init_default","insertText":"alarm_pool_init_default()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"alarm_pool_init_default()"}},{"label":"•RESET_REASON_PIN_RESET","kind":20,"detail":"reset_reason_t","documentation":{"kind":"markdown","value":"From `\"reset_reason_api.h\"`  \nSet when a reset is triggered by the hardware pin on the board"},"sortText":"415ae0beRESET_REASON_PIN_RESET","filterText":"RESET_REASON_PIN_RESET","insertText":"RESET_REASON_PIN_RESET","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"RESET_REASON_PIN_RESET"}},{"label":"•mbedtls_ecp_point_init(mbedtls_ecp_point *pt)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"ecp.h\"`  \n\\\\brief This function initializes a point as zero.  \n\\\\param pt The point to initialize."},"sortText":"41604ec4mbedtls_ecp_point_init","filterText":"mbedtls_ecp_point_init","insertText":"mbedtls_ecp_point_init(${1:mbedtls_ecp_point *pt})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"mbedtls_ecp_point_init(${1:mbedtls_ecp_point *pt})"}},{"label":"•MBED_ERROR_PINMAP_INVALID","kind":20,"detail":"_mbed_error_code","documentation":{"kind":"markdown","value":"From `\"mbed_error.h\"`"},"sortText":"42701dd9MBED_ERROR_PINMAP_INVALID","filterText":"MBED_ERROR_PINMAP_INVALID","insertText":"MBED_ERROR_PINMAP_INVALID","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":5}},"newText":"MBED_ERROR_PINMAP_INVALID"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":311},"contentChanges":[{"range":{"start":{"line":8,"character":5},"end":{"line":8,"character":5}},"rangeLength":0,"text":"M"}]}}Content-Length: 282

{"jsonrpc":"2.0","id":193,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":6},"context":{"triggerKind":3}}}Content-Length: 222

{"jsonrpc":"2.0","id":194,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 27369

{"id":193,"result":{"isIncomplete":false,"items":[{"label":" PinMode","kind":8,"documentation":{"kind":"markdown","value":"Define the PinName symbol to be used in all the contexts"},"sortText":"3f17ae13PinMode","filterText":"PinMode","insertText":"PinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"PinMode"}},{"label":"•pinMode(NinaPin pin, PinMode mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\* FUNCTION DECLARATION  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinMode(${1:NinaPin pin}, ${2:PinMode mode})"}},{"label":" pinMode(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"Redeclare Common.h functions with the updated PinMode"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinMode($0)"}},{"label":"•pinMode(pin_size_t pinNumber, int mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Compat.h\"`"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})"}},{"label":"•pinMode(pin_size_t pinNumber, ArduinoPinMode pinMode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3f17ae13pinMode","filterText":"pinMode","insertText":"pinMode(${1:pin_size_t pinNumber}, ${2:ArduinoPinMode pinMode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinMode(${1:pin_size_t pinNumber}, ${2:ArduinoPinMode pinMode})"}},{"label":"•ArduinoPinMode","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3f6047adArduinoPinMode","filterText":"ArduinoPinMode","insertText":"ArduinoPinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"ArduinoPinMode"}},{"label":"•MbedPinMode","kind":8,"documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"3f6047adMbedPinMode","filterText":"MbedPinMode","insertText":"MbedPinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"MbedPinMode"}},{"label":"•pin_mode(PinName pin, PinMode mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"405d753cpin_mode","filterText":"pin_mode","insertText":"pin_mode(${1:PinName pin}, ${2:PinMode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pin_mode(${1:PinName pin}, ${2:PinMode mode})"}},{"label":" PinMode","kind":1,"sortText":"407cc3c8PinMode","filterText":"PinMode","insertText":"PinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"PinMode"}},{"label":"•PinMap","kind":8,"documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"4088511fPinMap","filterText":"PinMap","insertText":"PinMap","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"PinMap"}},{"label":"•pinmap_find_function(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"40a746fbpinmap_find_function","filterText":"pinmap_find_function","insertText":"pinmap_find_function(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_find_function(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_find_peripheral(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"40a746fbpinmap_find_peripheral","filterText":"pinmap_find_peripheral","insertText":"pinmap_find_peripheral(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_find_peripheral(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_find_peripheral_pins(const PinList *whitelist, const PinList *blacklist, int per, const PinMap *const *maps, PinName **pins, uint32_t count)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nFind a combination of pins suitable for use given the constraints  \nThis function finds pins which meet these specific properties:  \n\\- The pin is part of the form factor  \n\\- The pin is not in the restricted list  \n\\- The pin is contained within the respective pinmap  \n\\- The pin belongs to the given peripheral  \n\\- Each pin found is distinct; in the example below mosi and miso will never be assigned the same pin  \nExample:  \n@code  \n#include \"mbed.h\"  \n#include \"pinmap.h\"  \nint main() { int per = spi_master_cs_pinmap()-\u003eperipheral;  \nconst PinList \\*pins_ff = pinmap_ff_default_pins();  \nconst PinList \\*pins_avoid = pinmap_restricted_pins();  \nPinName mosi = NC;  \nPinName miso = NC;  \nPinName sclk = NC;  \nPinName ssel = NC;  \nconst PinMap \\*maps[] = { spi_master_mosi_pinmap(),  \nspi_master_miso_pinmap(),  \nspi_master_clk_pinmap(),  \nspi_master_cs_pinmap() };  \nPinName \\*pins[] = { \u0026mosi,  \n\u0026miso,  \n\u0026sclk,  \n\u0026ssel };  \nif (pinmap_find_peripheral_pins(pins_ff, pins_avoid, per, maps, pins, sizeof(maps) / sizeof(maps[0]))) { printf(\"Found SPI pins to test instance %i with:\\\\n\" \" mosi=%s\\\\n\" \" miso=%s\\\\n\" \" sclk=%s\\\\n\" \" ssel=%s\\\\n\", per,  \npinmap_ff_default_pin_to_string(mosi),  \npinmap_ff_default_pin_to_string(miso),  \npinmap_ff_default_pin_to_string(sclk),  \npinmap_ff_default_pin_to_string(ssel));  \n} else { printf(\"Could not find SPI combination to test %i\\\\n\", per);  \n} return 0;  \n}  \n@endcode  \n@param whitelist List of pins to choose from  \n@param blacklist List of pins which cannot be used  \n@param per Peripheral to which the pins belong  \n@param maps An array of pin maps to select from  \n@param pins An array of pins to find. Pins already set to a value will be left unchanged. Only pins initialized to NC will be updated by this function  \n@param count The size of maps and pins  \n@return true if a suitable combination of pins was found and written to the pins array, otherwise false"},"sortText":"40a746fbpinmap_find_peripheral_pins","filterText":"pinmap_find_peripheral_pins","insertText":"pinmap_find_peripheral_pins(${1:const PinList *whitelist}, ${2:const PinList *blacklist}, ${3:int per}, ${4:const PinMap *const *maps}, ${5:PinName **pins}, ${6:uint32_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_find_peripheral_pins(${1:const PinList *whitelist}, ${2:const PinList *blacklist}, ${3:int per}, ${4:const PinMap *const *maps}, ${5:PinName **pins}, ${6:uint32_t count})"}},{"label":"•pinmap_function(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"40a746fbpinmap_function","filterText":"pinmap_function","insertText":"pinmap_function(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_function(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_gpio_restricted_pins()","kind":3,"detail":"const PinList *","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nGet the pin list of pins to avoid during GPIO/GPIO_IRQ testing  \nThe GPIO restricted pin list is used to indicate to testing that a pin should be skipped due to some caveat about it.  \nTargets should override the weak implementation of this function if they have peripherals which should be skipped during testing.  \n@note This is special case only for GPIO/GPIO_IRQ tests because targets do not provide pin-maps for GPIO.  \n@return Pointer to a peripheral list of peripheral to avoid"},"sortText":"40a746fbpinmap_gpio_restricted_pins","filterText":"pinmap_gpio_restricted_pins","insertText":"pinmap_gpio_restricted_pins()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_gpio_restricted_pins()"}},{"label":"•pinmap_list_has_peripheral(const PeripheralList *list, int peripheral)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nCheck if the peripheral is in the list  \n@param list peripheral list to check  \n@param peripheral peripheral to check for in the list  \n@return true if the peripheral is in the list, false otherwise"},"sortText":"40a746fbpinmap_list_has_peripheral","filterText":"pinmap_list_has_peripheral","insertText":"pinmap_list_has_peripheral(${1:const PeripheralList *list}, ${2:int peripheral})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_list_has_peripheral(${1:const PeripheralList *list}, ${2:int peripheral})"}},{"label":"•pinmap_list_has_pin(const PinList *list, PinName pin)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nCheck if the pin is in the list  \n@param list pin list to check  \n@param pin pin to check for in the list  \n@return true if the pin is in the list, false otherwise"},"sortText":"40a746fbpinmap_list_has_pin","filterText":"pinmap_list_has_pin","insertText":"pinmap_list_has_pin(${1:const PinList *list}, ${2:PinName pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_list_has_pin(${1:const PinList *list}, ${2:PinName pin})"}},{"label":"•pinmap_merge(uint32_t a, uint32_t b)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"40a746fbpinmap_merge","filterText":"pinmap_merge","insertText":"pinmap_merge(${1:uint32_t a}, ${2:uint32_t b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_merge(${1:uint32_t a}, ${2:uint32_t b})"}},{"label":"•pinmap_peripheral(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"40a746fbpinmap_peripheral","filterText":"pinmap_peripheral","insertText":"pinmap_peripheral(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_peripheral(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_pinout(PinName pin, const PinMap *map)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"40a746fbpinmap_pinout","filterText":"pinmap_pinout","insertText":"pinmap_pinout(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_pinout(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":"•pinmap_restricted_pins()","kind":3,"detail":"const PinList *","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`  \nGet the pin list of pins to avoid during testing  \nThe restricted pin list is used to indicate to testing that a pin should be skipped due to some caveat about it.  \nFor example, using CONSOLE_RX and CONSOLE_TX during tests will interfere with the test runner and should be avoided.  \nTargets should override the weak implementation of this function if they have additional pins which should be skipped during testing.  \n@return Pointer to a pin list of pins to avoid"},"sortText":"40a746fbpinmap_restricted_pins","filterText":"pinmap_restricted_pins","insertText":"pinmap_restricted_pins()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_restricted_pins()"}},{"label":"•pinmap_uart_restricted_peripherals()","kind":3,"detail":"const PeripheralList *","documentation":{"kind":"markdown","value":"From `\"pinmap.h\"`"},"sortText":"40a746fbpinmap_uart_restricted_peripherals","filterText":"pinmap_uart_restricted_peripherals","insertText":"pinmap_uart_restricted_peripherals()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pinmap_uart_restricted_peripherals()"}},{"label":"•analogin_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"analogin_api.h\"`  \nGet the pins that support analogin  \nReturn a PinMap array of pins that support analogin. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40f4ada1analogin_pinmap","filterText":"analogin_pinmap","insertText":"analogin_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"analogin_pinmap()"}},{"label":"•gpio_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"gpio_api.h\"`  \nGet the pins that support all GPIO tests  \nReturn a PinMap array of pins that support GPIO. The array is terminated with {NC, NC, 0}.  \nTargets should override the weak implementation of this function to provide the actual pinmap for GPIO testing.  \n@return PinMap array"},"sortText":"40f4ada1gpio_pinmap","filterText":"gpio_pinmap","insertText":"gpio_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"gpio_pinmap()"}},{"label":"•i2c_pinmap_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`"},"sortText":"40f4ada1i2c_pinmap_t","filterText":"i2c_pinmap_t","insertText":"i2c_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"i2c_pinmap_t"}},{"label":"•pwmout_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"pwmout_api.h\"`  \nGet the pins that support PWM  \nReturn a PinMap array of pins that support PWM.  \nThe array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"40f4ada1pwmout_pinmap","filterText":"pwmout_pinmap","insertText":"pwmout_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"pwmout_pinmap()"}},{"label":"•serial_pinmap_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"40f4ada1serial_pinmap_t","filterText":"serial_pinmap_t","insertText":"serial_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"serial_pinmap_t"}},{"label":"•spi_pinmap_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`"},"sortText":"40f4ada1spi_pinmap_t","filterText":"spi_pinmap_t","insertText":"spi_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"spi_pinmap_t"}},{"label":"•gpio_irq_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"gpio_irq_api.h\"`  \nGet the pins that support all GPIO IRQ tests  \nReturn a PinMap array of pins that support GPIO IRQ.  \nThe array is terminated with {NC, NC, 0}.  \nTargets should override the weak implementation of this function to provide the actual pinmap for GPIO IRQ testing.  \n@return PinMap array"},"sortText":"4108511fgpio_irq_pinmap","filterText":"gpio_irq_pinmap","insertText":"gpio_irq_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"gpio_irq_pinmap()"}},{"label":"•serial_cts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nGet the pins that support Serial CTS  \nReturn a PinMap array of pins that support Serial CTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"4108511fserial_cts_pinmap","filterText":"serial_cts_pinmap","insertText":"serial_cts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"serial_cts_pinmap()"}},{"label":"•serial_fc_pinmap_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`"},"sortText":"4108511fserial_fc_pinmap_t","filterText":"serial_fc_pinmap_t","insertText":"serial_fc_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"serial_fc_pinmap_t"}},{"label":"•serial_rts_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nGet the pins that support Serial RTS  \nReturn a PinMap array of pins that support Serial RTS. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"4108511fserial_rts_pinmap","filterText":"serial_rts_pinmap","insertText":"serial_rts_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"serial_rts_pinmap()"}},{"label":"•serial_rx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nGet the pins that support Serial RX  \nReturn a PinMap array of pins that support Serial RX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"4108511fserial_rx_pinmap","filterText":"serial_rx_pinmap","insertText":"serial_rx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"serial_rx_pinmap()"}},{"label":"•serial_tx_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"serial_api.h\"`  \nGet the pins that support Serial TX  \nReturn a PinMap array of pins that support Serial TX. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"4108511fserial_tx_pinmap","filterText":"serial_tx_pinmap","insertText":"serial_tx_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"serial_tx_pinmap()"}},{"label":"•i2c_master_scl_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nGet the pins that support I2C SCL  \nReturn a PinMap array of pins that support I2C SCL in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbi2c_master_scl_pinmap","filterText":"i2c_master_scl_pinmap","insertText":"i2c_master_scl_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"i2c_master_scl_pinmap()"}},{"label":"•i2c_master_sda_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nGet the pins that support I2C SDA  \nReturn a PinMap array of pins that support I2C SDA in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbi2c_master_sda_pinmap","filterText":"i2c_master_sda_pinmap","insertText":"i2c_master_sda_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"i2c_master_sda_pinmap()"}},{"label":"•i2c_slave_scl_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nGet the pins that support I2C SCL  \nReturn a PinMap array of pins that support I2C SCL in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbi2c_slave_scl_pinmap","filterText":"i2c_slave_scl_pinmap","insertText":"i2c_slave_scl_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"i2c_slave_scl_pinmap()"}},{"label":"•i2c_slave_sda_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nGet the pins that support I2C SDA  \nReturn a PinMap array of pins that support I2C SDA in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbi2c_slave_sda_pinmap","filterText":"i2c_slave_sda_pinmap","insertText":"i2c_slave_sda_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"i2c_slave_sda_pinmap()"}},{"label":"•spi_master_clk_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI CLK  \nReturn a PinMap array of pins that support SPI CLK in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbspi_master_clk_pinmap","filterText":"spi_master_clk_pinmap","insertText":"spi_master_clk_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"spi_master_clk_pinmap()"}},{"label":"•spi_master_cs_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI CS  \nReturn a PinMap array of pins that support SPI CS in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbspi_master_cs_pinmap","filterText":"spi_master_cs_pinmap","insertText":"spi_master_cs_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"spi_master_cs_pinmap()"}},{"label":"•spi_master_miso_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI MISO  \nReturn a PinMap array of pins that support SPI MISO in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbspi_master_miso_pinmap","filterText":"spi_master_miso_pinmap","insertText":"spi_master_miso_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"spi_master_miso_pinmap()"}},{"label":"•spi_master_mosi_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI MOSI  \nReturn a PinMap array of pins that support SPI MOSI in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbspi_master_mosi_pinmap","filterText":"spi_master_mosi_pinmap","insertText":"spi_master_mosi_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"spi_master_mosi_pinmap()"}},{"label":"•spi_slave_clk_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI CLK  \nReturn a PinMap array of pins that support SPI CLK in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbspi_slave_clk_pinmap","filterText":"spi_slave_clk_pinmap","insertText":"spi_slave_clk_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"spi_slave_clk_pinmap()"}},{"label":"•spi_slave_cs_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI CS  \nReturn a PinMap array of pins that support SPI CS in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbspi_slave_cs_pinmap","filterText":"spi_slave_cs_pinmap","insertText":"spi_slave_cs_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"spi_slave_cs_pinmap()"}},{"label":"•spi_slave_miso_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI MISO  \nReturn a PinMap array of pins that support SPI MISO in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbspi_slave_miso_pinmap","filterText":"spi_slave_miso_pinmap","insertText":"spi_slave_miso_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"spi_slave_miso_pinmap()"}},{"label":"•spi_slave_mosi_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"From `\"spi_api.h\"`  \nGet the pins that support SPI MOSI  \nReturn a PinMap array of pins that support SPI MOSI in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"412746fbspi_slave_mosi_pinmap","filterText":"spi_slave_mosi_pinmap","insertText":"spi_slave_mosi_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"spi_slave_mosi_pinmap()"}},{"label":"•MBED_ERROR_PINMAP_INVALID","kind":20,"detail":"_mbed_error_code","documentation":{"kind":"markdown","value":"From `\"mbed_error.h\"`"},"sortText":"4243272dMBED_ERROR_PINMAP_INVALID","filterText":"MBED_ERROR_PINMAP_INVALID","insertText":"MBED_ERROR_PINMAP_INVALID","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"MBED_ERROR_PINMAP_INVALID"}},{"label":"•MBED_ERROR_CODE_PINMAP_INVALID","kind":20,"detail":"_mbed_error_code","documentation":{"kind":"markdown","value":"From `\"mbed_error.h\"`"},"sortText":"425e2195MBED_ERROR_CODE_PINMAP_INVALID","filterText":"MBED_ERROR_CODE_PINMAP_INVALID","insertText":"MBED_ERROR_CODE_PINMAP_INVALID","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"newText":"MBED_ERROR_CODE_PINMAP_INVALID"}}]},"jsonrpc":"2.0"}Content-Length: 398

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pinM'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":194,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 502

{"jsonrpc":"2.0","id":195,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":6},"end":{"line":8,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":6}},"message":"Use of undeclared identifier 'pinM'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":195,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":312},"contentChanges":[{"range":{"start":{"line":8,"character":6},"end":{"line":8,"character":6}},"rangeLength":0,"text":"o"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":196,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":196,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 399

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pinMo'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":313},"contentChanges":[{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":7}},"rangeLength":0,"text":"d"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":197,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":197,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 809

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'pinMod'; did you mean 'pinMode'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: 'pinMode' declared here"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":314},"contentChanges":[{"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":8}},"rangeLength":0,"text":"e"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":198,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":198,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1487

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":314}}}Content-Length: 1391

{"jsonrpc":"2.0","id":199,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":9},"end":{"line":8,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":9}},"message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call","severity":1,"code":"ovl_unresolvable","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":199,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":315},"contentChanges":[{"range":{"start":{"line":8,"character":9},"end":{"line":8,"character":9}},"rangeLength":0,"text":"/"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":200,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":316},"contentChanges":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"rangeLength":0,"text":"()"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":200}}Content-Length: 222

{"jsonrpc":"2.0","id":201,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":200,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 385

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":201,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":202,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":11},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 385

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":11},"end":{"line":8,"character":12}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 93

{"id":202,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":317},"contentChanges":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"rangeLength":2,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":203,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 385

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":203,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":318},"contentChanges":[{"range":{"start":{"line":8,"character":9},"end":{"line":8,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 222

{"jsonrpc":"2.0","id":204,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 1487

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: possible target for call"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":204,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":319},"contentChanges":[{"range":{"start":{"line":8,"character":9},"end":{"line":8,"character":9}},"rangeLength":0,"text":"()"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":205,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":205,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1703

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'pinMode'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: candidate function not viable: requires 2 arguments, but 0 were provided"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":206,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":10},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 183

{"id":206,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":207,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":207,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":319}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":320},"contentChanges":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":10}},"rangeLength":0,"text":"B"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":208,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 597

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'B'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":208,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":209,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":11},"context":{"triggerKind":1}}}
>>>
Content-Length: 46779

{"id":209,"result":{"isIncomplete":true,"items":[{"label":" bool","kind":14,"sortText":"3f000000bool","filterText":"bool","insertText":"bool","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bool"}},{"label":"•BitOrder","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68BitOrder","filterText":"BitOrder","insertText":"BitOrder","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"BitOrder"}},{"label":"•boolean","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`  \nTODO: request for removal"},"sortText":"405d8e68boolean","filterText":"boolean","insertText":"boolean","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"boolean"}},{"label":"•byte","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68byte","filterText":"byte","insertText":"byte","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"byte"}},{"label":" bsearch","kind":18,"sortText":"406c52eabsearch","filterText":"bsearch","insertText":"bsearch","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bsearch"}},{"label":" bcmp(const void *, const void *, size_t)","kind":3,"detail":"int","sortText":"4071b066bcmp","filterText":"bcmp","insertText":"bcmp(${1:const void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bcmp(${1:const void *}, ${2:const void *}, ${3:size_t})"}},{"label":" bcopy(const void *, void *, size_t)","kind":3,"detail":"void","sortText":"4071b066bcopy","filterText":"bcopy","insertText":"bcopy(${1:const void *}, ${2:void *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bcopy(${1:const void *}, ${2:void *}, ${3:size_t})"}},{"label":" bzero(void *, size_t)","kind":3,"detail":"void","sortText":"4071b066bzero","filterText":"bzero","insertText":"bzero(${1:void *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bzero(${1:void *}, ${2:size_t})"}},{"label":" bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t _compar)","kind":3,"detail":"void *","sortText":"40791bfcbsearch","filterText":"bsearch","insertText":"bsearch(${1:const void *__key}, ${2:const void *__base}, ${3:size_t __nmemb}, ${4:size_t __size}, ${5:__compar_fn_t _compar})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bsearch(${1:const void *__key}, ${2:const void *__base}, ${3:size_t __nmemb}, ${4:size_t __size}, ${5:__compar_fn_t _compar})"}},{"label":" btowc(int)","kind":3,"detail":"wint_t","sortText":"40791bfcbtowc","filterText":"btowc","insertText":"btowc(${1:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"btowc(${1:int})"}},{"label":"•blkcnt_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"407f2f3bblkcnt_t","filterText":"blkcnt_t","insertText":"blkcnt_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"blkcnt_t"}},{"label":"•blksize_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"407f2f3bblksize_t","filterText":"blksize_t","insertText":"blksize_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"blksize_t"}},{"label":" BUTTON_1","kind":1,"sortText":"40800000BUTTON_1","filterText":"BUTTON_1","insertText":"BUTTON_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"BUTTON_1"}},{"label":"•best_effort_wfe_or_timeout(absolute_time_t timeout_timestamp)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"pico/time.h\"`  \n\\\\brief Helper method for blocking on a timeout  \n\\\\ingroup sleep  \nThis method will return in response to a an event (as per \\_\\_wfe) or when the target time is reached, or at any point before.  \nThis method can be used to implement a lower power polling loop waiting on some condition signalled by an event (\\_\\_sev()).  \nThis is called \\\\a best_effort because under certain circumstances (notably the default timer pool being disabled or full) the best effort is simply to return immediately without a \\_\\_wfe, thus turning the calling code into a busy wait.  \nExample usage:  \n\\`\\`\\`c bool my_function_with_timeout_us(uint64_t timeout_us) { absolute_time_t timeout_time = make_timeout_time_us(timeout_us);  \ndo { // each time round the loop, we check to see if the condition // we are waiting on has happened if (my_check_done()) { // do something return true;  \n} // will try to sleep until timeout or the next processor event } while (!best_effort_wfe_or_timeout(timeout_time));  \nreturn false; // timed out }  \n\\`\\`\\`  \n@param timeout_timestamp the timeout time  \n@return true if the target time is reached, false otherwise"},"sortText":"409c96d9best_effort_wfe_or_timeout","filterText":"best_effort_wfe_or_timeout","insertText":"best_effort_wfe_or_timeout(${1:absolute_time_t timeout_timestamp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"best_effort_wfe_or_timeout(${1:absolute_time_t timeout_timestamp})"}},{"label":"•std::bad_alloc","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cnew\u003e`  \n@brief Exception possibly thrown by @c new.  \n@ingroup exceptions  \n@c bad_alloc (or classes derived from it) is used to report allocation errors from the throwing forms of @c new."},"sortText":"409f2ea4bad_alloc","filterText":"bad_alloc","insertText":"std::bad_alloc","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bad_alloc"}},{"label":"•std::bad_array_new_length","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cnew\u003e`"},"sortText":"409f2ea4bad_array_new_length","filterText":"bad_array_new_length","insertText":"std::bad_array_new_length","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bad_array_new_length"}},{"label":"•std::bad_cast","kind":7,"documentation":{"kind":"markdown","value":"From `\u003ctypeinfo\u003e`  \n@brief Thrown during incorrect typecasting.  \n@ingroup exceptions  \nIf you attempt an invalid @c dynamic_cast expression, an instance of this class (or something derived from this class) is thrown."},"sortText":"409f2ea4bad_cast","filterText":"bad_cast","insertText":"std::bad_cast","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bad_cast"}},{"label":"•std::bad_exception","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cexception\u003e`  \nIf an %exception is thrown which is not listed in a function's %exception specification, one of these may be thrown."},"sortText":"409f2ea4bad_exception","filterText":"bad_exception","insertText":"std::bad_exception","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bad_exception"}},{"label":"•std::bad_typeid","kind":7,"documentation":{"kind":"markdown","value":"From `\u003ctypeinfo\u003e`  \n@brief Thrown when a NULL pointer in a @c typeid expression is used.  \n@ingroup exceptions"},"sortText":"409f2ea4bad_typeid","filterText":"bad_typeid","insertText":"std::bad_typeid","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bad_typeid"}},{"label":"•std::basic_filebuf\u003ctypename _CharT, typename _Traits\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`"},"sortText":"409f2ea4basic_filebuf","filterText":"basic_filebuf","insertText":"std::basic_filebuf\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_filebuf\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_fstream\u003ctypename _CharT, typename _Traits\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`"},"sortText":"409f2ea4basic_fstream","filterText":"basic_fstream","insertText":"std::basic_fstream\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_fstream\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_ifstream\u003ctypename _CharT, typename _Traits\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`"},"sortText":"409f2ea4basic_ifstream","filterText":"basic_ifstream","insertText":"std::basic_ifstream\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_ifstream\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_iostream\u003ctypename _CharT, typename _Traits\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \n@brief Template class basic_iostream  \n@ingroup io  \n@tparam \\_CharT Type of character stream.  \n@tparam \\_Traits Traits for character type, defaults to char_traits\u003c\\_CharT\u003e.  \nThis class multiply inherits from the input and output stream classes simply to provide a single interface."},"sortText":"409f2ea4basic_iostream","filterText":"basic_iostream","insertText":"std::basic_iostream\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_iostream\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_istream\u003ctypename _CharT, typename _Traits\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \n@brief Template class basic_istream.  \n@ingroup io  \n@tparam \\_CharT Type of character stream.  \n@tparam \\_Traits Traits for character type, defaults to char_traits\u003c\\_CharT\u003e.  \nThis is the base class for all input streams. It provides text formatting of all builtin types, and communicates with any class derived from basic_streambuf to do the actual input."},"sortText":"409f2ea4basic_istream","filterText":"basic_istream","insertText":"std::basic_istream\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_istream\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_istringstream\u003ctypename _CharT, typename _Traits, typename _Alloc\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`"},"sortText":"409f2ea4basic_istringstream","filterText":"basic_istringstream","insertText":"std::basic_istringstream\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_istringstream\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_ofstream\u003ctypename _CharT, typename _Traits\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`"},"sortText":"409f2ea4basic_ofstream","filterText":"basic_ofstream","insertText":"std::basic_ofstream\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_ofstream\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_ostream\u003ctypename _CharT, typename _Traits\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003costream\u003e`  \n@brief Template class basic_ostream.  \n@ingroup io  \n@tparam \\_CharT Type of character stream.  \n@tparam \\_Traits Traits for character type, defaults to char_traits\u003c\\_CharT\u003e.  \nThis is the base class for all output streams. It provides text formatting of all builtin types, and communicates with any class derived from basic_streambuf to do the actual output."},"sortText":"409f2ea4basic_ostream","filterText":"basic_ostream","insertText":"std::basic_ostream\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_ostream\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_ostringstream\u003ctypename _CharT, typename _Traits, typename _Alloc\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`"},"sortText":"409f2ea4basic_ostringstream","filterText":"basic_ostringstream","insertText":"std::basic_ostringstream\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_ostringstream\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_streambuf\u003ctypename _CharT, typename _Traits\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \n@brief The actual work of input and output (interface).  \n@ingroup io  \n@tparam \\_CharT Type of character stream.  \n@tparam \\_Traits Traits for character type, defaults to char_traits\u003c\\_CharT\u003e.  \nThis is a base class. Derived stream buffers each control a pair of character sequences: one for input, and one for output.  \nSection [27.5.1] of the standard describes the requirements and behavior of stream buffer classes. That section (three paragraphs) is reproduced here, for simplicity and accuracy.  \n-# Stream buffers can impose various constraints on the sequences they control. Some constraints are:  \n\\- The controlled input sequence can be not readable.  \n\\- The controlled output sequence can be not writable.  \n\\- The controlled sequences can be associated with the contents of other representations for character sequences, such as external files.  \n\\- The controlled sequences can support operations @e directly to or from associated sequences.  \n\\- The controlled sequences can impose limitations on how the program can read characters from a sequence, write characters to a sequence, put characters back into an input sequence, or alter the stream position.  \n.  \n-# Each sequence is characterized by three pointers which, if non-null,  \nall point into the same @c charT array object. The array object represents, at any moment, a (sub)sequence of characters from the sequence. Operations performed on a sequence alter the values stored in these pointers, perform reads and writes directly to or from associated sequences, and alter \\\u003cem\u003ethe stream position\\\u003c/em\u003e and conversion state as needed to maintain this subsequence relationship.  \nThe three pointers are:  \n\\- the \\\u003cem\u003ebeginning pointer\\\u003c/em\u003e, or lowest element address in the array (called @e xbeg here);  \n\\- the \\\u003cem\u003enext pointer\\\u003c/em\u003e, or next element address that is a current candidate for reading or writing (called @e xnext here);  \n\\- the \\\u003cem\u003eend pointer\\\u003c/em\u003e, or first element address beyond the end of the array (called @e xend here).  \n.  \n-# The following semantic constraints shall always apply for any set of three pointers for a sequence, using the pointer names given immediately above:  \n\\- If @e xnext is not a null pointer, then @e xbeg and @e xend shall also be non-null pointers into the same @c charT array, as described above; otherwise, @e xbeg and @e xend shall also be null.  \n\\- If @e xnext is not a null pointer and @e xnext \u003c @e xend for an output sequence, then a \\\u003cem\u003ewrite position\\\u003c/em\u003e is available.  \nIn this case, @e \\*xnext shall be assignable as the next element to write (to put, or to store a character value, into the sequence).  \n\\- If @e xnext is not a null pointer and @e xbeg \u003c @e xnext for an input sequence, then a \\\u003cem\u003eputback position\\\u003c/em\u003e is available.  \nIn this case, @e xnext[-1] shall have a defined value and is the next (preceding) element to store a character that is put back into the input sequence.  \n\\- If @e xnext is not a null pointer and @e xnext\u003c @e xend for an input sequence, then a \\\u003cem\u003eread position\\\u003c/em\u003e is available.  \nIn this case, @e \\*xnext shall have a defined value and is the next element to read (to get, or to obtain a character value,  \nfrom the sequence)."},"sortText":"409f2ea4basic_streambuf","filterText":"basic_streambuf","insertText":"std::basic_streambuf\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_streambuf\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_stringbuf\u003ctypename _CharT, typename _Traits, typename _Alloc\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`"},"sortText":"409f2ea4basic_stringbuf","filterText":"basic_stringbuf","insertText":"std::basic_stringbuf\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_stringbuf\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_stringstream\u003ctypename _CharT, typename _Traits, typename _Alloc\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`"},"sortText":"409f2ea4basic_stringstream","filterText":"basic_stringstream","insertText":"std::basic_stringstream\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_stringstream\u003c${1:typename _CharT}\u003e"}},{"label":"•std::bind(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Function template for std::bind.  \n@ingroup binders"},"sortText":"409f2ea4bind","filterText":"bind","insertText":"std::bind($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bind($0)"}},{"label":"•mbed::bind_to_fd(mbed::FileHandle *fh)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`  \nBind an mbed FileHandle to a POSIX file descriptor  \nThis is similar to fdopen, but only operating at the POSIX layer - it associates a POSIX integer file descriptor with a FileHandle, to allow you to use POSIX read/write calls etc. The provided FileHandle must remain open - it will be closed when close(int) is called.  \n@param fh a pointer to an opened FileHandle  \n@return an integer file descriptor, or negative if no descriptors available"},"sortText":"409f2ea4bind_to_fd","filterText":"bind_to_fd","insertText":"mbed::bind_to_fd(${1:mbed::FileHandle *fh})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"mbed::bind_to_fd(${1:mbed::FileHandle *fh})"}},{"label":"•std::bsearch","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bbsearch","filterText":"bsearch","insertText":"std::bsearch","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bsearch"}},{"label":"•std::back_insert_iterator\u003ctypename _Container\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n24.4.2.2.1 back_insert_iterator  \n@brief Turns assignment into insertion.  \nThese are output iterators, constructed from a container-of-T.  \nAssigning a T to the iterator appends it to the container using push_back.  \nTip: Using the back_inserter function to create these iterators can save typing."},"sortText":"40a94eb8back_insert_iterator","filterText":"back_insert_iterator","insertText":"std::back_insert_iterator\u003c${1:typename _Container}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::back_insert_iterator\u003c${1:typename _Container}\u003e"}},{"label":"•std::back_inserter(_Container \u0026__x)","kind":3,"detail":"back_insert_iterator\u003c_Container\u003e","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@param \\_\\_x A container of arbitrary type.  \n@return An instance of back_insert_iterator working on @p \\_\\_x.  \nThis wrapper function helps in creating back_insert_iterator instances.  \nTyping the name of the %iterator requires knowing the precise full type of the container, which can be tedious and impedes generic programming. Using this function lets you take advantage of automatic template parameter deduction, making the compiler match the correct types for you."},"sortText":"40a94eb8back_inserter","filterText":"back_inserter","insertText":"std::back_inserter(${1:_Container \u0026__x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::back_inserter(${1:_Container \u0026__x})"}},{"label":"•std::bad_function_call","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Exception class thrown when class template function's operator() is called with an empty target.  \n@ingroup exceptions"},"sortText":"40a94eb8bad_function_call","filterText":"bad_function_call","insertText":"std::bad_function_call","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bad_function_call"}},{"label":"•std::bad_weak_ptr","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`  \n@brief Exception possibly thrown by @c shared_ptr.  \n@ingroup exceptions"},"sortText":"40a94eb8bad_weak_ptr","filterText":"bad_weak_ptr","insertText":"std::bad_weak_ptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bad_weak_ptr"}},{"label":"•std::basic_ios\u003ctypename _CharT, typename _Traits\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \n@brief Template class basic_ios, virtual base class for all stream classes.  \n@ingroup io  \n@tparam \\_CharT Type of character stream.  \n@tparam \\_Traits Traits for character type, defaults to char_traits\u003c\\_CharT\u003e.  \nMost of the member functions called dispatched on stream objects (e.g., @c std::cout.foo(bar);) are consolidated in this class."},"sortText":"40a94eb8basic_ios","filterText":"basic_ios","insertText":"std::basic_ios\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_ios\u003c${1:typename _CharT}\u003e"}},{"label":"•std::basic_string\u003ctypename _CharT, typename _Traits, typename _Alloc\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \n@class basic_string basic_string.h \\\u003cstring\u003e  \n@brief Managing sequences of characters and character-like objects.  \n@ingroup strings  \n@ingroup sequences  \n@tparam \\_CharT Type of character  \n@tparam \\_Traits Traits for character type, defaults to char_traits\u003c\\_CharT\u003e.  \n@tparam \\_Alloc Allocator type, defaults to allocator\u003c\\_CharT\u003e.  \nMeets the requirements of a \\\u003ca href=\"tables.html#65\"\u003econtainer\\\u003c/a\u003e, a \\\u003ca href=\"tables.html#66\"\u003ereversible container\\\u003c/a\u003e, and a \\\u003ca href=\"tables.html#67\"\u003esequence\\\u003c/a\u003e. Of the \\\u003ca href=\"tables.html#68\"\u003eoptional sequence requirements\\\u003c/a\u003e, only  \n@c push_back, @c at, and @c %array access are supported."},"sortText":"40a94eb8basic_string","filterText":"basic_string","insertText":"std::basic_string\u003c${1:typename _CharT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::basic_string\u003c${1:typename _CharT}\u003e"}},{"label":"•std::begin(…)","kind":3,"detail":"[6 overloads]","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief Return an iterator pointing to the first element of the initializer_list.  \n@param \\_\\_ils Initializer list."},"sortText":"40a94eb8begin","filterText":"begin","insertText":"std::begin($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::begin($0)"}},{"label":"•std::bidirectional_iterator_tag","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \nBidirectional iterators support a superset of forward iterator operations."},"sortText":"40a94eb8bidirectional_iterator_tag","filterText":"bidirectional_iterator_tag","insertText":"std::bidirectional_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bidirectional_iterator_tag"}},{"label":"•std::binary_function\u003ctypename _Arg1, typename _Arg2, typename _Result\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \nThis is one of the @link functors functor base classes@endlink."},"sortText":"40a94eb8binary_function","filterText":"binary_function","insertText":"std::binary_function\u003c${1:typename _Arg1}, ${2:typename _Arg2}, ${3:typename _Result}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::binary_function\u003c${1:typename _Arg1}, ${2:typename _Arg2}, ${3:typename _Result}\u003e"}},{"label":"•std::binary_negate\u003ctypename _Predicate\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \nOne of the @link negators negation functors@endlink."},"sortText":"40a94eb8binary_negate","filterText":"binary_negate","insertText":"std::binary_negate\u003c${1:typename _Predicate}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::binary_negate\u003c${1:typename _Predicate}\u003e"}},{"label":"•std::bit_and\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n\\_GLIBCXX_RESOLVE_LIB_DEFECTS DR 660. Missing Bitwise Operations."},"sortText":"40a94eb8bit_and","filterText":"bit_and","insertText":"std::bit_and\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bit_and\u003c\u003e"}},{"label":"•std::bit_not\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`"},"sortText":"40a94eb8bit_not","filterText":"bit_not","insertText":"std::bit_not\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bit_not\u003c\u003e"}},{"label":"•std::bit_or\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`"},"sortText":"40a94eb8bit_or","filterText":"bit_or","insertText":"std::bit_or\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bit_or\u003c\u003e"}},{"label":"•std::bit_xor\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`"},"sortText":"40a94eb8bit_xor","filterText":"bit_xor","insertText":"std::bit_xor\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::bit_xor\u003c\u003e"}},{"label":"•mstd::bool_constant\u003cbool B\u003e","kind":8,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8bool_constant","filterText":"bool_constant","insertText":"mstd::bool_constant\u003c${1:bool B}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"mstd::bool_constant\u003c${1:bool B}\u003e"}},{"label":"•std::boolalpha(ios_base \u0026__base)","kind":3,"detail":"ios_base \u0026","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \n[27.4.5.1] fmtflags manipulators Calls base.setf(ios_base::boolalpha)."},"sortText":"40a94eb8boolalpha","filterText":"boolalpha","insertText":"std::boolalpha(${1:ios_base \u0026__base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::boolalpha(${1:ios_base \u0026__base})"}},{"label":"•std::btowc","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40b39ec4btowc","filterText":"btowc","insertText":"std::btowc","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"std::btowc"}},{"label":"•mstd::back_insert_iterator","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40bcd333back_insert_iterator","filterText":"back_insert_iterator","insertText":"mstd::back_insert_iterator","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"mstd::back_insert_iterator"}},{"label":"•mstd::back_inserter","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40bcd333back_inserter","filterText":"back_inserter","insertText":"mstd::back_inserter","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"mstd::back_inserter"}},{"label":"•mstd::begin","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40bcd333begin","filterText":"begin","insertText":"mstd::begin","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"mstd::begin"}},{"label":"•mstd::bidirectional_iterator_tag","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40bcd333bidirectional_iterator_tag","filterText":"bidirectional_iterator_tag","insertText":"mstd::bidirectional_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"mstd::bidirectional_iterator_tag"}},{"label":"•mstd::bit_and","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_functional\"`"},"sortText":"40bcd333bit_and","filterText":"bit_and","insertText":"mstd::bit_and","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"mstd::bit_and"}},{"label":"•mstd::bit_not","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_functional\"`"},"sortText":"40bcd333bit_not","filterText":"bit_not","insertText":"mstd::bit_not","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"mstd::bit_not"}},{"label":"•mstd::bit_or","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_functional\"`"},"sortText":"40bcd333bit_or","filterText":"bit_or","insertText":"mstd::bit_or","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"mstd::bit_or"}},{"label":"•mstd::bit_xor","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_functional\"`"},"sortText":"40bcd333bit_xor","filterText":"bit_xor","insertText":"mstd::bit_xor","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"mstd::bit_xor"}},{"label":"•BOARD_NAME","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40d1050aBOARD_NAME","filterText":"BOARD_NAME","insertText":"BOARD_NAME","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"BOARD_NAME"}},{"label":"•BOARD_PRODUCTID","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40d1050aBOARD_PRODUCTID","filterText":"BOARD_PRODUCTID","insertText":"BOARD_PRODUCTID","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"BOARD_PRODUCTID"}},{"label":"•BOARD_VENDORID","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40d1050aBOARD_VENDORID","filterText":"BOARD_VENDORID","insertText":"BOARD_VENDORID","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"BOARD_VENDORID"}},{"label":"•BIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Print.h\"`"},"sortText":"40ec52eaBIN","filterText":"BIN","insertText":"BIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"BIN"}},{"label":"•bit(b)","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40ec52eabit","filterText":"bit","insertText":"bit(${1:b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bit(${1:b})"}},{"label":"•bitClear(value, bit)","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40ec52eabitClear","filterText":"bitClear","insertText":"bitClear(${1:value}, ${2:bit})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bitClear(${1:value}, ${2:bit})"}},{"label":"•bitRead(value, bit)","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40ec52eabitRead","filterText":"bitRead","insertText":"bitRead(${1:value}, ${2:bit})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bitRead(${1:value}, ${2:bit})"}},{"label":"•bitSet(value, bit)","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40ec52eabitSet","filterText":"bitSet","insertText":"bitSet(${1:value}, ${2:bit})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bitSet(${1:value}, ${2:bit})"}},{"label":"•bitToggle(value, bit)","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40ec52eabitToggle","filterText":"bitToggle","insertText":"bitToggle(${1:value}, ${2:bit})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bitToggle(${1:value}, ${2:bit})"}},{"label":"•bitWrite(value, bit, bitvalue)","kind":1,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"40ec52eabitWrite","filterText":"bitWrite","insertText":"bitWrite(${1:value}, ${2:bit}, ${3:bitvalue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"bitWrite(${1:value}, ${2:bit}, ${3:bitvalue})"}},{"label":" BUFSIZ","kind":1,"sortText":"40fea05dBUFSIZ","filterText":"BUFSIZ","insertText":"BUFSIZ","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"BUFSIZ"}},{"label":" BIG_ENDIAN","kind":1,"sortText":"4115ca3dBIG_ENDIAN","filterText":"BIG_ENDIAN","insertText":"BIG_ENDIAN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"BIG_ENDIAN"}},{"label":" BYTE_ORDER","kind":1,"sortText":"4115ca3dBYTE_ORDER","filterText":"BYTE_ORDER","insertText":"BYTE_ORDER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"BYTE_ORDER"}},{"label":"•BUSCTRL_BASE","kind":1,"documentation":{"kind":"markdown","value":"From `\"regs/addressmap.h\"`"},"sortText":"41314351BUSCTRL_BASE","filterText":"BUSCTRL_BASE","insertText":"BUSCTRL_BASE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"BUSCTRL_BASE"}},{"label":"•B00000001","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00000001","filterText":"B00000001","insertText":"B00000001","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00000001"}},{"label":"•B0000011","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B0000011","filterText":"B0000011","insertText":"B0000011","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B0000011"}},{"label":"•B00001001","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00001001","filterText":"B00001001","insertText":"B00001001","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00001001"}},{"label":"•B0000101","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B0000101","filterText":"B0000101","insertText":"B0000101","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B0000101"}},{"label":"•B000011","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B000011","filterText":"B000011","insertText":"B000011","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B000011"}},{"label":"•B0001001","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B0001001","filterText":"B0001001","insertText":"B0001001","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B0001001"}},{"label":"•B00010011","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00010011","filterText":"B00010011","insertText":"B00010011","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00010011"}},{"label":"•B000101","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B000101","filterText":"B000101","insertText":"B000101","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B000101"}},{"label":"•B00010110","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00010110","filterText":"B00010110","insertText":"B00010110","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00010110"}},{"label":"•B00010111","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00010111","filterText":"B00010111","insertText":"B00010111","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00010111"}},{"label":"•B0001101","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B0001101","filterText":"B0001101","insertText":"B0001101","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B0001101"}},{"label":"•B00011010","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00011010","filterText":"B00011010","insertText":"B00011010","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00011010"}},{"label":"•B0001111","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B0001111","filterText":"B0001111","insertText":"B0001111","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B0001111"}},{"label":"•B00100001","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00100001","filterText":"B00100001","insertText":"B00100001","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00100001"}},{"label":"•B001001","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B001001","filterText":"B001001","insertText":"B001001","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B001001"}},{"label":"•B0010010","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B0010010","filterText":"B0010010","insertText":"B0010010","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B0010010"}},{"label":"•B00100110","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00100110","filterText":"B00100110","insertText":"B00100110","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00100110"}},{"label":"•B00101100","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00101100","filterText":"B00101100","insertText":"B00101100","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00101100"}},{"label":"•B0010111","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B0010111","filterText":"B0010111","insertText":"B0010111","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B0010111"}},{"label":"•B00101111","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00101111","filterText":"B00101111","insertText":"B00101111","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00101111"}},{"label":"•B00110010","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00110010","filterText":"B00110010","insertText":"B00110010","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00110010"}},{"label":"•B0011010","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B0011010","filterText":"B0011010","insertText":"B0011010","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B0011010"}},{"label":"•B00110100","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00110100","filterText":"B00110100","insertText":"B00110100","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00110100"}},{"label":"•B00110101","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00110101","filterText":"B00110101","insertText":"B00110101","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00110101"}},{"label":"•B0011100","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B0011100","filterText":"B0011100","insertText":"B0011100","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B0011100"}},{"label":"•B00111000","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B00111000","filterText":"B00111000","insertText":"B00111000","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B00111000"}},{"label":"•B0011101","kind":20,"detail":"enum \u003canonymous\u003e","documentation":{"kind":"markdown","value":"From `\"api/Binary.h\"`"},"sortText":"41fe0b86B0011101","filterText":"B0011101","insertText":"B0011101","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"newText":"B0011101"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 503

{"jsonrpc":"2.0","id":210,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":11},"end":{"line":8,"character":11}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":11}},"message":"Use of undeclared identifier 'B'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":210,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":321},"contentChanges":[{"range":{"start":{"line":8,"character":11},"end":{"line":8,"character":11}},"rangeLength":0,"text":"U"}]}}Content-Length: 283

{"jsonrpc":"2.0","id":211,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":12},"context":{"triggerKind":3}}}Content-Length: 222

{"jsonrpc":"2.0","id":212,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 5454

{"id":211,"result":{"isIncomplete":false,"items":[{"label":" BUTTON_1","kind":1,"sortText":"40800000BUTTON_1","filterText":"BUTTON_1","insertText":"BUTTON_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"BUTTON_1"}},{"label":"•buffer_s","kind":22,"documentation":{"kind":"markdown","value":"From `\"buffer.h\"`  \nGeneric buffer structure"},"sortText":"40a746fbbuffer_s","filterText":"buffer_s","insertText":"buffer_s","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"buffer_s"}},{"label":"•buffer_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"buffer.h\"`  \nGeneric buffer structure"},"sortText":"40a746fbbuffer_t","filterText":"buffer_t","insertText":"buffer_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"buffer_t"}},{"label":"•busy_wait_until(absolute_time_t t)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"timer.h\"`  \n\\\\brief Busy wait wasting cycles until after the specified timestamp  \n\\\\ingroup hardware_timer  \n\\\\param t Absolute time to wait until"},"sortText":"40b903febusy_wait_until","filterText":"busy_wait_until","insertText":"busy_wait_until(${1:absolute_time_t t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"busy_wait_until(${1:absolute_time_t t})"}},{"label":"•busy_wait_us(uint64_t delay_us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"timer.h\"`  \n\\\\brief Busy wait wasting cycles for the given (64 bit) number of microseconds  \n\\\\ingroup hardware_timer  \n\\\\param delay_us delay amount"},"sortText":"40b903febusy_wait_us","filterText":"busy_wait_us","insertText":"busy_wait_us(${1:uint64_t delay_us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"busy_wait_us(${1:uint64_t delay_us})"}},{"label":"•busy_wait_us_32(uint32_t delay_us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"timer.h\"`  \n\\\\brief Busy wait wasting cycles for the given (32 bit) number of microseconds  \n\\\\ingroup hardware_timer  \n\\\\param delay_us delay amount"},"sortText":"40b903febusy_wait_us_32","filterText":"busy_wait_us_32","insertText":"busy_wait_us_32(${1:uint32_t delay_us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"busy_wait_us_32(${1:uint32_t delay_us})"}},{"label":"•mbed::BufferedSerial","kind":7,"documentation":{"kind":"markdown","value":"From `\"BufferedSerial.h\"`  \nClass providing buffered UART communication functionality using separate circular buffer for send and receive channels"},"sortText":"40cb65d1BufferedSerial","filterText":"BufferedSerial","insertText":"mbed::BufferedSerial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"mbed::BufferedSerial"}},{"label":"•mbed::BusIn","kind":7,"documentation":{"kind":"markdown","value":"From `\"BusIn.h\"`  \nA digital input bus, used for reading the state of a collection of pins  \n@note Synchronization level: Thread safe"},"sortText":"40cb65d1BusIn","filterText":"BusIn","insertText":"mbed::BusIn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"mbed::BusIn"}},{"label":"•mbed::BusInOut","kind":7,"documentation":{"kind":"markdown","value":"From `\"BusInOut.h\"`  \nA digital input output bus, used for setting the state of a collection of pins.  \nImplemented as an array of DigitalInOut pins, the bus can be constructed by any pins without restriction other than being capable of digital input or output capabilities  \n@note Synchronization level: Thread safe"},"sortText":"40cb65d1BusInOut","filterText":"BusInOut","insertText":"mbed::BusInOut","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"mbed::BusInOut"}},{"label":"•mbed::BusOut","kind":7,"documentation":{"kind":"markdown","value":"From `\"BusOut.h\"`  \nA digital output bus, used for setting the state of a collection of pins"},"sortText":"40cb65d1BusOut","filterText":"BusOut","insertText":"mbed::BusOut","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"mbed::BusOut"}},{"label":" BUFSIZ","kind":1,"sortText":"40fea05dBUFSIZ","filterText":"BUFSIZ","insertText":"BUFSIZ","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"BUFSIZ"}},{"label":"•BUSCTRL_BASE","kind":1,"documentation":{"kind":"markdown","value":"From `\"regs/addressmap.h\"`"},"sortText":"41314351BUSCTRL_BASE","filterText":"BUSCTRL_BASE","insertText":"BUSCTRL_BASE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"BUSCTRL_BASE"}},{"label":" statusBLUE","kind":6,"detail":"bool","sortText":"80000000statusBLUE","filterText":"statusBLUE","insertText":"statusBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"newText":"statusBLUE"}}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":212,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 598

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BU'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 504

{"jsonrpc":"2.0","id":213,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":12},"end":{"line":8,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":12}},"message":"Use of undeclared identifier 'BU'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":213,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":322},"contentChanges":[{"range":{"start":{"line":8,"character":12},"end":{"line":8,"character":12}},"rangeLength":0,"text":"T"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":214,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BUT'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":214,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":323},"contentChanges":[{"range":{"start":{"line":8,"character":13},"end":{"line":8,"character":13}},"rangeLength":0,"text":"T"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":215,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":215,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":324},"contentChanges":[{"range":{"start":{"line":8,"character":14},"end":{"line":8,"character":14}},"rangeLength":0,"text":"O"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":215}}Content-Length: 222

{"jsonrpc":"2.0","id":216,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 600

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BUTT'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":216,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 601

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BUTTO'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 353

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":325},"contentChanges":[{"range":{"start":{"line":8,"character":10},"end":{"line":8,"character":15}},"rangeLength":5,"text":"BUTTON_1"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":217,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":217,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1698

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'pinMode'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:23:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:58:26:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\pinmode_arduino.h:72:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:94:6:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:6:13:\nnote: candidate function not viable: requires 2 arguments, but 1 was provided"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 402

{"id":218,"result":[{"title":"Expand macro 'BUTTON_1'","kind":"refactor","command":{"title":"Expand macro 'BUTTON_1'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server500105611/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":15,"character":18},"end":{"line":15,"character":18}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":325}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":326},"contentChanges":[{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":18}},"rangeLength":0,"text":","}]}}Content-Length: 222

{"jsonrpc":"2.0","id":219,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 385

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":19},"end":{"line":8,"character":20}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":219,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":220,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":19},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 183

{"id":220,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 491

{"jsonrpc":"2.0","id":221,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":19},"end":{"line":8,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":19},"end":{"line":8,"character":20}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":221,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":327},"contentChanges":[{"range":{"start":{"line":8,"character":19},"end":{"line":8,"character":19}},"rangeLength":0,"text":" "}]}}Content-Length: 222

{"jsonrpc":"2.0","id":222,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":222,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 385

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":328},"contentChanges":[{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":20}},"rangeLength":0,"text":"I"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":223,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 597

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'I'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":223,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":224,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":21},"context":{"triggerKind":1}}}
>>>
Content-Length: 46443

{"id":224,"result":{"isIncomplete":true,"items":[{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"int"}},{"label":"•IPAddress","kind":7,"documentation":{"kind":"markdown","value":"From `\"api/IPAddress.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"sortText":"3fe5e3e6IPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"IPAddress"}},{"label":"•isAlphaNumeric(int c)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"api/WCharacter.h\"`  \nWCharacter.h prototypes"},"sortText":"3ff25827isAlphaNumeric","filterText":"isAlphaNumeric","insertText":"isAlphaNumeric(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"isAlphaNumeric(${1:int c})"}},{"label":"•isAscii(int c)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"api/WCharacter.h\"`  \nChecks whether c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"3ff25827isAscii","filterText":"isAscii","insertText":"isAscii(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"isAscii(${1:int c})"}},{"label":"•isPunct(int c)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"api/WCharacter.h\"`  \nChecks for any printable character which is not a space or an alphanumeric character."},"sortText":"3ff25827isPunct","filterText":"isPunct","insertText":"isPunct(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"isPunct(${1:int c})"}},{"label":" INPUT","kind":20,"detail":"PinMode","sortText":"403f858bINPUT","filterText":"INPUT","insertText":"INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"INPUT"}},{"label":" INPUT_PULLDOWN","kind":20,"detail":"PinMode","sortText":"403f858bINPUT_PULLDOWN","filterText":"INPUT_PULLDOWN","insertText":"INPUT_PULLDOWN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"INPUT_PULLDOWN"}},{"label":" INPUT_PULLUP","kind":20,"detail":"PinMode","sortText":"403f858bINPUT_PULLUP","filterText":"INPUT_PULLUP","insertText":"INPUT_PULLUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"INPUT_PULLUP"}},{"label":"•i2c_slave_mode(i2c_t *obj, int enable_slave)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nConfigure I2C as slave or master.  \n@param obj The I2C object  \n@param enable_slave Enable i2c hardware so you can receive events with ::i2c_slave_receive  \n@return non-zero if a value is available"},"sortText":"40463cd8i2c_slave_mode","filterText":"i2c_slave_mode","insertText":"i2c_slave_mode(${1:i2c_t *obj}, ${2:int enable_slave})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_slave_mode(${1:i2c_t *obj}, ${2:int enable_slave})"}},{"label":"•initVariant()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`  \nWeak empty variant initialization function.  \nMay be redefined by variant files."},"sortText":"405d8e68initVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"initVariant()"}},{"label":"•itoa(int value, char *string, int radix)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"From `\"api/itoa.h\"`"},"sortText":"4068a03fitoa","filterText":"itoa","insertText":"itoa(${1:int value}, ${2:char *string}, ${3:int radix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"itoa(${1:int value}, ${2:char *string}, ${3:int radix})"}},{"label":" isgreater","kind":18,"sortText":"406c52eaisgreater","filterText":"isgreater","insertText":"isgreater","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"isgreater"}},{"label":" isgreaterequal","kind":18,"sortText":"406c52eaisgreaterequal","filterText":"isgreaterequal","insertText":"isgreaterequal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"isgreaterequal"}},{"label":" islessequal","kind":18,"sortText":"406c52eaislessequal","filterText":"islessequal","insertText":"islessequal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"islessequal"}},{"label":"•IO_IRQ_QSPIn","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4071b066IO_IRQ_QSPIn","filterText":"IO_IRQ_QSPIn","insertText":"IO_IRQ_QSPIn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"IO_IRQ_QSPIn"}},{"label":" imaxabs(intmax_t j)","kind":3,"detail":"intmax_t","sortText":"4071b066imaxabs","filterText":"imaxabs","insertText":"imaxabs(${1:intmax_t j})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"imaxabs(${1:intmax_t j})"}},{"label":" int_fast8_t","kind":8,"sortText":"4071b066int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"int_fast8_t"}},{"label":" isascii(int __c)","kind":3,"detail":"int","sortText":"4071b066isascii","filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"isascii(${1:int __c})"}},{"label":" isdigit(int __c)","kind":3,"detail":"int","sortText":"4071b066isdigit","filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"isdigit(${1:int __c})"}},{"label":" islower_l(int __c, locale_t __l)","kind":3,"detail":"int","sortText":"4071b066islower_l","filterText":"islower_l","insertText":"islower_l(${1:int __c}, ${2:locale_t __l})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"islower_l(${1:int __c}, ${2:locale_t __l})"}},{"label":" isprint_l(int __c, locale_t __l)","kind":3,"detail":"int","sortText":"4071b066isprint_l","filterText":"isprint_l","insertText":"isprint_l(${1:int __c}, ${2:locale_t __l})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"isprint_l(${1:int __c}, ${2:locale_t __l})"}},{"label":" isupper(int __c)","kind":3,"detail":"int","sortText":"4071b066isupper","filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"isupper(${1:int __c})"}},{"label":"•IAR","kind":20,"detail":"mbed_compiler_id_t","documentation":{"kind":"markdown","value":"From `\"mbed_stats.h\"`  \nIAR"},"sortText":"40791bfcIAR","filterText":"IAR","insertText":"IAR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"IAR"}},{"label":" iswblank(wint_t)","kind":3,"detail":"int","sortText":"40791bfciswblank","filterText":"iswblank","insertText":"iswblank(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"iswblank(${1:wint_t})"}},{"label":" iswdigit(wint_t)","kind":3,"detail":"int","sortText":"40791bfciswdigit","filterText":"iswdigit","insertText":"iswdigit(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"iswdigit(${1:wint_t})"}},{"label":" iswgraph_l(wint_t, locale_t)","kind":3,"detail":"int","sortText":"40791bfciswgraph_l","filterText":"iswgraph_l","insertText":"iswgraph_l(${1:wint_t}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"iswgraph_l(${1:wint_t}, ${2:locale_t})"}},{"label":" iswspace(wint_t)","kind":3,"detail":"int","sortText":"40791bfciswspace","filterText":"iswspace","insertText":"iswspace(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"iswspace(${1:wint_t})"}},{"label":" int32_t","kind":8,"sortText":"407f2f3bint32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"int32_t"}},{"label":"•IRQ_NONE","kind":20,"detail":"gpio_irq_event","documentation":{"kind":"markdown","value":"From `\"gpio_irq_api.h\"`"},"sortText":"4088511fIRQ_NONE","filterText":"IRQ_NONE","insertText":"IRQ_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"IRQ_NONE"}},{"label":"•i2c_s","kind":22,"documentation":{"kind":"markdown","value":"From `\"objects.h\"`"},"sortText":"4088511fi2c_s","filterText":"i2c_s","insertText":"i2c_s","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_s"}},{"label":"•i2c_slave_write(i2c_t *obj, const char *data, int length)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nConfigure I2C as slave or master.  \n@param obj The I2C object  \n@param data The buffer for sending  \n@param length Number of bytes to write  \n@return non-zero if a value is available"},"sortText":"4088511fi2c_slave_write","filterText":"i2c_slave_write","insertText":"i2c_slave_write(${1:i2c_t *obj}, ${2:const char *data}, ${3:int length})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_slave_write(${1:i2c_t *obj}, ${2:const char *data}, ${3:int length})"}},{"label":"•i2c_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nNon-asynch I2C HAL structure"},"sortText":"4088511fi2c_t","filterText":"i2c_t","insertText":"i2c_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_t"}},{"label":"•i2c_write(i2c_t *obj, int address, const char *data, int length, int stop)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"i2c_api.h\"`  \nBlocking sending data  \n@param obj The I2C object  \n@param address 7-bit address (last bit is 0)  \n@param data The buffer for sending  \n@param length Number of bytes to write  \n@param stop Stop to be generated after the transfer is done  \n@return zero or non-zero - Number of written bytes negative - I2C_ERROR_XXX status"},"sortText":"4088511fi2c_write","filterText":"i2c_write","insertText":"i2c_write(${1:i2c_t *obj}, ${2:int address}, ${3:const char *data}, ${4:int length}, ${5:int stop})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_write(${1:i2c_t *obj}, ${2:int address}, ${3:const char *data}, ${4:int length}, ${5:int stop})"}},{"label":"•ICMPSocket","kind":7,"documentation":{"kind":"markdown","value":"From `\"ICMPSocket.h\"`  \nICMP socket implementation."},"sortText":"40907626ICMPSocket","filterText":"ICMPSocket","insertText":"ICMPSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"ICMPSocket"}},{"label":"•InternetDatagramSocket","kind":7,"documentation":{"kind":"markdown","value":"From `\"InternetDatagramSocket.h\"`  \nInternetDatagramSocket socket implementation."},"sortText":"40907626InternetDatagramSocket","filterText":"InternetDatagramSocket","insertText":"InternetDatagramSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"InternetDatagramSocket"}},{"label":"•std::ilogb(long double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aailogb","filterText":"ilogb","insertText":"std::ilogb(${1:long double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::ilogb(${1:long double __x})"}},{"label":"•mbed::detail::invoke_r\u003ctypename R\u003e(F \u0026\u0026f, Args \u0026\u0026args...)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"Callback.h\"`"},"sortText":"4092d0aainvoke_r","filterText":"invoke_r","insertText":"mbed::detail::invoke_r\u003c${1:typename R}\u003e(${2:F \u0026\u0026f}, ${3:Args \u0026\u0026args...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mbed::detail::invoke_r\u003c${1:typename R}\u003e(${2:F \u0026\u0026f}, ${3:Args \u0026\u0026args...})"}},{"label":"•std::isgreater(double __x, double __y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisgreater","filterText":"isgreater","insertText":"std::isgreater(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::isgreater(${1:double __x}, ${2:double __y})"}},{"label":"•std::isless(_Tp __x, _Up __y)","kind":3,"detail":"typename __gnu_cxx::__enable_if\u003c(__is_arithmetic\u003c_Tp\u003e::__value \u0026\u0026 __is_arithmetic\u003c_Up\u003e::__value), bool\u003e::__type","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisless","filterText":"isless","insertText":"std::isless(${1:_Tp __x}, ${2:_Up __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::isless(${1:_Tp __x}, ${2:_Up __y})"}},{"label":"•std::islessgreater(float __x, float __y)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaislessgreater","filterText":"islessgreater","insertText":"std::islessgreater(${1:float __x}, ${2:float __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::islessgreater(${1:float __x}, ${2:float __y})"}},{"label":"•std::isnormal(double __x)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaisnormal","filterText":"isnormal","insertText":"std::isnormal(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::isnormal(${1:double __x})"}},{"label":"•i2c_get_write_available(i2c_inst_t *i2c)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\\\brief Determine non-blocking write space available  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\return 0 if no space is available in the I2C to write more data. If return is nonzero, at least that many bytes can be written without blocking."},"sortText":"409c96d9i2c_get_write_available","filterText":"i2c_get_write_available","insertText":"i2c_get_write_available(${1:i2c_inst_t *i2c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_get_write_available(${1:i2c_inst_t *i2c})"}},{"label":"•i2c_inst","kind":22,"documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\---------------------------------------------------------------------------- Generic input/output"},"sortText":"409c96d9i2c_inst","filterText":"i2c_inst","insertText":"i2c_inst","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_inst"}},{"label":"•i2c_read_blocking_until(i2c_inst_t *i2c, uint8_t addr, uint8_t *dst, size_t len, bool nostop, absolute_time_t until)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\\\brief Attempt to read specified number of bytes from address, blocking until the specified absolute time is reached.  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param addr Address of device to read from  \n\\\\param dst Pointer to buffer to receive data  \n\\\\param len Length of data in bytes to receive  \n\\\\param nostop If true, master retains control of the bus at the end of the transfer (no Stop is issued),  \nand the next transfer will begin with a Restart rather than a Start.  \n\\\\param until The absolute time that the block will wait until the entire transaction is complete.  \n\\\\return Number of bytes read, or PICO_ERROR_GENERIC if address not acknowledged, no device present, or PICO_ERROR_TIMEOUT if a timeout occurred."},"sortText":"409c96d9i2c_read_blocking_until","filterText":"i2c_read_blocking_until","insertText":"i2c_read_blocking_until(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:absolute_time_t until})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_read_blocking_until(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:absolute_time_t until})"}},{"label":"•i2c_read_raw_blocking(i2c_inst_t *i2c, uint8_t *dst, size_t len)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\\\brief Write direct to TX FIFO  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param dst Buffer to accept data  \n\\\\param len Number of bytes to send  \nReads directly from the I2C RX FIFO which us mainly useful for slave-mode operation."},"sortText":"409c96d9i2c_read_raw_blocking","filterText":"i2c_read_raw_blocking","insertText":"i2c_read_raw_blocking(${1:i2c_inst_t *i2c}, ${2:uint8_t *dst}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_read_raw_blocking(${1:i2c_inst_t *i2c}, ${2:uint8_t *dst}, ${3:size_t len})"}},{"label":"•i2c_read_timeout_us(i2c_inst_t *i2c, uint8_t addr, uint8_t *dst, size_t len, bool nostop, uint timeout_us)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\\\brief Attempt to read specified number of bytes from address, with timeout  \n\\\\ingroup hardware_i2c  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param addr Address of device to read from  \n\\\\param dst Pointer to buffer to receive data  \n\\\\param len Length of data in bytes to receive  \n\\\\param nostop If true, master retains control of the bus at the end of the transfer (no Stop is issued),  \nand the next transfer will begin with a Restart rather than a Start.  \n\\\\param timeout_us The time that the function will wait for the entire transaction to complete  \n\\\\return Number of bytes read, or PICO_ERROR_GENERIC if address not acknowledged, no device present, or PICO_ERROR_TIMEOUT if a timeout occurred."},"sortText":"409c96d9i2c_read_timeout_us","filterText":"i2c_read_timeout_us","insertText":"i2c_read_timeout_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_read_timeout_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:uint8_t *dst}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_us})"}},{"label":"•i2c_set_baudrate(i2c_inst_t *i2c, uint baudrate)","kind":3,"detail":"uint","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`  \n\\\\brief Set I2C baudrate  \n\\\\ingroup hardware_i2c  \nSet I2C bus frequency as close as possible to requested, and return actual rate set.  \nBaudrate may not be as exactly requested due to clocking limitations.  \n\\\\param i2c Either \\\\ref i2c0 or \\\\ref i2c1  \n\\\\param baudrate Baudrate in Hz (e.g. 100kHz is 100000)  \n\\\\return Actual set baudrate"},"sortText":"409c96d9i2c_set_baudrate","filterText":"i2c_set_baudrate","insertText":"i2c_set_baudrate(${1:i2c_inst_t *i2c}, ${2:uint baudrate})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_set_baudrate(${1:i2c_inst_t *i2c}, ${2:uint baudrate})"}},{"label":"•i2c_write_timeout_per_char_us(i2c_inst_t *i2c, uint8_t addr, const uint8_t *src, size_t len, bool nostop, uint timeout_per_char_us)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"i2c.h\"`"},"sortText":"409c96d9i2c_write_timeout_per_char_us","filterText":"i2c_write_timeout_per_char_us","insertText":"i2c_write_timeout_per_char_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:const uint8_t *src}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_per_char_us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"i2c_write_timeout_per_char_us(${1:i2c_inst_t *i2c}, ${2:uint8_t addr}, ${3:const uint8_t *src}, ${4:size_t len}, ${5:bool nostop}, ${6:uint timeout_per_char_us})"}},{"label":"•irq_get_vtable_handler(uint num)","kind":3,"detail":"irq_handler_t","documentation":{"kind":"markdown","value":"From `\"irq.h\"`  \n\\\\brief Get the current IRQ handler for the specified IRQ from the currently installed hardware vector table (VTOR) of the execution core  \n\\\\ingroup hardware_irq  \n\\\\param num Interrupt number \\\\ref interrupt_nums  \n\\\\return the address stored in the VTABLE for the given irq number"},"sortText":"409c96d9irq_get_vtable_handler","filterText":"irq_get_vtable_handler","insertText":"irq_get_vtable_handler(${1:uint num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"irq_get_vtable_handler(${1:uint num})"}},{"label":"•std::is_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_assignable"},"sortText":"409f2ea4is_assignable","filterText":"is_assignable","insertText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_bind_expression\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a function object that should be treated as a subexpression when evaluating calls to function objects returned by bind().  \nC++11 [func.bind.isbind].  \n@ingroup binders"},"sortText":"409f2ea4is_bind_expression","filterText":"is_bind_expression","insertText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_bind_expression\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_class\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_class"},"sortText":"409f2ea4is_class","filterText":"is_class","insertText":"std::is_class\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_class\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_convertible\u003ctypename _From, typename _To\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_convertible"},"sortText":"409f2ea4is_convertible","filterText":"is_convertible","insertText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_convertible\u003c${1:typename _From}, ${2:typename _To}\u003e"}},{"label":"•std::is_error_code_enum\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003csystem_error\u003e`  \nis_error_code_enum"},"sortText":"409f2ea4is_error_code_enum","filterText":"is_error_code_enum","insertText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_error_code_enum\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_literal_type\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_literal_type"},"sortText":"409f2ea4is_literal_type","filterText":"is_literal_type","insertText":"std::is_literal_type\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_literal_type\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_member_function_pointer\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_member_function_pointer"},"sortText":"409f2ea4is_member_function_pointer","filterText":"is_member_function_pointer","insertText":"std::is_member_function_pointer\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_member_function_pointer\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_swappable_with\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable_with"},"sortText":"409f2ea4is_nothrow_swappable_with","filterText":"is_nothrow_swappable_with","insertText":"std::is_nothrow_swappable_with\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_nothrow_swappable_with\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_nothrow_swappable_with_v\u003ctypename _Tp, typename _Up\u003e","kind":6,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable_with_v"},"sortText":"409f2ea4is_nothrow_swappable_with_v","filterText":"is_nothrow_swappable_with_v","insertText":"std::is_nothrow_swappable_with_v\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_nothrow_swappable_with_v\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_placeholder\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \n@brief Determines if the given type \\_Tp is a placeholder in a bind() expression and, if so, which placeholder it is.  \nC++11 [func.bind.isplace].  \n@ingroup binders"},"sortText":"409f2ea4is_placeholder","filterText":"is_placeholder","insertText":"std::is_placeholder\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_placeholder\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_polymorphic\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_polymorphic"},"sortText":"409f2ea4is_polymorphic","filterText":"is_polymorphic","insertText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_polymorphic\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_reference\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_reference"},"sortText":"409f2ea4is_reference","filterText":"is_reference","insertText":"std::is_reference\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_reference\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_assignable\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_assignable"},"sortText":"409f2ea4is_trivially_assignable","filterText":"is_trivially_assignable","insertText":"std::is_trivially_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_trivially_assignable\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•std::is_trivially_move_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_move_assignable"},"sortText":"409f2ea4is_trivially_move_assignable","filterText":"is_trivially_move_assignable","insertText":"std::is_trivially_move_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_trivially_move_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_trivially_move_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_trivially_move_constructible"},"sortText":"409f2ea4is_trivially_move_constructible","filterText":"is_trivially_move_constructible","insertText":"std::is_trivially_move_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_trivially_move_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_unsigned\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_unsigned"},"sortText":"409f2ea4is_unsigned","filterText":"is_unsigned","insertText":"std::is_unsigned\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_unsigned\u003c${1:typename _Tp}\u003e"}},{"label":"•interp_hw_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"structs/interp.h\"`"},"sortText":"40a7b70binterp_hw_t","filterText":"interp_hw_t","insertText":"interp_hw_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"interp_hw_t"}},{"label":"•mstd::impl::INVOKE(F Base::*obj, T1 \u0026\u0026target)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`  \nF is pointer to member object, and only arg is a reference wrapper"},"sortText":"40a94eb8INVOKE","filterText":"INVOKE","insertText":"mstd::impl::INVOKE(${1:F Base::*obj}, ${2:T1 \u0026\u0026target})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::impl::INVOKE(${1:F Base::*obj}, ${2:T1 \u0026\u0026target})"}},{"label":"•std::input_iterator_tag","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@defgroup iterator_tags Iterator Tags These are empty types, used to distinguish different iterators. The distinction is not made by what they contain, but simply by what they are. Different underlying algorithms can then be used based on the different operations supported by different iterator types.  \n@{ Marking input iterators."},"sortText":"40a94eb8input_iterator_tag","filterText":"input_iterator_tag","insertText":"std::input_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::input_iterator_tag"}},{"label":"•std::is_heap_until(_RAIter, _RAIter)","kind":3,"detail":"_RAIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8is_heap_until","filterText":"is_heap_until","insertText":"std::is_heap_until(${1:_RAIter}, ${2:_RAIter})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_heap_until(${1:_RAIter}, ${2:_RAIter})"}},{"label":"•mstd::is_invocable_r\u003ctypename R, typename F, typename Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8is_invocable_r","filterText":"is_invocable_r","insertText":"mstd::is_invocable_r\u003c${1:typename R}, ${2:typename F}, ${3:typename Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_invocable_r\u003c${1:typename R}, ${2:typename F}, ${3:typename Args}\u003e"}},{"label":"•mstd::is_nothrow_invocable\u003cclass F, class Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8is_nothrow_invocable","filterText":"is_nothrow_invocable","insertText":"mstd::is_nothrow_invocable\u003c${1:class F}, ${2:class Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_nothrow_invocable\u003c${1:class F}, ${2:class Args}\u003e"}},{"label":"•mstd::impl::is_nothrow_invocable_r\u003ctypename R, typename InvokeResult, typename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40a94eb8is_nothrow_invocable_r","filterText":"is_nothrow_invocable_r","insertText":"mstd::impl::is_nothrow_invocable_r\u003c${1:typename R}, ${2:typename InvokeResult}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::impl::is_nothrow_invocable_r\u003c${1:typename R}, ${2:typename InvokeResult}\u003e"}},{"label":"•std::is_sorted(_FIter, _FIter, _Compare)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8is_sorted","filterText":"is_sorted","insertText":"std::is_sorted(${1:_FIter}, ${2:_FIter}, ${3:_Compare})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_sorted(${1:_FIter}, ${2:_FIter}, ${3:_Compare})"}},{"label":"•std::is_sorted_until(_FIter, _FIter)","kind":3,"detail":"_FIter","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40a94eb8is_sorted_until","filterText":"is_sorted_until","insertText":"std::is_sorted_until(${1:_FIter}, ${2:_FIter})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::is_sorted_until(${1:_FIter}, ${2:_FIter})"}},{"label":"•std::iterator\u003ctypename _Category, typename _Tp, typename _Distance, typename _Pointer, typename _Reference\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief Common %iterator class.  \nThis class does nothing but define nested typedefs. %Iterator classes can inherit from this class to save some work. The typedefs are then used in specializations and overloading.  \nIn particular, there are no default implementations of requirements such as @c operator++ and the like. (How could there be?)"},"sortText":"40a94eb8iterator","filterText":"iterator","insertText":"std::iterator\u003c${1:typename _Category}, ${2:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::iterator\u003c${1:typename _Category}, ${2:typename _Tp}\u003e"}},{"label":"•std::iterator_traits\u003ctypename _Iterator\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`"},"sortText":"40a94eb8iterator_traits","filterText":"iterator_traits","insertText":"std::iterator_traits\u003c${1:typename _Iterator}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::iterator_traits\u003c${1:typename _Iterator}\u003e"}},{"label":"•mbed::InterruptIn","kind":7,"documentation":{"kind":"markdown","value":"From `\"InterruptIn.h\"`  \nA digital interrupt input, used to call a function on a rising or falling edge  \n@note Synchronization level: Interrupt safe  \nExample:  \n@code // Flash an LED while waiting for events  \n#include \"mbed.h\"  \nInterruptIn event(p16);  \nDigitalOut led(LED1);  \nvoid trigger() { printf(\"triggered!\\\\n\");  \n}  \nint main() { // register trigger() to be called upon the rising edge of event event.rise(\u0026trigger);  \nwhile(1) { led = !led;  \nThisThread::sleep_for(250);  \n} }  \n@endcode"},"sortText":"40b198efInterruptIn","filterText":"InterruptIn","insertText":"mbed::InterruptIn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mbed::InterruptIn"}},{"label":"•std::int8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40b39ec4int8_t","filterText":"int8_t","insertText":"std::int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::int8_t"}},{"label":"•std::int_least32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40b39ec4int_least32_t","filterText":"int_least32_t","insertText":"std::int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::int_least32_t"}},{"label":"•std::intptr_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40b39ec4intptr_t","filterText":"intptr_t","insertText":"std::intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::intptr_t"}},{"label":"•std::isalnum","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`"},"sortText":"40b39ec4isalnum","filterText":"isalnum","insertText":"std::isalnum","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::isalnum"}},{"label":"•std::isdigit","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`"},"sortText":"40b39ec4isdigit","filterText":"isdigit","insertText":"std::isdigit","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::isdigit"}},{"label":"•std::isprint","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`"},"sortText":"40b39ec4isprint","filterText":"isprint","insertText":"std::isprint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::isprint"}},{"label":"•std::isspace","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`"},"sortText":"40b39ec4isspace","filterText":"isspace","insertText":"std::isspace","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::isspace"}},{"label":"•std::isupper","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccctype\u003e`"},"sortText":"40b39ec4isupper","filterText":"isupper","insertText":"std::isupper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::isupper"}},{"label":"•std::iswprint","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwctype\u003e`"},"sortText":"40b39ec4iswprint","filterText":"iswprint","insertText":"std::iswprint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"std::iswprint"}},{"label":"•mstd::inserter","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40bcd333inserter","filterText":"inserter","insertText":"mstd::inserter","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::inserter"}},{"label":"•mstd::is_abstract","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_abstract","filterText":"is_abstract","insertText":"mstd::is_abstract","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_abstract"}},{"label":"•mstd::is_arithmetic","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_arithmetic","filterText":"is_arithmetic","insertText":"mstd::is_arithmetic","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_arithmetic"}},{"label":"•mstd::is_array","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_array","filterText":"is_array","insertText":"mstd::is_array","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_array"}},{"label":"•mstd::is_compound","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_compound","filterText":"is_compound","insertText":"mstd::is_compound","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_compound"}},{"label":"•mstd::is_copy_assignable","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_copy_assignable","filterText":"is_copy_assignable","insertText":"mstd::is_copy_assignable","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_copy_assignable"}},{"label":"•mstd::is_default_constructible","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_default_constructible","filterText":"is_default_constructible","insertText":"mstd::is_default_constructible","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_default_constructible"}},{"label":"•mstd::is_member_function_pointer","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_member_function_pointer","filterText":"is_member_function_pointer","insertText":"mstd::is_member_function_pointer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_member_function_pointer"}},{"label":"•mstd::is_member_object_pointer","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_member_object_pointer","filterText":"is_member_object_pointer","insertText":"mstd::is_member_object_pointer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_member_object_pointer"}},{"label":"•mstd::is_null_pointer","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_null_pointer","filterText":"is_null_pointer","insertText":"mstd::is_null_pointer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_null_pointer"}},{"label":"•mstd::is_signed","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_signed","filterText":"is_signed","insertText":"mstd::is_signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_signed"}},{"label":"•mstd::is_standard_layout","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_standard_layout","filterText":"is_standard_layout","insertText":"mstd::is_standard_layout","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_standard_layout"}},{"label":"•mstd::is_trivially_destructible","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40bcd333is_trivially_destructible","filterText":"is_trivially_destructible","insertText":"mstd::is_trivially_destructible","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::is_trivially_destructible"}},{"label":"•mstd::istreambuf_iterator","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40bcd333istreambuf_iterator","filterText":"istreambuf_iterator","insertText":"mstd::istreambuf_iterator","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":21}},"newText":"mstd::istreambuf_iterator"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":329},"contentChanges":[{"range":{"start":{"line":8,"character":21},"end":{"line":8,"character":21}},"rangeLength":0,"text":"N"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":225,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":225,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 598

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'IN'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":226,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":22},"context":{"triggerKind":3}}}
>>>
Content-Length: 39141

{"id":226,"result":{"isIncomplete":true,"items":[{"label":" int","kind":14,"sortText":"3f200000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int"}},{"label":"•INADDR_NONE","kind":6,"detail":"const IPAddress","documentation":{"kind":"markdown","value":"From `\"api/IPAddress.h\"`"},"sortText":"3ff25827INADDR_NONE","filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INADDR_NONE"}},{"label":" INPUT","kind":20,"detail":"PinMode","sortText":"403f858bINPUT","filterText":"INPUT","insertText":"INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INPUT"}},{"label":" INPUT_PULLDOWN","kind":20,"detail":"PinMode","sortText":"403f858bINPUT_PULLDOWN","filterText":"INPUT_PULLDOWN","insertText":"INPUT_PULLDOWN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INPUT_PULLDOWN"}},{"label":" INPUT_PULLUP","kind":20,"detail":"PinMode","sortText":"403f858bINPUT_PULLUP","filterText":"INPUT_PULLUP","insertText":"INPUT_PULLUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INPUT_PULLUP"}},{"label":" internal","kind":9,"sortText":"40620e33internal","filterText":"internal","insertText":"internal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"internal"}},{"label":"•init()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"4071dc9binit","filterText":"init","insertText":"init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"init()"}},{"label":"•initVariant()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`  \nWeak empty variant initialization function.  \nMay be redefined by variant files."},"sortText":"4071dc9binitVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"initVariant()"}},{"label":" index(const char *, int)","kind":3,"detail":"char *","sortText":"4086f4b4index","filterText":"index","insertText":"index(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"index(${1:const char *}, ${2:int})"}},{"label":"•int_farptr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"avr/pgmspace.h\"`"},"sortText":"4086f4b4int_farptr_t","filterText":"int_farptr_t","insertText":"int_farptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int_farptr_t"}},{"label":" int_fast16_t","kind":8,"sortText":"4086f4b4int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"sortText":"4086f4b4int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"sortText":"4086f4b4int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"sortText":"4086f4b4int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int_fast8_t"}},{"label":" int_least16_t","kind":8,"sortText":"4086f4b4int_least16_t","filterText":"int_least16_t","insertText":"int_least16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int_least16_t"}},{"label":" int_least32_t","kind":8,"sortText":"4086f4b4int_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int_least32_t"}},{"label":" int_least64_t","kind":8,"sortText":"4086f4b4int_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int_least64_t"}},{"label":" int_least8_t","kind":8,"sortText":"4086f4b4int_least8_t","filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int_least8_t"}},{"label":" infinity()","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"Non ANSI double precision functions."},"sortText":"4093f0f9infinity","filterText":"infinity","insertText":"infinity()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"infinity()"}},{"label":" infinityf()","kind":3,"detail":"float","sortText":"4093f0f9infinityf","filterText":"infinityf","insertText":"infinityf()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"infinityf()"}},{"label":" initstate(unsigned int, char *, size_t)","kind":3,"detail":"char *","sortText":"4093f0f9initstate","filterText":"initstate","insertText":"initstate(${1:unsigned int}, ${2:char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"initstate(${1:unsigned int}, ${2:char *}, ${3:size_t})"}},{"label":"•in_addr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"409e92a8in_addr_t","filterText":"in_addr_t","insertText":"in_addr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"in_addr_t"}},{"label":"•in_port_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"409e92a8in_port_t","filterText":"in_port_t","insertText":"in_port_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"in_port_t"}},{"label":"•ino_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"409e92a8ino_t","filterText":"ino_t","insertText":"ino_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"ino_t"}},{"label":" int16_t","kind":8,"sortText":"409e92a8int16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int16_t"}},{"label":" int32_t","kind":8,"sortText":"409e92a8int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int32_t"}},{"label":" int64_t","kind":8,"sortText":"409e92a8int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int64_t"}},{"label":" int8_t","kind":8,"sortText":"409e92a8int8_t","filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int8_t"}},{"label":" intmax_t","kind":8,"sortText":"409e92a8intmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"intmax_t"}},{"label":" intptr_t","kind":8,"sortText":"409e92a8intptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"intptr_t"}},{"label":"•mstd::impl::INVOKE(…)","kind":3,"detail":"[7 overloads]","documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`  \nF is pointer to member function, and 1st arg decays to matching class"},"sortText":"40a94eb8INVOKE","filterText":"INVOKE","insertText":"mstd::impl::INVOKE($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::impl::INVOKE($0)"}},{"label":"•InternetDatagramSocket","kind":7,"documentation":{"kind":"markdown","value":"From `\"InternetDatagramSocket.h\"`  \nInternetDatagramSocket socket implementation."},"sortText":"40ae6761InternetDatagramSocket","filterText":"InternetDatagramSocket","insertText":"InternetDatagramSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"InternetDatagramSocket"}},{"label":"•InternetSocket","kind":7,"documentation":{"kind":"markdown","value":"From `\"InternetSocket.h\"`  \nSocket implementation that uses IP network stack.  \nNot to be directly used by applications. Cannot be directly instantiated."},"sortText":"40ae6761InternetSocket","filterText":"InternetSocket","insertText":"InternetSocket","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"InternetSocket"}},{"label":"•int_fast24_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"ns_types.h\"`"},"sortText":"40ae6761int_fast24_t","filterText":"int_fast24_t","insertText":"int_fast24_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int_fast24_t"}},{"label":"•int_least24_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"ns_types.h\"`"},"sortText":"40ae6761int_least24_t","filterText":"int_least24_t","insertText":"int_least24_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"int_least24_t"}},{"label":"•mbed::detail::invoke_r\u003ctypename R\u003e(F \u0026\u0026f, Args \u0026\u0026args...)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"Callback.h\"`"},"sortText":"40b07695invoke_r","filterText":"invoke_r","insertText":"mbed::detail::invoke_r\u003c${1:typename R}\u003e(${2:F \u0026\u0026f}, ${3:Args \u0026\u0026args...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mbed::detail::invoke_r\u003c${1:typename R}\u003e(${2:F \u0026\u0026f}, ${3:Args \u0026\u0026args...})"}},{"label":"•std::index_sequence\u003csize_t _Idx\u003e","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \nAlias template index_sequence"},"sortText":"40bb48d0index_sequence","filterText":"index_sequence","insertText":"std::index_sequence\u003c${1:size_t _Idx}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::index_sequence\u003c${1:size_t _Idx}\u003e"}},{"label":"•std::index_sequence_for\u003ctypename _Types\u003e","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \nAlias template index_sequence_for"},"sortText":"40bb48d0index_sequence_for","filterText":"index_sequence_for","insertText":"std::index_sequence_for\u003c${1:typename _Types}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::index_sequence_for\u003c${1:typename _Types}\u003e"}},{"label":"•std::initializer_list\u003cclass _E\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cinitializer_list\u003e`  \ninitializer_list"},"sortText":"40bb48d0initializer_list","filterText":"initializer_list","insertText":"std::initializer_list\u003c${1:class _E}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::initializer_list\u003c${1:class _E}\u003e"}},{"label":"•std::integer_sequence\u003ctypename _Tp, _Tp _Idx\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cutility\u003e`  \nClass template integer_sequence"},"sortText":"40bb48d0integer_sequence","filterText":"integer_sequence","insertText":"std::integer_sequence\u003c${1:typename _Tp}, ${2:_Tp _Idx}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::integer_sequence\u003c${1:typename _Tp}, ${2:_Tp _Idx}\u003e"}},{"label":"•std::integral_constant\u003ctypename _Tp, _Tp __v\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nintegral_constant"},"sortText":"40bb48d0integral_constant","filterText":"integral_constant","insertText":"std::integral_constant\u003c${1:typename _Tp}, ${2:_Tp __v}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::integral_constant\u003c${1:typename _Tp}, ${2:_Tp __v}\u003e"}},{"label":"•std::invalid_argument","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstdexcept\u003e`  \nThrown to report invalid arguments to functions."},"sortText":"40bb48d0invalid_argument","filterText":"invalid_argument","insertText":"std::invalid_argument","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::invalid_argument"}},{"label":"•interp_hw_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"structs/interp.h\"`"},"sortText":"40c2c029interp_hw_t","filterText":"interp_hw_t","insertText":"interp_hw_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"interp_hw_t"}},{"label":"•std::includes(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nfor_each generate generate_n"},"sortText":"40c424e1includes","filterText":"includes","insertText":"std::includes($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::includes($0)"}},{"label":"•std::inplace_merge(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40c424e1inplace_merge","filterText":"inplace_merge","insertText":"std::inplace_merge($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::inplace_merge($0)"}},{"label":"•std::input_iterator_tag","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@defgroup iterator_tags Iterator Tags These are empty types, used to distinguish different iterators. The distinction is not made by what they contain, but simply by what they are. Different underlying algorithms can then be used based on the different operations supported by different iterator types.  \n@{ Marking input iterators."},"sortText":"40c424e1input_iterator_tag","filterText":"input_iterator_tag","insertText":"std::input_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::input_iterator_tag"}},{"label":"•std::insert_iterator\u003ctypename _Container\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@brief Turns assignment into insertion.  \nThese are output iterators, constructed from a container-of-T.  \nAssigning a T to the iterator inserts it in the container at the %iterator's position, rather than overwriting the value at that position.  \n(Sequences will actually insert a @e copy of the value before the %iterator's position.)  \nTip: Using the inserter function to create these iterators can save typing."},"sortText":"40c424e1insert_iterator","filterText":"insert_iterator","insertText":"std::insert_iterator\u003c${1:typename _Container}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::insert_iterator\u003c${1:typename _Container}\u003e"}},{"label":"•std::inserter(_Container \u0026__x, _Iterator __i)","kind":3,"detail":"insert_iterator\u003c_Container\u003e","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@param \\_\\_x A container of arbitrary type.  \n@return An instance of insert_iterator working on @p \\_\\_x.  \nThis wrapper function helps in creating insert_iterator instances.  \nTyping the name of the %iterator requires knowing the precise full type of the container, which can be tedious and impedes generic programming. Using this function lets you take advantage of automatic template parameter deduction, making the compiler match the correct types for you."},"sortText":"40c424e1inserter","filterText":"inserter","insertText":"std::inserter(${1:_Container \u0026__x}, ${2:_Iterator __i})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::inserter(${1:_Container \u0026__x}, ${2:_Iterator __i})"}},{"label":"•std::internal(ios_base \u0026__base)","kind":3,"detail":"ios_base \u0026","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \n[27.4.5.2] adjustfield manipulators Calls base.setf(ios_base::internal, ios_base::adjustfield)."},"sortText":"40c424e1internal","filterText":"internal","insertText":"std::internal(${1:ios_base \u0026__base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::internal(${1:ios_base \u0026__base})"}},{"label":"•mstd::invoke(F \u0026\u0026f, Args \u0026\u0026args...)","kind":3,"detail":"invoke_result_t\u003cF, Args...\u003e","documentation":{"kind":"markdown","value":"From `\"mstd_functional\"`"},"sortText":"40c424e1invoke","filterText":"invoke","insertText":"mstd::invoke(${1:F \u0026\u0026f}, ${2:Args \u0026\u0026args...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::invoke(${1:F \u0026\u0026f}, ${2:Args \u0026\u0026args...})"}},{"label":"•mstd::invoke_result\u003ctypename F, typename Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40c424e1invoke_result","filterText":"invoke_result","insertText":"mstd::invoke_result\u003c${1:typename F}, ${2:typename Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::invoke_result\u003c${1:typename F}, ${2:typename Args}\u003e"}},{"label":"•mstd::impl::invoke_result\u003ctypename Void, typename F, typename Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40c424e1invoke_result","filterText":"invoke_result","insertText":"mstd::impl::invoke_result\u003c${1:typename Void}, ${2:typename F}, ${3:typename Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::impl::invoke_result\u003c${1:typename Void}, ${2:typename F}, ${3:typename Args}\u003e"}},{"label":"•mstd::invoke_result_t\u003cclass F, class Args\u003e","kind":8,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40c424e1invoke_result_t","filterText":"invoke_result_t","insertText":"mstd::invoke_result_t\u003c${1:class F}, ${2:class Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::invoke_result_t\u003c${1:class F}, ${2:class Args}\u003e"}},{"label":"•mbed::InterruptIn","kind":7,"documentation":{"kind":"markdown","value":"From `\"InterruptIn.h\"`  \nA digital interrupt input, used to call a function on a rising or falling edge  \n@note Synchronization level: Interrupt safe  \nExample:  \n@code // Flash an LED while waiting for events  \n#include \"mbed.h\"  \nInterruptIn event(p16);  \nDigitalOut led(LED1);  \nvoid trigger() { printf(\"triggered!\\\\n\");  \n}  \nint main() { // register trigger() to be called upon the rising edge of event event.rise(\u0026trigger);  \nwhile(1) { led = !led;  \nThisThread::sleep_for(250);  \n} }  \n@endcode"},"sortText":"40cb65d1InterruptIn","filterText":"InterruptIn","insertText":"mbed::InterruptIn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mbed::InterruptIn"}},{"label":"•std::int16_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint16_t","filterText":"int16_t","insertText":"std::int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int16_t"}},{"label":"•std::int32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint32_t","filterText":"int32_t","insertText":"std::int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int32_t"}},{"label":"•std::int64_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint64_t","filterText":"int64_t","insertText":"std::int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int64_t"}},{"label":"•std::int8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint8_t","filterText":"int8_t","insertText":"std::int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int8_t"}},{"label":"•std::int_fast16_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint_fast16_t","filterText":"int_fast16_t","insertText":"std::int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int_fast16_t"}},{"label":"•std::int_fast32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint_fast32_t","filterText":"int_fast32_t","insertText":"std::int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int_fast32_t"}},{"label":"•std::int_fast64_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint_fast64_t","filterText":"int_fast64_t","insertText":"std::int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int_fast64_t"}},{"label":"•std::int_fast8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint_fast8_t","filterText":"int_fast8_t","insertText":"std::int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int_fast8_t"}},{"label":"•std::int_least16_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint_least16_t","filterText":"int_least16_t","insertText":"std::int_least16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int_least16_t"}},{"label":"•std::int_least32_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint_least32_t","filterText":"int_least32_t","insertText":"std::int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int_least32_t"}},{"label":"•std::int_least64_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint_least64_t","filterText":"int_least64_t","insertText":"std::int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int_least64_t"}},{"label":"•std::int_least8_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecint_least8_t","filterText":"int_least8_t","insertText":"std::int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::int_least8_t"}},{"label":"•std::intmax_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecintmax_t","filterText":"intmax_t","insertText":"std::intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::intmax_t"}},{"label":"•std::intptr_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdint\u003e`"},"sortText":"40cd2aecintptr_t","filterText":"intptr_t","insertText":"std::intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::intptr_t"}},{"label":" INPUT","kind":1,"sortText":"40d1050aINPUT","filterText":"INPUT","insertText":"INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INPUT"}},{"label":" INPUT_PULLDOWN","kind":1,"sortText":"40d1050aINPUT_PULLDOWN","filterText":"INPUT_PULLDOWN","insertText":"INPUT_PULLDOWN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INPUT_PULLDOWN"}},{"label":" INPUT_PULLUP","kind":1,"sortText":"40d1050aINPUT_PULLUP","filterText":"INPUT_PULLUP","insertText":"INPUT_PULLUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INPUT_PULLUP"}},{"label":"•INT_IMU","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40d1050aINT_IMU","filterText":"INT_IMU","insertText":"INT_IMU","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INT_IMU"}},{"label":"•mstd::index_sequence","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_utility\"`"},"sortText":"40d538cdindex_sequence","filterText":"index_sequence","insertText":"mstd::index_sequence","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::index_sequence"}},{"label":"•mstd::index_sequence_for","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_utility\"`"},"sortText":"40d538cdindex_sequence_for","filterText":"index_sequence_for","insertText":"mstd::index_sequence_for","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::index_sequence_for"}},{"label":"•mstd::initializer_list","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_utility\"`"},"sortText":"40d538cdinitializer_list","filterText":"initializer_list","insertText":"mstd::initializer_list","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::initializer_list"}},{"label":"•mstd::input_iterator_tag","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`  \nomitting deprecated std::iterator"},"sortText":"40d538cdinput_iterator_tag","filterText":"input_iterator_tag","insertText":"mstd::input_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::input_iterator_tag"}},{"label":"•mstd::insert_iterator","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40d538cdinsert_iterator","filterText":"insert_iterator","insertText":"mstd::insert_iterator","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::insert_iterator"}},{"label":"•mstd::inserter","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`"},"sortText":"40d538cdinserter","filterText":"inserter","insertText":"mstd::inserter","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::inserter"}},{"label":"•mstd::integer_sequence","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_utility\"`"},"sortText":"40d538cdinteger_sequence","filterText":"integer_sequence","insertText":"mstd::integer_sequence","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::integer_sequence"}},{"label":"•std::is_nothrow_constructible\u003ctypename _Tp, typename _Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_constructible"},"sortText":"40d762fbis_nothrow_constructible","filterText":"is_nothrow_constructible","insertText":"std::is_nothrow_constructible\u003c${1:typename _Tp}, ${2:typename _Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::is_nothrow_constructible\u003c${1:typename _Tp}, ${2:typename _Args}\u003e"}},{"label":"•std::is_nothrow_copy_assignable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_copy_assignable"},"sortText":"40d762fbis_nothrow_copy_assignable","filterText":"is_nothrow_copy_assignable","insertText":"std::is_nothrow_copy_assignable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::is_nothrow_copy_assignable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_copy_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_copy_constructible"},"sortText":"40d762fbis_nothrow_copy_constructible","filterText":"is_nothrow_copy_constructible","insertText":"std::is_nothrow_copy_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::is_nothrow_copy_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_default_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_default_constructible"},"sortText":"40d762fbis_nothrow_default_constructible","filterText":"is_nothrow_default_constructible","insertText":"std::is_nothrow_default_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::is_nothrow_default_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_move_constructible\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_move_constructible"},"sortText":"40d762fbis_nothrow_move_constructible","filterText":"is_nothrow_move_constructible","insertText":"std::is_nothrow_move_constructible\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::is_nothrow_move_constructible\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_swappable\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable"},"sortText":"40d762fbis_nothrow_swappable","filterText":"is_nothrow_swappable","insertText":"std::is_nothrow_swappable\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::is_nothrow_swappable\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_swappable_v\u003ctypename _Tp\u003e","kind":6,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable_v"},"sortText":"40d762fbis_nothrow_swappable_v","filterText":"is_nothrow_swappable_v","insertText":"std::is_nothrow_swappable_v\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::is_nothrow_swappable_v\u003c${1:typename _Tp}\u003e"}},{"label":"•std::is_nothrow_swappable_with\u003ctypename _Tp, typename _Up\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_nothrow_swappable_with"},"sortText":"40d762fbis_nothrow_swappable_with","filterText":"is_nothrow_swappable_with","insertText":"std::is_nothrow_swappable_with\u003c${1:typename _Tp}, ${2:typename _Up}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"std::is_nothrow_swappable_with\u003c${1:typename _Tp}, ${2:typename _Up}\u003e"}},{"label":"•mstd::is_nothrow_constructible\u003ctypename T, typename Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`  \nExceptions are disabled in mbed, so short-circuit nothrow tests (Compilers don't make noexcept() return false with exceptions disabled, presumably to preserve binary compatibility, so the std versions of these are unduly pessimistic)."},"sortText":"40defb0ais_nothrow_constructible","filterText":"is_nothrow_constructible","insertText":"mstd::is_nothrow_constructible\u003c${1:typename T}, ${2:typename Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::is_nothrow_constructible\u003c${1:typename T}, ${2:typename Args}\u003e"}},{"label":"•mstd::is_nothrow_copy_assignable\u003ctypename T\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40defb0ais_nothrow_copy_assignable","filterText":"is_nothrow_copy_assignable","insertText":"mstd::is_nothrow_copy_assignable\u003c${1:typename T}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::is_nothrow_copy_assignable\u003c${1:typename T}\u003e"}},{"label":"•mstd::is_nothrow_copy_constructible\u003ctypename T\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40defb0ais_nothrow_copy_constructible","filterText":"is_nothrow_copy_constructible","insertText":"mstd::is_nothrow_copy_constructible\u003c${1:typename T}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::is_nothrow_copy_constructible\u003c${1:typename T}\u003e"}},{"label":"•mstd::is_nothrow_invocable\u003cclass F, class Args\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40defb0ais_nothrow_invocable","filterText":"is_nothrow_invocable","insertText":"mstd::is_nothrow_invocable\u003c${1:class F}, ${2:class Args}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::is_nothrow_invocable\u003c${1:class F}, ${2:class Args}\u003e"}},{"label":"•mstd::impl::is_nothrow_invocable_r\u003ctypename R, typename InvokeResult, typename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40defb0ais_nothrow_invocable_r","filterText":"is_nothrow_invocable_r","insertText":"mstd::impl::is_nothrow_invocable_r\u003c${1:typename R}, ${2:typename InvokeResult}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::impl::is_nothrow_invocable_r\u003c${1:typename R}, ${2:typename InvokeResult}\u003e"}},{"label":"•mstd::is_null_pointer","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40ed9e66is_null_pointer","filterText":"is_null_pointer","insertText":"mstd::is_null_pointer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mstd::is_null_pointer"}},{"label":" mbed::internal","kind":9,"sortText":"40f0ef23internal","filterText":"internal","insertText":"mbed::internal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"mbed::internal"}},{"label":" rtos::internal","kind":9,"sortText":"40fca724internal","filterText":"internal","insertText":"rtos::internal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"rtos::internal"}},{"label":" INT16_C(x)","kind":1,"sortText":"40fea05dINT16_C","filterText":"INT16_C","insertText":"INT16_C(${1:x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INT16_C(${1:x})"}},{"label":" INT16_MAX","kind":1,"sortText":"40fea05dINT16_MAX","filterText":"INT16_MAX","insertText":"INT16_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INT16_MAX"}},{"label":" INT16_MIN","kind":1,"sortText":"40fea05dINT16_MIN","filterText":"INT16_MIN","insertText":"INT16_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INT16_MIN"}},{"label":" INT32_C(x)","kind":1,"sortText":"40fea05dINT32_C","filterText":"INT32_C","insertText":"INT32_C(${1:x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INT32_C(${1:x})"}},{"label":" INT32_MAX","kind":1,"sortText":"40fea05dINT32_MAX","filterText":"INT32_MAX","insertText":"INT32_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"newText":"INT32_MAX"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 504

{"jsonrpc":"2.0","id":227,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":22},"end":{"line":8,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":22}},"message":"Use of undeclared identifier 'IN'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":227,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":329}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":330},"contentChanges":[{"range":{"start":{"line":8,"character":22},"end":{"line":8,"character":22}},"rangeLength":0,"text":"P"}]}}Content-Length: 283

{"jsonrpc":"2.0","id":228,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":8,"character":23},"context":{"triggerKind":3}}}Content-Length: 222

{"jsonrpc":"2.0","id":229,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 599

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INP'"}]},"jsonrpc":"2.0"}Content-Length: 14505

{"id":228,"result":{"isIncomplete":false,"items":[{"label":" INPUT","kind":20,"detail":"PinMode","sortText":"403f858bINPUT","filterText":"INPUT","insertText":"INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"INPUT"}},{"label":" INPUT_PULLDOWN","kind":20,"detail":"PinMode","sortText":"403f858bINPUT_PULLDOWN","filterText":"INPUT_PULLDOWN","insertText":"INPUT_PULLDOWN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"INPUT_PULLDOWN"}},{"label":" INPUT_PULLUP","kind":20,"detail":"PinMode","sortText":"403f858bINPUT_PULLUP","filterText":"INPUT_PULLUP","insertText":"INPUT_PULLUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"INPUT_PULLUP"}},{"label":"•TempINPUT","kind":20,"detail":"ArduinoPinMode","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"409f7120TempINPUT","filterText":"TempINPUT","insertText":"TempINPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"TempINPUT"}},{"label":"•TempINPUT_PULLDOWN","kind":20,"detail":"ArduinoPinMode","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"409f7120TempINPUT_PULLDOWN","filterText":"TempINPUT_PULLDOWN","insertText":"TempINPUT_PULLDOWN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"TempINPUT_PULLDOWN"}},{"label":"•TempINPUT_PULLUP","kind":20,"detail":"ArduinoPinMode","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"409f7120TempINPUT_PULLUP","filterText":"TempINPUT_PULLUP","insertText":"TempINPUT_PULLUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"TempINPUT_PULLUP"}},{"label":"•in_port_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"40bec6d9in_port_t","filterText":"in_port_t","insertText":"in_port_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"in_port_t"}},{"label":"•std::inplace_merge(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"40cd16eeinplace_merge","filterText":"inplace_merge","insertText":"std::inplace_merge($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"std::inplace_merge($0)"}},{"label":"•std::input_iterator_tag","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \n@defgroup iterator_tags Iterator Tags These are empty types, used to distinguish different iterators. The distinction is not made by what they contain, but simply by what they are. Different underlying algorithms can then be used based on the different operations supported by different iterator types.  \n@{ Marking input iterators."},"sortText":"40cd16eeinput_iterator_tag","filterText":"input_iterator_tag","insertText":"std::input_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"std::input_iterator_tag"}},{"label":" INPUT","kind":1,"sortText":"40d1050aINPUT","filterText":"INPUT","insertText":"INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"INPUT"}},{"label":" INPUT_PULLDOWN","kind":1,"sortText":"40d1050aINPUT_PULLDOWN","filterText":"INPUT_PULLDOWN","insertText":"INPUT_PULLDOWN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"INPUT_PULLDOWN"}},{"label":" INPUT_PULLUP","kind":1,"sortText":"40d1050aINPUT_PULLUP","filterText":"INPUT_PULLUP","insertText":"INPUT_PULLUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"INPUT_PULLUP"}},{"label":"•mstd::input_iterator_tag","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_iterator\"`  \nomitting deprecated std::iterator"},"sortText":"40dd5aaainput_iterator_tag","filterText":"input_iterator_tag","insertText":"mstd::input_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"mstd::input_iterator_tag"}},{"label":"•PIN_INPUT","kind":20,"detail":"PinDirection","documentation":{"kind":"markdown","value":"From `\"PeripheralNames.h\"`"},"sortText":"40e9b719PIN_INPUT","filterText":"PIN_INPUT","insertText":"PIN_INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"PIN_INPUT"}},{"label":"•std::is_null_pointer\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`  \nis_null_pointer (LWG 2247)."},"sortText":"40ea1f18is_null_pointer","filterText":"is_null_pointer","insertText":"std::is_null_pointer\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"std::is_null_pointer\u003c${1:typename _Tp}\u003e"}},{"label":"•mstd::is_null_pointer","kind":18,"documentation":{"kind":"markdown","value":"From `\"mstd_type_traits\"`"},"sortText":"40fde222is_null_pointer","filterText":"is_null_pointer","insertText":"mstd::is_null_pointer","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"mstd::is_null_pointer"}},{"label":"•attachInterruptParam(pin_size_t interruptNumber, voidFuncPtrParam callback, PinStatus mode, void *param)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"41276889attachInterruptParam","filterText":"attachInterruptParam","insertText":"attachInterruptParam(${1:pin_size_t interruptNumber}, ${2:voidFuncPtrParam callback}, ${3:PinStatus mode}, ${4:void *param})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"attachInterruptParam(${1:pin_size_t interruptNumber}, ${2:voidFuncPtrParam callback}, ${3:PinStatus mode}, ${4:void *param})"}},{"label":" attachInterruptParam(PinName interruptNumber, voidFuncPtrParam callback, PinStatus mode, void *param)","kind":3,"detail":"void","sortText":"41362afeattachInterruptParam","filterText":"attachInterruptParam","insertText":"attachInterruptParam(${1:PinName interruptNumber}, ${2:voidFuncPtrParam callback}, ${3:PinStatus mode}, ${4:void *param})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"attachInterruptParam(${1:PinName interruptNumber}, ${2:voidFuncPtrParam callback}, ${3:PinStatus mode}, ${4:void *param})"}},{"label":"•equeue_create_inplace(equeue_t *queue, size_t size, void *buffer)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"equeue.h\"`"},"sortText":"415ae0beequeue_create_inplace","filterText":"equeue_create_inplace","insertText":"equeue_create_inplace(${1:equeue_t *queue}, ${2:size_t size}, ${3:void *buffer})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"equeue_create_inplace(${1:equeue_t *queue}, ${2:size_t size}, ${3:void *buffer})"}},{"label":"•NSAPI_ERROR_IN_PROGRESS","kind":20,"detail":"nsapi_error","documentation":{"kind":"markdown","value":"From `\"nsapi_types.h\"`  \noperation (eg connect) in progress"},"sortText":"41604ec4NSAPI_ERROR_IN_PROGRESS","filterText":"NSAPI_ERROR_IN_PROGRESS","insertText":"NSAPI_ERROR_IN_PROGRESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"NSAPI_ERROR_IN_PROGRESS"}},{"label":"•adc_select_input(uint input)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"adc.h\"`  \n\\\\brief ADC input select  \n\\\\ingroup hardware_adc  \nSelect an ADC input. 0...3 are GPIOs 26...29 respectively.  \nInput 4 is the onboard temperature sensor.  \n\\\\param input Input to select."},"sortText":"41686490adc_select_input","filterText":"adc_select_input","insertText":"adc_select_input(${1:uint input})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"adc_select_input(${1:uint input})"}},{"label":"•gpio_set_input_enabled(uint gpio, bool enabled)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"gpio.h\"`  \n\\\\brief Enable GPIO input  \n\\\\ingroup hardware_gpio  \n\\\\param gpio GPIO number  \n\\\\param enabled true to enable input on specified GPIO"},"sortText":"41686490gpio_set_input_enabled","filterText":"gpio_set_input_enabled","insertText":"gpio_set_input_enabled(${1:uint gpio}, ${2:bool enabled})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"gpio_set_input_enabled(${1:uint gpio}, ${2:bool enabled})"}},{"label":"•irq_init_priorities()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"irq.h\"`  \n\\\\brief Perform IRQ priority intiialization for the current core  \n\\\\note This is an internal method and user should generally not call it."},"sortText":"41686490irq_init_priorities","filterText":"irq_init_priorities","insertText":"irq_init_priorities()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"irq_init_priorities()"}},{"label":"•core_util_atomic_incr_ptr(void *volatile *valuePtr, ptrdiff_t delta)","kind":3,"detail":"void *","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_incr_u8"},"sortText":"41cc2550core_util_atomic_incr_ptr","filterText":"core_util_atomic_incr_ptr","insertText":"core_util_atomic_incr_ptr(${1:void *volatile *valuePtr}, ${2:ptrdiff_t delta})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"core_util_atomic_incr_ptr(${1:void *volatile *valuePtr}, ${2:ptrdiff_t delta})"}},{"label":"•mbed_get_error_in_progress()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_error.h\"`  \nReturns whether we are processing a fatal mbed error.  \n@return bool Whether a fatal error has occurred."},"sortText":"41cc2550mbed_get_error_in_progress","filterText":"mbed_get_error_in_progress","insertText":"mbed_get_error_in_progress()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"mbed_get_error_in_progress()"}},{"label":"•std::__inplace_merge(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare __comp)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`"},"sortText":"42f0df24__inplace_merge","filterText":"__inplace_merge","insertText":"std::__inplace_merge(${1:_BidirectionalIterator __first}, ${2:_BidirectionalIterator __middle}, ${3:_BidirectionalIterator __last}, ${4:_Compare __comp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"std::__inplace_merge(${1:_BidirectionalIterator __first}, ${2:_BidirectionalIterator __middle}, ${3:_BidirectionalIterator __last}, ${4:_Compare __comp})"}},{"label":"•std::__inplace_stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \nThis is a helper function for the stable sorting routines."},"sortText":"42f0df24__inplace_stable_sort","filterText":"__inplace_stable_sort","insertText":"std::__inplace_stable_sort(${1:_RandomAccessIterator __first}, ${2:_RandomAccessIterator __last}, ${3:_Compare __comp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"std::__inplace_stable_sort(${1:_RandomAccessIterator __first}, ${2:_RandomAccessIterator __last}, ${3:_Compare __comp})"}},{"label":"•std::_RequireInputIter\u003ctypename _InIter\u003e","kind":8,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`"},"sortText":"431afea1_RequireInputIter","filterText":"_RequireInputIter","insertText":"std::_RequireInputIter\u003c${1:typename _InIter}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"std::_RequireInputIter\u003c${1:typename _InIter}\u003e"}},{"label":"•std::__is_null_pointer_helper\u003ctypename\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003ctype_traits\u003e`"},"sortText":"434c2550__is_null_pointer_helper","filterText":"__is_null_pointer_helper","insertText":"std::__is_null_pointer_helper\u003c${1:typename}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"std::__is_null_pointer_helper\u003c${1:typename}\u003e"}},{"label":"•std::_Sp_counted_ptr_inplace\u003ctypename _Tp, typename _Alloc, _Lock_policy _Lp\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`"},"sortText":"439afea1_Sp_counted_ptr_inplace","filterText":"_Sp_counted_ptr_inplace","insertText":"std::_Sp_counted_ptr_inplace\u003c${1:typename _Tp}, ${2:typename _Alloc}, ${3:_Lock_policy _Lp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"std::_Sp_counted_ptr_inplace\u003c${1:typename _Tp}, ${2:typename _Alloc}, ${3:_Lock_policy _Lp}\u003e"}},{"label":"•MBEDTLS_PADDING_PKCS7","kind":20,"detail":"mbedtls_cipher_padding_t","documentation":{"kind":"markdown","value":"From `\"cipher.h\"`  \nPKCS7 padding (default)."},"sortText":"80000000MBEDTLS_PADDING_PKCS7","filterText":"MBEDTLS_PADDING_PKCS7","insertText":"MBEDTLS_PADDING_PKCS7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"newText":"MBEDTLS_PADDING_PKCS7"}}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":229,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 505

{"jsonrpc":"2.0","id":230,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":23},"end":{"line":8,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"message":"Use of undeclared identifier 'INP'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":230,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":330}}}Content-Length: 357

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":331},"contentChanges":[{"range":{"start":{"line":8,"character":20},"end":{"line":8,"character":23}},"rangeLength":3,"text":"INPUT_PULLUP"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":231,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 416

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":231,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":232,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":32},"end":{"line":8,"character":32}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":232,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":331}}}Content-Length: 323

{"jsonrpc":"2.0","id":233,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":33},"end":{"line":8,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":233,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":332},"contentChanges":[{"range":{"start":{"line":8,"character":33},"end":{"line":8,"character":33}},"rangeLength":0,"text":";"}]}}Content-Length: 222

{"jsonrpc":"2.0","id":234,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 601

{"id":234,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":16,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":235,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":8,"character":34},"end":{"line":8,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":235,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":332}}}Content-Length: 251

{"jsonrpc":"2.0","id":236,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":11,"character":20}}}
>>>
Content-Length: 271

{"id":236,"result":{"contents":{"kind":"markdown","value":"### variable `statusBLUE`  \n\n---\nType: `bool`  \nValue = `false`  \n\n---\n```cpp\nbool statusBLUE = false\n```"},"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":28}}},"jsonrpc":"2.0"}
<<<
Content-Length: 251

{"jsonrpc":"2.0","id":237,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":37}}}
>>>
Content-Length: 369

{"id":237,"result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\n→ `void`  \nParameters:  \n- `pin_size_t pinNumber`\n- `int status`\n\n---\n```cpp\n// In namespace arduino\ninline void digitalWrite(pin_size_t pinNumber, int status)\n```"},"range":{"start":{"line":12,"character":37},"end":{"line":12,"character":38}}},"jsonrpc":"2.0"}
<<<
Content-Length: 251

{"jsonrpc":"2.0","id":238,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":12,"character":32}}}
>>>
Content-Length: 310

{"id":238,"result":{"contents":{"kind":"markdown","value":"### variable `statusBLUE`  \n\n---\nType: `bool`  \nValue = `false`  \nPassed as status (converted to int)  \n\n---\n```cpp\nbool statusBLUE = false\n```"},"range":{"start":{"line":12,"character":26},"end":{"line":12,"character":36}}},"jsonrpc":"2.0"}
<<<
Content-Length: 325

{"jsonrpc":"2.0","id":239,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":12,"character":38},"end":{"line":12,"character":38}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":239,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 353

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":333},"contentChanges":[{"range":{"start":{"line":12,"character":38},"end":{"line":12,"character":38}},"rangeLength":0,"text":"\n    "}]}}Content-Length: 222

{"jsonrpc":"2.0","id":240,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}






Started logging.

<<<
Content-Length: 3207

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10760,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\mirko\\AppData\\Local\\Temp\\.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh\\sketch_nov24a","rootUri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","name":"sketch_nov24a"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 550

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","languageId":"cpp","version":333,"text":"#define LEDBLUE 2\n#define BUTTON_1 12\n\nbool statusBLUE = false;\n\nvoid setup() {\n\n  pinMode(LEDBLUE, OUTPUT);\n  pinMode(BUTTON_1, INPUT_PULLUP);\n  \n  while(1) {\n    statusBLUE = !statusBLUE;\n    digitalWrite(LEDBLUE, statusBLUE);\n    \n    delay(200);\n  }\n\n}\n\nvoid loop() {\n  \n\n}\n"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":334},"contentChanges":[{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":4}},"rangeLength":0,"text":"i"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":1,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":5},"context":{"triggerKind":1}}}Content-Length: 321

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":5},"end":{"line":13,"character":5}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":335},"contentChanges":[{"range":{"start":{"line":13,"character":5},"end":{"line":13,"character":5}},"rangeLength":0,"text":"f"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 220

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 321

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":6},"end":{"line":13,"character":6}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":336},"contentChanges":[{"range":{"start":{"line":13,"character":6},"end":{"line":13,"character":6}},"rangeLength":0,"text":"()"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 220

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 327

{"jsonrpc":"2.0","id":7,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":7},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}Content-Length: 321

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":7}},"context":{"diagnostics":[]}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 776

{"id":1,"result":{"isIncomplete":false,"items":[{"label":" INPUT_PULLUP","kind":1,"sortText":"3fc00000INPUT_PULLUP","filterText":"INPUT_PULLUP","insertText":"INPUT_PULLUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":5}},"newText":"INPUT_PULLUP"}},{"label":" iif","kind":1,"sortText":"3fc00000iif","filterText":"iif","insertText":"iif","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":5}},"newText":"iif"}},{"label":" include","kind":1,"sortText":"3fc00000include","filterText":"include","insertText":"include","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":5}},"newText":"include"}}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 405

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalW'"}]},"jsonrpc":"2.0"}Content-Length: 605

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalW'"}]},"jsonrpc":"2.0"}Content-Length: 384

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'i'"}]},"jsonrpc":"2.0"}Content-Length: 599

{"id":3,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 391

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":9}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'if'"}]},"jsonrpc":"2.0"}Content-Length: 599

{"id":4,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}Content-Length: 599

{"id":6,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 385

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":8}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 91

{"id":7,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 36

{"id":8,"result":[],"jsonrpc":"2.0"}
<<<
":337},"contentChanges":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":7}},"rangeLength":0,"text":"d"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}Content-Length: 220

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 304

{"jsonrpc":"2.0","id":10,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":8},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":338},"contentChanges":[{"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":8}},"rangeLength":0,"text":"i"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}Content-Length: 221

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 304

{"jsonrpc":"2.0","id":12,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":9},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":339},"contentChanges":[{"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":9}},"rangeLength":0,"text":"g"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}Content-Length: 221

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":340},"contentChanges":[{"range":{"start":{"line":13,"character":10},"end":{"line":13,"character":10}},"rangeLength":0,"text":"i"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":13}}Content-Length: 221

{"jsonrpc":"2.0","id":14,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":341},"contentChanges":[{"range":{"start":{"line":13,"character":11},"end":{"line":13,"character":11}},"rangeLength":0,"text":"t"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}Content-Length: 221

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-uns
>>>
Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'd'"}]},"jsonrpc":"2.0"}Content-Length: 599

{"id":9,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":10,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 398

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'di'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":11,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":12,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 684

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'dig'; did you mean 'div'? (fix available)\n\nc:\\users\\mirko\\appdata\\local\\arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4\\bin\\..\\lib\\gcc\\arm-none-eabi\\7.2.1\\..\\..\\..\\..\\arm-none-eabi\\include\\c++\\7.2.1\\stdlib.h:60:12:\nnote: 'div' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":13,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 401

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digi'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":14,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}
<<<
aved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 305

{"jsonrpc":"2.0","id":16,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":12},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":342},"contentChanges":[{"range":{"start":{"line":13,"character":12},"end":{"line":13,"character":12}},"rangeLength":0,"text":"a"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}Content-Length: 221

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}Content-Length: 305

{"jsonrpc":"2.0","id":18,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":13},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":343},"contentChanges":[{"range":{"start":{"line":13,"character":13},"end":{"line":13,"character":13}},"rangeLength":0,"text":"l"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}Content-Length: 221

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}Content-Length: 305

{"jsonrpc":"2.0","id":20,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":14},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 324

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":14},"end":{"line":13,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":343}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":344},"contentChanges":[{"range":{"start":{"line":13,"character":14},"end":{"line":13,"character":14}},"rangeLength":0,"text":"W"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}Content-Length: 221

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 6
>>>
Content-Length: 402

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digit'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":15,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":16,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 403

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digita'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":17,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":18,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 404

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digital'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":19,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":20,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":21,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":22,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}
<<<
3

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}Content-Length: 305

{"jsonrpc":"2.0","id":23,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":15},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 324

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":344}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":345},"contentChanges":[{"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":15}},"rangeLength":0,"text":"r"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}Content-Length: 221

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":23}}Content-Length: 305

{"jsonrpc":"2.0","id":26,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":16},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":346},"contentChanges":[{"range":{"start":{"line":13,"character":16},"end":{"line":13,"character":16}},"rangeLength":0,"text":"i"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 221

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":347},"contentChanges":[{"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":17}},"rangeLength":0,"text":"t"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}Content-Length: 221

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":26}}Content-Length: 305

{"jsonrpc":"2.0","id":29,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":18},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params"
>>>
Content-Length: 405

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalW'"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":23,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":24,"result":[],"jsonrpc":"2.0"}Content-Length: 625

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalWr'; did you mean 'digitalWrite'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: 'digitalWrite' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":25,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":26,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 626

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":17}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalWri'; did you mean 'digitalWrite'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: 'digitalWrite' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":27,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 600

{"id":28,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 627

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":18}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalWrit'; did you mean 'digitalWrite'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: 'digitalWrite' declared here"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":29,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
:{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":348},"contentChanges":[{"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":28}}Content-Length: 221

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":29}}Content-Length: 305

{"jsonrpc":"2.0","id":31,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":19},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":349},"contentChanges":[{"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":19}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":30}}Content-Length: 221

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 305

{"jsonrpc":"2.0","id":33,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":18},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":350},"contentChanges":[{"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":32}}Content-Length: 221

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":33}}Content-Length: 305

{"jsonrpc":"2.0","id":35,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":17},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":351},"contentChanges":[{"range":{"start":{"line":13,"character":16},"end":{"line":13,"character":17}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 221

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":35}}Content-Length: 305

{"jsonrpc":"2.0","id":37,"method":
>>>
Content-Length: 1109

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":19}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:60:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:95:6:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Compat.h:10:13:\nnote: possible target for call"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":30,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":31,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 627

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":18}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalWrit'; did you mean 'digitalWrite'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: 'digitalWrite' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":32,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":33,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 626

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":17}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalWri'; did you mean 'digitalWrite'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: 'digitalWrite' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":34,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":35,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 625

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalWr'; did you mean 'digitalWrite'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:24:6:\nnote: 'digitalWrite' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":36,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}
<<<
"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":16},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":352},"contentChanges":[{"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":16}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}Content-Length: 221

{"jsonrpc":"2.0","id":38,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":37}}Content-Length: 305

{"jsonrpc":"2.0","id":39,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":15},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":353},"contentChanges":[{"range":{"start":{"line":13,"character":14},"end":{"line":13,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":38}}Content-Length: 221

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":39}}Content-Length: 305

{"jsonrpc":"2.0","id":41,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":14},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 324

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":14},"end":{"line":13,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":354},"contentChanges":[{"range":{"start":{"line":13,"character":14},"end":{"line":13,"character":14}},"rangeLength":0,"text":"R"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}Content-Length: 221

{"jsonrpc":"2.0","id":43,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":41}}Content-Length: 305

{"jsonrpc":"2.0","id":44,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":15},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDo
>>>
Content-Length: 92

{"id":37,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 405

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalW'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":38,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":39,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 404

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digital'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":40,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":41,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":42,"result":[],"jsonrpc":"2.0"}Content-Length: 405

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalR'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":43,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":44,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
cument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":355},"contentChanges":[{"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":15}},"rangeLength":0,"text":"E"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":43}}Content-Length: 221

{"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":44}}Content-Length: 305

{"jsonrpc":"2.0","id":46,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":16},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":356},"contentChanges":[{"range":{"start":{"line":13,"character":16},"end":{"line":13,"character":16}},"rangeLength":0,"text":"a"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":45}}Content-Length: 221

{"jsonrpc":"2.0","id":47,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":46}}Content-Length: 305

{"jsonrpc":"2.0","id":48,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":17},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":357},"contentChanges":[{"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":17}},"rangeLength":0,"text":"d"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":47}}Content-Length: 221

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":48}}Content-Length: 305

{"jsonrpc":"2.0","id":50,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":18},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 324

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":358},"contentChanges":[{"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":49}}Content-Len
>>>
Content-Length: 624

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalRE'; did you mean 'digitalRead'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:25:11:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":45,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":46,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 625

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":17}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalREa'; did you mean 'digitalRead'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:25:11:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":47,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":48,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 626

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":18}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalREad'; did you mean 'digitalRead'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:25:11:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":49,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":50,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":51,"result":[],"jsonrpc":"2.0"}
<<<
gth: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}Content-Length: 221

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":50}}Content-Length: 305

{"jsonrpc":"2.0","id":53,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":17},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":359},"contentChanges":[{"range":{"start":{"line":13,"character":16},"end":{"line":13,"character":17}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":52}}Content-Length: 221

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":53}}Content-Length: 305

{"jsonrpc":"2.0","id":55,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":16},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":360},"contentChanges":[{"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":16}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":54}}Content-Length: 221

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":361},"contentChanges":[{"range":{"start":{"line":13,"character":15},"end":{"line":13,"character":15}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":56}}Content-Length: 221

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":55}}Content-Length: 305

{"jsonrpc":"2.0","id":58,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":16},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":362},"contentChanges":[{"range":{"start":{"line":13,"character":16},"end":{"line":13,"character":16}},"rangeLength":0,"text":"a"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRe
>>>
Content-Length: 625

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":17}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalREa'; did you mean 'digitalRead'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:25:11:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":52,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":53,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 624

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalRE'; did you mean 'digitalRead'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:25:11:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":54,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":55,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 405

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalR'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":56,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 624

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":16}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalRe'; did you mean 'digitalRead'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:25:11:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":57,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":58,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
quest","params":{"id":57}}Content-Length: 221

{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":58}}Content-Length: 305

{"jsonrpc":"2.0","id":60,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":17},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":363},"contentChanges":[{"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":17}},"rangeLength":0,"text":"d"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":59}}Content-Length: 221

{"jsonrpc":"2.0","id":61,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":60}}Content-Length: 305

{"jsonrpc":"2.0","id":62,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":18},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 324

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":364},"contentChanges":[{"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"rangeLength":0,"text":"/"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":61}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":63}}Content-Length: 221

{"jsonrpc":"2.0","id":64,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 349

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":365},"contentChanges":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":19}},"rangeLength":0,"text":"()"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":64}}Content-Length: 221

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":62}}Content-Length: 328

{"jsonrpc":"2.0","id":66,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":20},"context":{"isRetrigger":true,"triggerCharacter":"(","triggerKind":2}}}Content-Length: 324

{"jsonrp
>>>
Content-Length: 625

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":17}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'digitalRea'; did you mean 'digitalRead'? (fix available)\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:25:11:\nnote: 'digitalRead' declared here"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":59,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":60,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 600

{"id":61,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 947

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":18}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:25:11:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:59:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:96:11:\nnote: possible target for call"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":62,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":63,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":64,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 387

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":20}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 387

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":21}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":65,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":66,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
c":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":366},"contentChanges":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":21}},"rangeLength":2,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":65}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":67}}Content-Length: 221

{"jsonrpc":"2.0","id":68,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":66}}Content-Length: 305

{"jsonrpc":"2.0","id":69,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":19},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":367},"contentChanges":[{"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":19}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":68}}Content-Length: 221

{"jsonrpc":"2.0","id":70,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":69}}Content-Length: 305

{"jsonrpc":"2.0","id":71,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":18},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 349

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":368},"contentChanges":[{"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"rangeLength":0,"text":"()"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":70}}Content-Length: 221

{"jsonrpc":"2.0","id":72,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":71}}Content-Length: 328

{"jsonrpc":"2.0","id":73,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":19},"context":{"isRetrigger":true,"triggerCharacter":"(","triggerKind":2}}}Content-Length: 324

{"jsonrpc":"2.0","id":74,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":19}},"context":{"diagn
>>>
Content-Length: 37

{"id":67,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":68,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 387

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":20}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":69,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 600

{"id":70,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 947

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":18}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:25:11:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:59:26:\nnote: possible target for call\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:96:11:\nnote: possible target for call"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":71,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 1146

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":7},"end":{"line":13,"character":18}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'digitalRead'\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\overloads.h:25:11:\nnote: candidate function not viable: requires single argument 'pinNumber', but no arguments were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\variants\\NANO_RP2040_CONNECT\\nina_pins.h:59:26:\nnote: candidate function not viable: requires single argument 'pin', but no arguments were provided\n\nC:\\Users\\mirko\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\mbed_nano\\2.5.2\\cores\\arduino\\api\\Common.h:96:11:\nnote: candidate function not viable: requires single argument 'pinNumber', but no arguments were provided"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":72,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 182

{"id":73,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
ostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":368}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":369},"contentChanges":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":19}},"rangeLength":0,"text":"B"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":72}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":74}}Content-Length: 221

{"jsonrpc":"2.0","id":75,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":73}}Content-Length: 305

{"jsonrpc":"2.0","id":76,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":20},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 324

{"jsonrpc":"2.0","id":77,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":370},"contentChanges":[{"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"rangeLength":0,"text":"U"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":75}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":77}}Content-Length: 221

{"jsonrpc":"2.0","id":78,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":76}}Content-Length: 305

{"jsonrpc":"2.0","id":79,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":21},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 324

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":21},"end":{"line":13,"character":21}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":371},"contentChanges":[{"range":{"start":{"line":13,"character":21},"end":{"line":13,"character":21}},"rangeLength":0,"text":"T"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":78}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":80}}Content-Length: 221

{"jsonrpc":"2.0","id":81,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/
>>>
Content-Length: 37

{"id":74,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":75,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 399

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'B'"}]},"jsonrpc":"2.0"}Content-Length: 182

{"id":76,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 37

{"id":77,"result":[],"jsonrpc":"2.0"}Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BU'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":78,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 182

{"id":79,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 37

{"id":80,"result":[],"jsonrpc":"2.0"}
<<<
sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":79}}Content-Length: 305

{"jsonrpc":"2.0","id":82,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":22},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":372},"contentChanges":[{"range":{"start":{"line":13,"character":22},"end":{"line":13,"character":22}},"rangeLength":0,"text":"T"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":81}}Content-Length: 221

{"jsonrpc":"2.0","id":83,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":373},"contentChanges":[{"range":{"start":{"line":13,"character":23},"end":{"line":13,"character":23}},"rangeLength":0,"text":"O"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":83}}Content-Length: 221

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":82}}Content-Length: 305

{"jsonrpc":"2.0","id":85,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":24},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 324

{"jsonrpc":"2.0","id":86,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":24},"end":{"line":13,"character":24}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":374},"contentChanges":[{"range":{"start":{"line":13,"character":24},"end":{"line":13,"character":24}},"rangeLength":0,"text":"N"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":84}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":86}}Content-Length: 221

{"jsonrpc":"2.0","id":87,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":85}}Content-Length: 305

{"jsonrpc":"2.0","id":88,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":25},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 324

{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":25},"end":{
>>>
Content-Length: 600

{"id":81,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 401

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BUT'"}]},"jsonrpc":"2.0"}Content-Length: 182

{"id":82,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 402

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BUTT'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":83,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 403

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BUTTO'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":84,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 182

{"id":85,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 37

{"id":86,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":87,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 404

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BUTTON'"}]},"jsonrpc":"2.0"}Content-Length: 182

{"id":88,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
"line":13,"character":25}},"context":{"diagnostics":[]}}}Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":374}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":375},"contentChanges":[{"range":{"start":{"line":13,"character":25},"end":{"line":13,"character":25}},"rangeLength":0,"text":":"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":87}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":89}}Content-Length: 306

{"jsonrpc":"2.0","id":90,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":26},"context":{"triggerKind":2,"triggerCharacter":":"}}}Content-Length: 221

{"jsonrpc":"2.0","id":91,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":88}}Content-Length: 305

{"jsonrpc":"2.0","id":92,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":26},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 324

{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":26},"end":{"line":13,"character":26}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":375}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":376},"contentChanges":[{"range":{"start":{"line":13,"character":25},"end":{"line":13,"character":26}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":91}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":93}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":90}}Content-Length: 283

{"jsonrpc":"2.0","id":94,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":25},"context":{"triggerKind":1}}}Content-Length: 221

{"jsonrpc":"2.0","id":95,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":92}}Content-Length: 305

{"jsonrpc":"2.0","id":96,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":25},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 324

{"jsonrp
>>>
Content-Length: 37

{"id":89,"result":[],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/31","percentage":93.54838709677419,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}Content-Length: 68

{"id":90,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 404

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BUTTON'"}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":91,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 182

{"id":92,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 37

{"id":93,"result":[],"jsonrpc":"2.0"}Content-Length: 309

{"id":94,"result":{"isIncomplete":false,"items":[{"label":" BUTTON_1","kind":1,"sortText":"40800000BUTTON_1","filterText":"BUTTON_1","insertText":"BUTTON_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":25}},"newText":"BUTTON_1"}}]},"jsonrpc":"2.0"}Content-Length: 600

{"id":95,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 404

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'BUTTON'"}]},"jsonrpc":"2.0"}Content-Length: 182

{"id":96,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
c":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":25},"end":{"line":13,"character":25}},"context":{"diagnostics":[]}}}Content-Length: 355

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":377},"contentChanges":[{"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":25}},"rangeLength":6,"text":"BUTTON_1"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":95}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":97}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":94}}Content-Length: 221

{"jsonrpc":"2.0","id":98,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":96}}Content-Length: 305

{"jsonrpc":"2.0","id":99,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":27},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 325

{"jsonrpc":"2.0","id":100,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":27},"end":{"line":13,"character":27}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":377}}}Content-Length: 251

{"jsonrpc":"2.0","id":101,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":27}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":101}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":99}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":98}}Content-Length: 222

{"jsonrpc":"2.0","id":102,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":103,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":28},"end":{"line":13,"character":28}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":100}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":378},"contentChanges":[{"range":{"start":{"line":13,"character":28},"end":{"line":13,"character":28}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":102}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":103}}Content-Length: 222

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/A
>>>
Content-Length: 37

{"id":97,"result":[],"jsonrpc":"2.0"}Content-Length: 600

{"id":98,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 182

{"id":99,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}Content-Length: 402

{"id":100,"result":[{"title":"Expand macro 'BUTTON_1'","kind":"refactor","command":{"title":"Expand macro 'BUTTON_1'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server899810663/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":20,"character":27},"end":{"line":20,"character":27}}}]}}],"jsonrpc":"2.0"}Content-Length: 220

{"id":101,"result":{"contents":{"kind":"markdown","value":"### macro `BUTTON_1`  \n\n---\n```cpp\n#define BUTTON_1 12\n```"},"range":{"start":{"line":13,"character":19},"end":{"line":13,"character":27}}},"jsonrpc":"2.0"}Content-Length: 601

{"id":102,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":103,"result":[],"jsonrpc":"2.0"}
<<<
ppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":379},"contentChanges":[{"range":{"start":{"line":13,"character":29},"end":{"line":13,"character":29}},"rangeLength":0,"text":"="}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":104}}Content-Length: 222

{"jsonrpc":"2.0","id":105,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":380},"contentChanges":[{"range":{"start":{"line":13,"character":30},"end":{"line":13,"character":30}},"rangeLength":0,"text":"="}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":105}}Content-Length: 222

{"jsonrpc":"2.0","id":106,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":107,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":31},"end":{"line":13,"character":31}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":380}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":381},"contentChanges":[{"range":{"start":{"line":13,"character":31},"end":{"line":13,"character":31}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":106}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":107}}Content-Length: 222

{"jsonrpc":"2.0","id":108,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":32}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":382},"contentChanges":[{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":32}},"rangeLength":0,"text":"L"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":108}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":109}}Content-Length: 222

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 284

{"jsonrpc":"2.0","id":111,"method":"textDocument/complet
>>>
Content-Length: 601

{"id":104,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 601

{"id":105,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 387

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":30},"end":{"line":13,"character":31}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":106,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 387

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":31},"end":{"line":13,"character":32}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":107,"result":[],"jsonrpc":"2.0"}Content-Length: 601

{"id":108,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 387

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":109,"result":[],"jsonrpc":"2.0"}Content-Length: 399

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'L'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":110,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}
<<<
ion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":33},"context":{"triggerKind":1}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":383},"contentChanges":[{"range":{"start":{"line":13,"character":33},"end":{"line":13,"character":33}},"rangeLength":0,"text":"O"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":110}}Content-Length: 222

{"jsonrpc":"2.0","id":112,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":384},"contentChanges":[{"range":{"start":{"line":13,"character":34},"end":{"line":13,"character":34}},"rangeLength":0,"text":"W"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":112}}Content-Length: 222

{"jsonrpc":"2.0","id":113,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":35},"end":{"line":13,"character":35}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":384}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":113}}Content-Length: 222

{"jsonrpc":"2.0","id":115,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":36},"end":{"line":13,"character":36}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":114}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":385},"contentChanges":[{"range":{"start":{"line":13,"character":36},"end":{"line":13,"character":36}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":115}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":116}}Content-Length: 222

{"jsonrpc":"2.0","id":117,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 349

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":386},"contentChanges":[{"range":{"start":{"line":13,"character":37},"end":{"line"
>>>
Content-Length: 29906

{"id":111,"result":{"isIncomplete":true,"items":[{"label":"•LOW","kind":20,"detail":"PinStatus","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3e3e6666LOW","filterText":"LOW","insertText":"LOW","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"LOW"}},{"label":" long","kind":14,"sortText":"3f000000long","filterText":"long","insertText":"long","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"long"}},{"label":" loop()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"3f13a2a3loop","filterText":"loop","insertText":"loop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"loop()"}},{"label":"•LookaheadMode","kind":13,"documentation":{"kind":"markdown","value":"From `\"api/Stream.h\"`  \nThis enumeration provides the lookahead options for parseInt(), parseFloat() The rules set out here are used until either the first valid character is found or a time out occurs due to lack of input."},"sortText":"3ff8a156LookaheadMode","filterText":"LookaheadMode","insertText":"LookaheadMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"LookaheadMode"}},{"label":" LEDBLUE","kind":1,"sortText":"40400000LEDBLUE","filterText":"LEDBLUE","insertText":"LEDBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"LEDBLUE"}},{"label":"•LED2","kind":20,"detail":"PinName","documentation":{"kind":"markdown","value":"From `\"PinNames.h\"`"},"sortText":"405d8e68LED2","filterText":"LED2","insertText":"LED2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"LED2"}},{"label":"•LEDB","kind":6,"detail":"NinaPin","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"405d8e68LEDB","filterText":"LEDB","insertText":"LEDB","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"LEDB"}},{"label":"•LEDG","kind":6,"detail":"NinaPin","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"405d8e68LEDG","filterText":"LEDG","insertText":"LEDG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"LEDG"}},{"label":"•LEDR","kind":6,"detail":"NinaPin","documentation":{"kind":"markdown","value":"From `\"nina_pins.h\"`"},"sortText":"405d8e68LEDR","filterText":"LEDR","insertText":"LEDR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"LEDR"}},{"label":"•LSBFIRST","kind":20,"detail":"BitOrder","documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68LSBFIRST","filterText":"LSBFIRST","insertText":"LSBFIRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"LSBFIRST"}},{"label":" labs","kind":18,"sortText":"406c52ealabs","filterText":"labs","insertText":"labs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"labs"}},{"label":" ldexp","kind":18,"sortText":"406c52ealdexp","filterText":"ldexp","insertText":"ldexp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"ldexp"}},{"label":" ldiv_t","kind":18,"sortText":"406c52ealdiv_t","filterText":"ldiv_t","insertText":"ldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"ldiv_t"}},{"label":" lgamma","kind":18,"sortText":"406c52ealgamma","filterText":"lgamma","insertText":"lgamma","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lgamma"}},{"label":" llrint","kind":18,"sortText":"406c52eallrint","filterText":"llrint","insertText":"llrint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"llrint"}},{"label":" llround","kind":18,"sortText":"406c52eallround","filterText":"llround","insertText":"llround","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"llround"}},{"label":" log","kind":18,"sortText":"406c52ealog","filterText":"log","insertText":"log","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"log"}},{"label":" log10","kind":18,"sortText":"406c52ealog10","filterText":"log10","insertText":"log10","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"log10"}},{"label":" log1p","kind":18,"sortText":"406c52ealog1p","filterText":"log1p","insertText":"log1p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"log1p"}},{"label":" log2","kind":18,"sortText":"406c52ealog2","filterText":"log2","insertText":"log2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"log2"}},{"label":" logb","kind":18,"sortText":"406c52ealogb","filterText":"logb","insertText":"logb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"logb"}},{"label":" lrint","kind":18,"sortText":"406c52ealrint","filterText":"lrint","insertText":"lrint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lrint"}},{"label":" lround","kind":18,"sortText":"406c52ealround","filterText":"lround","insertText":"lround","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lround"}},{"label":" l64a(long __input)","kind":3,"detail":"char *","sortText":"40791bfcl64a","filterText":"l64a","insertText":"l64a(${1:long __input})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"l64a(${1:long __input})"}},{"label":" labs(long)","kind":3,"detail":"long","sortText":"40791bfclabs","filterText":"labs","insertText":"labs(${1:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"labs(${1:long})"}},{"label":" lcong48(unsigned short *)","kind":3,"detail":"void","sortText":"40791bfclcong48","filterText":"lcong48","insertText":"lcong48(${1:unsigned short *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lcong48(${1:unsigned short *})"}},{"label":" lconv","kind":22,"sortText":"40791bfclconv","filterText":"lconv","insertText":"lconv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lconv"}},{"label":" ldexpf(float, int)","kind":3,"detail":"float","sortText":"40791bfcldexpf","filterText":"ldexpf","insertText":"ldexpf(${1:float}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"ldexpf(${1:float}, ${2:int})"}},{"label":" ldexpl(long double, int)","kind":3,"detail":"long double","sortText":"40791bfcldexpl","filterText":"ldexpl","insertText":"ldexpl(${1:long double}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"ldexpl(${1:long double}, ${2:int})"}},{"label":" ldiv(long __numer, long __denom)","kind":3,"detail":"ldiv_t","sortText":"40791bfcldiv","filterText":"ldiv","insertText":"ldiv(${1:long __numer}, ${2:long __denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"ldiv(${1:long __numer}, ${2:long __denom})"}},{"label":" ldiv_t","kind":8,"sortText":"40791bfcldiv_t","filterText":"ldiv_t","insertText":"ldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"ldiv_t"}},{"label":" lgamma(double)","kind":3,"detail":"double","sortText":"40791bfclgamma","filterText":"lgamma","insertText":"lgamma(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lgamma(${1:double})"}},{"label":" lgamma_r(double, int *)","kind":3,"detail":"double","sortText":"40791bfclgamma_r","filterText":"lgamma_r","insertText":"lgamma_r(${1:double}, ${2:int *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lgamma_r(${1:double}, ${2:int *})"}},{"label":" lgammaf(float)","kind":3,"detail":"float","sortText":"40791bfclgammaf","filterText":"lgammaf","insertText":"lgammaf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lgammaf(${1:float})"}},{"label":" lgammal(long double)","kind":3,"detail":"long double","sortText":"40791bfclgammal","filterText":"lgammal","insertText":"lgammal(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lgammal(${1:long double})"}},{"label":" llabs(long long)","kind":3,"detail":"long long","sortText":"40791bfcllabs","filterText":"llabs","insertText":"llabs(${1:long long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"llabs(${1:long long})"}},{"label":" lldiv(long long __numer, long long __denom)","kind":3,"detail":"lldiv_t","sortText":"40791bfclldiv","filterText":"lldiv","insertText":"lldiv(${1:long long __numer}, ${2:long long __denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lldiv(${1:long long __numer}, ${2:long long __denom})"}},{"label":" lldiv_t","kind":8,"sortText":"40791bfclldiv_t","filterText":"lldiv_t","insertText":"lldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lldiv_t"}},{"label":" llrint(double)","kind":3,"detail":"long long","sortText":"40791bfcllrint","filterText":"llrint","insertText":"llrint(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"llrint(${1:double})"}},{"label":" llrintl(long double)","kind":3,"detail":"long long","sortText":"40791bfcllrintl","filterText":"llrintl","insertText":"llrintl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"llrintl(${1:long double})"}},{"label":" llroundf(float)","kind":3,"detail":"long long","sortText":"40791bfcllroundf","filterText":"llroundf","insertText":"llroundf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"llroundf(${1:float})"}},{"label":" llroundl(long double)","kind":3,"detail":"long long","sortText":"40791bfcllroundl","filterText":"llroundl","insertText":"llroundl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"llroundl(${1:long double})"}},{"label":" localeconv()","kind":3,"detail":"struct lconv *","sortText":"40791bfclocaleconv","filterText":"localeconv","insertText":"localeconv()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"localeconv()"}},{"label":" localtime(const time_t *_timer)","kind":3,"detail":"struct tm *","sortText":"40791bfclocaltime","filterText":"localtime","insertText":"localtime(${1:const time_t *_timer})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"localtime(${1:const time_t *_timer})"}},{"label":" localtime_r(const time_t *, struct tm *)","kind":3,"detail":"struct tm *","sortText":"40791bfclocaltime_r","filterText":"localtime_r","insertText":"localtime_r(${1:const time_t *}, ${2:struct tm *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"localtime_r(${1:const time_t *}, ${2:struct tm *})"}},{"label":" log10f(float)","kind":3,"detail":"float","sortText":"40791bfclog10f","filterText":"log10f","insertText":"log10f(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"log10f(${1:float})"}},{"label":" log10l(long double)","kind":3,"detail":"long double","sortText":"40791bfclog10l","filterText":"log10l","insertText":"log10l(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"log10l(${1:long double})"}},{"label":" log1pl(long double)","kind":3,"detail":"long double","sortText":"40791bfclog1pl","filterText":"log1pl","insertText":"log1pl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"log1pl(${1:long double})"}},{"label":" log2(double)","kind":3,"detail":"double","sortText":"40791bfclog2","filterText":"log2","insertText":"log2(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"log2(${1:double})"}},{"label":" log2f(float)","kind":3,"detail":"float","sortText":"40791bfclog2f","filterText":"log2f","insertText":"log2f(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"log2f(${1:float})"}},{"label":" log2l(long double)","kind":3,"detail":"long double","sortText":"40791bfclog2l","filterText":"log2l","insertText":"log2l(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"log2l(${1:long double})"}},{"label":" logb(double)","kind":3,"detail":"double","sortText":"40791bfclogb","filterText":"logb","insertText":"logb(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"logb(${1:double})"}},{"label":" logbl(long double)","kind":3,"detail":"long double","sortText":"40791bfclogbl","filterText":"logbl","insertText":"logbl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"logbl(${1:long double})"}},{"label":" logf(float)","kind":3,"detail":"float","sortText":"40791bfclogf","filterText":"logf","insertText":"logf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"logf(${1:float})"}},{"label":" logl(long double)","kind":3,"detail":"long double","sortText":"40791bfclogl","filterText":"logl","insertText":"logl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"logl(${1:long double})"}},{"label":" lrand48()","kind":3,"detail":"long","sortText":"40791bfclrand48","filterText":"lrand48","insertText":"lrand48()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lrand48()"}},{"label":" lrintf(float)","kind":3,"detail":"long","sortText":"40791bfclrintf","filterText":"lrintf","insertText":"lrintf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"lrintf(${1:float})"}},{"label":"•std::ldexp(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aaldexp","filterText":"ldexp","insertText":"std::ldexp($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::ldexp($0)"}},{"label":"•std::lgamma(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalgamma","filterText":"lgamma","insertText":"std::lgamma($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lgamma($0)"}},{"label":"•std::llrint(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aallrint","filterText":"llrint","insertText":"std::llrint($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::llrint($0)"}},{"label":"•std::llround(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aallround","filterText":"llround","insertText":"std::llround($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::llround($0)"}},{"label":"•std::log(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalog","filterText":"log","insertText":"std::log($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::log($0)"}},{"label":"•std::log10(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalog10","filterText":"log10","insertText":"std::log10($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::log10($0)"}},{"label":"•std::log1p(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalog1p","filterText":"log1p","insertText":"std::log1p($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::log1p($0)"}},{"label":"•std::log2(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`  \nDR 568."},"sortText":"4092d0aalog2","filterText":"log2","insertText":"std::log2($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::log2($0)"}},{"label":"•std::logb(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalogb","filterText":"logb","insertText":"std::logb($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::logb($0)"}},{"label":"•std::lrint(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalrint","filterText":"lrint","insertText":"std::lrint($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lrint($0)"}},{"label":"•std::lround(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"4092d0aalround","filterText":"lround","insertText":"std::lround($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lround($0)"}},{"label":"•std::length_error","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstdexcept\u003e`  \nThrown when an object is constructed that would exceed its maximum permitted size (e.g., a basic_string instance)."},"sortText":"409f2ea4length_error","filterText":"length_error","insertText":"std::length_error","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::length_error"}},{"label":"•std::logic_error","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstdexcept\u003e`  \nLogic errors represent problems in the internal logic of a program;  \nin theory, these are preventable, and even detectable before the program runs (e.g., violations of class invariants).  \n@brief One of two subclasses of exception."},"sortText":"409f2ea4logic_error","filterText":"logic_error","insertText":"std::logic_error","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::logic_error"}},{"label":"•std::labs","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609blabs","filterText":"labs","insertText":"std::labs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::labs"}},{"label":"•std::ldexp","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bldexp","filterText":"ldexp","insertText":"std::ldexp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::ldexp"}},{"label":"•std::ldiv","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bldiv","filterText":"ldiv","insertText":"std::ldiv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::ldiv"}},{"label":"•std::ldiv_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bldiv_t","filterText":"ldiv_t","insertText":"std::ldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::ldiv_t"}},{"label":"•std::lgamma","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blgamma","filterText":"lgamma","insertText":"std::lgamma","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lgamma"}},{"label":"•std::lgammaf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blgammaf","filterText":"lgammaf","insertText":"std::lgammaf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lgammaf"}},{"label":"•std::lgammal","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blgammal","filterText":"lgammal","insertText":"std::lgammal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lgammal"}},{"label":"•std::llabs","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bllabs","filterText":"llabs","insertText":"std::llabs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::llabs"}},{"label":"•std::lldiv","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609blldiv","filterText":"lldiv","insertText":"std::lldiv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lldiv"}},{"label":"•std::lldiv_t","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609blldiv_t","filterText":"lldiv_t","insertText":"std::lldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lldiv_t"}},{"label":"•std::llrintf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bllrintf","filterText":"llrintf","insertText":"std::llrintf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::llrintf"}},{"label":"•std::llrintl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bllrintl","filterText":"llrintl","insertText":"std::llrintl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::llrintl"}},{"label":"•std::llround","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bllround","filterText":"llround","insertText":"std::llround","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::llround"}},{"label":"•std::llroundf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bllroundf","filterText":"llroundf","insertText":"std::llroundf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::llroundf"}},{"label":"•std::llroundl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609bllroundl","filterText":"llroundl","insertText":"std::llroundl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::llroundl"}},{"label":"•std::log10","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog10","filterText":"log10","insertText":"std::log10","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::log10"}},{"label":"•std::log1p","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog1p","filterText":"log1p","insertText":"std::log1p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::log1p"}},{"label":"•std::log1pf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog1pf","filterText":"log1pf","insertText":"std::log1pf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::log1pf"}},{"label":"•std::log1pl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog1pl","filterText":"log1pl","insertText":"std::log1pl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::log1pl"}},{"label":"•std::log2","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog2","filterText":"log2","insertText":"std::log2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::log2"}},{"label":"•std::log2f","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blog2f","filterText":"log2f","insertText":"std::log2f","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::log2f"}},{"label":"•std::logb","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blogb","filterText":"logb","insertText":"std::logb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::logb"}},{"label":"•std::logbl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blogbl","filterText":"logbl","insertText":"std::logbl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::logbl"}},{"label":"•std::lrint","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blrint","filterText":"lrint","insertText":"std::lrint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lrint"}},{"label":"•std::lrintf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blrintf","filterText":"lrintf","insertText":"std::lrintf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lrintf"}},{"label":"•std::lrintl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blrintl","filterText":"lrintl","insertText":"std::lrintl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lrintl"}},{"label":"•std::lround","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40a8609blround","filterText":"lround","insertText":"std::lround","insertTextFormat":2,"textEdit":{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":33}},"newText":"std::lround"}}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":112,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 400

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":34}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LO'"}]},"jsonrpc":"2.0"}Content-Length: 601

{"id":113,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 38

{"id":114,"result":[],"jsonrpc":"2.0"}Content-Length: 601

{"id":115,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":116,"result":[],"jsonrpc":"2.0"}Content-Length: 601

{"id":117,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}
<<<
:13,"character":37}},"rangeLength":0,"text":"{}"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":117}}Content-Length: 222

{"jsonrpc":"2.0","id":118,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":38},"end":{"line":13,"character":38}},"context":{"diagnostics":[]}}}Content-Length: 361

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":387},"contentChanges":[{"range":{"start":{"line":13,"character":38},"end":{"line":13,"character":38}},"rangeLength":0,"text":"\n      \n    "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":118}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":119}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":111}}Content-Length: 222

{"jsonrpc":"2.0","id":120,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":387}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":388},"contentChanges":[{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":6}},"rangeLength":0,"text":"c"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":120}}Content-Length: 222

{"jsonrpc":"2.0","id":121,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 283

{"jsonrpc":"2.0","id":122,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":14,"character":7},"context":{"triggerKind":1}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":389},"contentChanges":[{"range":{"start":{"line":14,"character":7},"end":{"line":14,"character":7}},"rangeLength":0,"text":"o"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":121}}Content-Length: 222

{"jsonrpc":"2.0","id":123,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":8}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t
>>>
Content-Length: 601

{"id":118,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":119,"result":[],"jsonrpc":"2.0"}Content-Length: 789

{"id":120,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":11}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 397

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'c'"}]},"jsonrpc":"2.0"}Content-Length: 789

{"id":121,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":11}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 59552

{"id":122,"result":{"isIncomplete":true,"items":[{"label":" char","kind":14,"sortText":"3f000000char","filterText":"char","insertText":"char","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"char"}},{"label":" char16_t","kind":14,"sortText":"3f000000char16_t","filterText":"char16_t","insertText":"char16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"char16_t"}},{"label":" char32_t","kind":14,"sortText":"3f000000char32_t","filterText":"char32_t","insertText":"char32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"char32_t"}},{"label":" class","kind":14,"sortText":"3f000000class","filterText":"class","insertText":"class","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"class"}},{"label":" const","kind":14,"sortText":"3f000000const","filterText":"const","insertText":"const","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"const"}},{"label":" const_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000const_cast","filterText":"const_cast","insertText":"const_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"const_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" constexpr","kind":14,"sortText":"3f000000constexpr","filterText":"constexpr","insertText":"constexpr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"constexpr"}},{"label":" continue;","kind":15,"sortText":"3f000000continue","filterText":"continue","insertText":"continue;","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"continue;"}},{"label":" cbrt","kind":18,"sortText":"406c52eacbrt","filterText":"cbrt","insertText":"cbrt","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"cbrt"}},{"label":" ceil","kind":18,"sortText":"406c52eaceil","filterText":"ceil","insertText":"ceil","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"ceil"}},{"label":" copysign","kind":18,"sortText":"406c52eacopysign","filterText":"copysign","insertText":"copysign","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"copysign"}},{"label":" cos","kind":18,"sortText":"406c52eacos","filterText":"cos","insertText":"cos","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"cos"}},{"label":" cosh","kind":18,"sortText":"406c52eacosh","filterText":"cosh","insertText":"cosh","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"cosh"}},{"label":"•CLOCKS_IRQn","kind":20,"detail":"IRQn","documentation":{"kind":"markdown","value":"From `\"cmsis.h\"`"},"sortText":"4071b066CLOCKS_IRQn","filterText":"CLOCKS_IRQn","insertText":"CLOCKS_IRQn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"CLOCKS_IRQn"}},{"label":" clearerr(FILE *)","kind":3,"detail":"void","sortText":"4071b066clearerr","filterText":"clearerr","insertText":"clearerr(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"clearerr(${1:FILE *})"}},{"label":" clearerr_unlocked(FILE *)","kind":3,"detail":"void","sortText":"4071b066clearerr_unlocked","filterText":"clearerr_unlocked","insertText":"clearerr_unlocked(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"clearerr_unlocked(${1:FILE *})"}},{"label":" ctermid(char *)","kind":3,"detail":"char *","sortText":"4071b066ctermid","filterText":"ctermid","insertText":"ctermid(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"ctermid(${1:char *})"}},{"label":" calloc(size_t __nmemb, size_t __size)","kind":3,"detail":"void *","sortText":"40791bfccalloc","filterText":"calloc","insertText":"calloc(${1:size_t __nmemb}, ${2:size_t __size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"calloc(${1:size_t __nmemb}, ${2:size_t __size})"}},{"label":" ceilf(float)","kind":3,"detail":"float","sortText":"40791bfcceilf","filterText":"ceilf","insertText":"ceilf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"ceilf(${1:float})"}},{"label":" cfree(void *)","kind":3,"detail":"void","sortText":"40791bfccfree","filterText":"cfree","insertText":"cfree(${1:void *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"cfree(${1:void *})"}},{"label":" clock()","kind":3,"detail":"clock_t","sortText":"40791bfcclock","filterText":"clock","insertText":"clock()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"clock()"}},{"label":"•close(int fildes)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcclose","filterText":"close","insertText":"close(${1:int fildes})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"close(${1:int fildes})"}},{"label":"•closedir(DIR *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcclosedir","filterText":"closedir","insertText":"closedir(${1:DIR *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"closedir(${1:DIR *})"}},{"label":" copysignf(float, float)","kind":3,"detail":"float","sortText":"40791bfccopysignf","filterText":"copysignf","insertText":"copysignf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"copysignf(${1:float}, ${2:float})"}},{"label":"•core_util_atomic_cas_explicit_ptr(void *volatile *ptr, void **expectedCurrentValue, void *desiredValue, mbed_memory_order success, mbed_memory_order failure)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_cas_explicit_u8"},"sortText":"40791bfccore_util_atomic_cas_explicit_ptr","filterText":"core_util_atomic_cas_explicit_ptr","insertText":"core_util_atomic_cas_explicit_ptr(${1:void *volatile *ptr}, ${2:void **expectedCurrentValue}, ${3:void *desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_cas_explicit_ptr(${1:void *volatile *ptr}, ${2:void **expectedCurrentValue}, ${3:void *desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})"}},{"label":"•core_util_atomic_cas_explicit_s64(volatile int64_t *ptr, int64_t *expectedCurrentValue, int64_t desiredValue, mbed_memory_order success, mbed_memory_order failure)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_cas_explicit_u8"},"sortText":"40791bfccore_util_atomic_cas_explicit_s64","filterText":"core_util_atomic_cas_explicit_s64","insertText":"core_util_atomic_cas_explicit_s64(${1:volatile int64_t *ptr}, ${2:int64_t *expectedCurrentValue}, ${3:int64_t desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_cas_explicit_s64(${1:volatile int64_t *ptr}, ${2:int64_t *expectedCurrentValue}, ${3:int64_t desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})"}},{"label":"•core_util_atomic_cas_explicit_u32(volatile uint32_t *ptr, uint32_t *expectedCurrentValue, uint32_t desiredValue, mbed_memory_order success, mbed_memory_order failure)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_cas_explicit_u8"},"sortText":"40791bfccore_util_atomic_cas_explicit_u32","filterText":"core_util_atomic_cas_explicit_u32","insertText":"core_util_atomic_cas_explicit_u32(${1:volatile uint32_t *ptr}, ${2:uint32_t *expectedCurrentValue}, ${3:uint32_t desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_cas_explicit_u32(${1:volatile uint32_t *ptr}, ${2:uint32_t *expectedCurrentValue}, ${3:uint32_t desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})"}},{"label":"•core_util_atomic_cas_explicit_u8(volatile uint8_t *ptr, uint8_t *expectedCurrentValue, uint8_t desiredValue, mbed_memory_order success, mbed_memory_order failure)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_cas_u8  \n@param success memory ordering constraint for successful exchange  \n@param failure memory ordering constraint for failure"},"sortText":"40791bfccore_util_atomic_cas_explicit_u8","filterText":"core_util_atomic_cas_explicit_u8","insertText":"core_util_atomic_cas_explicit_u8(${1:volatile uint8_t *ptr}, ${2:uint8_t *expectedCurrentValue}, ${3:uint8_t desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_cas_explicit_u8(${1:volatile uint8_t *ptr}, ${2:uint8_t *expectedCurrentValue}, ${3:uint8_t desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})"}},{"label":"•core_util_atomic_cas_s16(volatile int16_t *ptr, int16_t *expectedCurrentValue, int16_t desiredValue)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_cas_u8"},"sortText":"40791bfccore_util_atomic_cas_s16","filterText":"core_util_atomic_cas_s16","insertText":"core_util_atomic_cas_s16(${1:volatile int16_t *ptr}, ${2:int16_t *expectedCurrentValue}, ${3:int16_t desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_cas_s16(${1:volatile int16_t *ptr}, ${2:int16_t *expectedCurrentValue}, ${3:int16_t desiredValue})"}},{"label":"•core_util_atomic_cas_s64(volatile int64_t *ptr, int64_t *expectedCurrentValue, int64_t desiredValue)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_cas_u8"},"sortText":"40791bfccore_util_atomic_cas_s64","filterText":"core_util_atomic_cas_s64","insertText":"core_util_atomic_cas_s64(${1:volatile int64_t *ptr}, ${2:int64_t *expectedCurrentValue}, ${3:int64_t desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_cas_s64(${1:volatile int64_t *ptr}, ${2:int64_t *expectedCurrentValue}, ${3:int64_t desiredValue})"}},{"label":"•core_util_atomic_cas_u16(volatile uint16_t *ptr, uint16_t *expectedCurrentValue, uint16_t desiredValue)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_cas_u8"},"sortText":"40791bfccore_util_atomic_cas_u16","filterText":"core_util_atomic_cas_u16","insertText":"core_util_atomic_cas_u16(${1:volatile uint16_t *ptr}, ${2:uint16_t *expectedCurrentValue}, ${3:uint16_t desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_cas_u16(${1:volatile uint16_t *ptr}, ${2:uint16_t *expectedCurrentValue}, ${3:uint16_t desiredValue})"}},{"label":"•core_util_atomic_compare_exchange_weak_explicit_bool(volatile bool *ptr, bool *expectedCurrentValue, bool desiredValue, mbed_memory_order success, mbed_memory_order failure)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_compare_exchange_weak_explicit_u8"},"sortText":"40791bfccore_util_atomic_compare_exchange_weak_explicit_bool","filterText":"core_util_atomic_compare_exchange_weak_explicit_bool","insertText":"core_util_atomic_compare_exchange_weak_explicit_bool(${1:volatile bool *ptr}, ${2:bool *expectedCurrentValue}, ${3:bool desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_compare_exchange_weak_explicit_bool(${1:volatile bool *ptr}, ${2:bool *expectedCurrentValue}, ${3:bool desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})"}},{"label":"•core_util_atomic_compare_exchange_weak_ptr(void *volatile *ptr, void **expectedCurrentValue, void *desiredValue)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_compare_exchange_weak_u8"},"sortText":"40791bfccore_util_atomic_compare_exchange_weak_ptr","filterText":"core_util_atomic_compare_exchange_weak_ptr","insertText":"core_util_atomic_compare_exchange_weak_ptr(${1:void *volatile *ptr}, ${2:void **expectedCurrentValue}, ${3:void *desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_compare_exchange_weak_ptr(${1:void *volatile *ptr}, ${2:void **expectedCurrentValue}, ${3:void *desiredValue})"}},{"label":"•core_util_atomic_compare_exchange_weak_s8(volatile int8_t *ptr, int8_t *expectedCurrentValue, int8_t desiredValue)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_compare_exchange_weak_u8"},"sortText":"40791bfccore_util_atomic_compare_exchange_weak_s8","filterText":"core_util_atomic_compare_exchange_weak_s8","insertText":"core_util_atomic_compare_exchange_weak_s8(${1:volatile int8_t *ptr}, ${2:int8_t *expectedCurrentValue}, ${3:int8_t desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_compare_exchange_weak_s8(${1:volatile int8_t *ptr}, ${2:int8_t *expectedCurrentValue}, ${3:int8_t desiredValue})"}},{"label":"•core_util_atomic_compare_exchange_weak_u32(volatile uint32_t *ptr, uint32_t *expectedCurrentValue, uint32_t desiredValue)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_compare_exchange_weak_u8"},"sortText":"40791bfccore_util_atomic_compare_exchange_weak_u32","filterText":"core_util_atomic_compare_exchange_weak_u32","insertText":"core_util_atomic_compare_exchange_weak_u32(${1:volatile uint32_t *ptr}, ${2:uint32_t *expectedCurrentValue}, ${3:uint32_t desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_compare_exchange_weak_u32(${1:volatile uint32_t *ptr}, ${2:uint32_t *expectedCurrentValue}, ${3:uint32_t desiredValue})"}},{"label":"•core_util_atomic_compare_exchange_weak_u8(volatile uint8_t *ptr, uint8_t *expectedCurrentValue, uint8_t desiredValue)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \nAtomic compare and set. It compares the contents of a memory location to a given value and, only if they are the same, modifies the contents of that memory location to a given new value. This is done as a single atomic operation. The atomicity guarantees that the new value is calculated based on up-to-date information; if the value had been updated by another thread in the meantime, the write would fail due to a mismatched expectedCurrentValue.  \nRefer to https://en.wikipedia.org/wiki/Compare-and-set [which may redirect you to the article on compare-and swap].  \n@param ptr The target memory location.  \n@param[in,out] expectedCurrentValue A pointer to some location holding the expected current value of the data being set atomically.  \nThe computed 'desiredValue' should be a function of this current value.  \n@note: This is an in-out parameter. In the failure case of atomic_cas (where the destination isn't set), the pointee of expectedCurrentValue is updated with the current value.  \n@param[in] desiredValue The new value computed based on '\\*expectedCurrentValue'.  \n@return true if the memory location was atomically updated with the desired value (after verifying that it contained the expectedCurrentValue),  \nfalse otherwise. In the failure case,  \nexepctedCurrentValue is updated with the new value of the target memory location.  \npseudocode:  \nfunction cas(p : pointer to int, old : pointer to int, new : int) returns bool { if \\*p != \\*old or spurious failure {  \n\\*old = \\*p return false }  \n\\*p = new return true }  \n@note: In the failure case (where the destination isn't set), the value pointed to by expectedCurrentValue is instead updated with the current value.  \nThis property helps writing concise code for the following incr:  \nfunction incr(p : pointer to int, a : int) returns int { done = false value = \\*p // This fetch operation need not be atomic.  \nwhile not done { done = atomic_compare_exchange_weak(p, \u0026value, value + a) // \\*value gets updated automatically until success } return value + a }  \n@note: This corresponds to the C11 \"atomic_compare_exchange_weak\" - it may spuriously fail if the current value is expected, as per the pseudocode above; it will not spuriously fail as \"atomic_compare_exchange_weak\" may.  \nThis call would normally be used when a fail return will cause a retry anyway,  \nsaving the need for an extra loop inside the cas operation."},"sortText":"40791bfccore_util_atomic_compare_exchange_weak_u8","filterText":"core_util_atomic_compare_exchange_weak_u8","insertText":"core_util_atomic_compare_exchange_weak_u8(${1:volatile uint8_t *ptr}, ${2:uint8_t *expectedCurrentValue}, ${3:uint8_t desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_compare_exchange_weak_u8(${1:volatile uint8_t *ptr}, ${2:uint8_t *expectedCurrentValue}, ${3:uint8_t desiredValue})"}},{"label":"•core_util_atomic_decr_ptr(void *volatile *valuePtr, ptrdiff_t delta)","kind":3,"detail":"void *","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_decr_u8"},"sortText":"40791bfccore_util_atomic_decr_ptr","filterText":"core_util_atomic_decr_ptr","insertText":"core_util_atomic_decr_ptr(${1:void *volatile *valuePtr}, ${2:ptrdiff_t delta})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_decr_ptr(${1:void *volatile *valuePtr}, ${2:ptrdiff_t delta})"}},{"label":"•core_util_atomic_decr_s16(volatile int16_t *valuePtr, int16_t delta)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_decr_u8"},"sortText":"40791bfccore_util_atomic_decr_s16","filterText":"core_util_atomic_decr_s16","insertText":"core_util_atomic_decr_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t delta})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_decr_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t delta})"}},{"label":"•core_util_atomic_decr_s64(volatile int64_t *valuePtr, int64_t delta)","kind":3,"detail":"int64_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_decr_u8"},"sortText":"40791bfccore_util_atomic_decr_s64","filterText":"core_util_atomic_decr_s64","insertText":"core_util_atomic_decr_s64(${1:volatile int64_t *valuePtr}, ${2:int64_t delta})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_decr_s64(${1:volatile int64_t *valuePtr}, ${2:int64_t delta})"}},{"label":"•core_util_atomic_exchange(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_exchange_u8"},"sortText":"40791bfccore_util_atomic_exchange","filterText":"core_util_atomic_exchange","insertText":"core_util_atomic_exchange($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_exchange($0)"}},{"label":"•core_util_atomic_exchange_explicit_s16(volatile int16_t *valuePtr, int16_t desiredValue, mbed_memory_order order)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_exchange_explicit_u8"},"sortText":"40791bfccore_util_atomic_exchange_explicit_s16","filterText":"core_util_atomic_exchange_explicit_s16","insertText":"core_util_atomic_exchange_explicit_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t desiredValue}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_exchange_explicit_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t desiredValue}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_exchange_explicit_u8(volatile uint8_t *valuePtr, uint8_t desiredValue, mbed_memory_order order)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_exchange_u8  \n@param order memory ordering constraint"},"sortText":"40791bfccore_util_atomic_exchange_explicit_u8","filterText":"core_util_atomic_exchange_explicit_u8","insertText":"core_util_atomic_exchange_explicit_u8(${1:volatile uint8_t *valuePtr}, ${2:uint8_t desiredValue}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_exchange_explicit_u8(${1:volatile uint8_t *valuePtr}, ${2:uint8_t desiredValue}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_exchange_s64(volatile int64_t *valuePtr, int64_t desiredValue)","kind":3,"detail":"int64_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_exchange_u8"},"sortText":"40791bfccore_util_atomic_exchange_s64","filterText":"core_util_atomic_exchange_s64","insertText":"core_util_atomic_exchange_s64(${1:volatile int64_t *valuePtr}, ${2:int64_t desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_exchange_s64(${1:volatile int64_t *valuePtr}, ${2:int64_t desiredValue})"}},{"label":"•core_util_atomic_exchange_u16(volatile uint16_t *valuePtr, uint16_t desiredValue)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_exchange_u8"},"sortText":"40791bfccore_util_atomic_exchange_u16","filterText":"core_util_atomic_exchange_u16","insertText":"core_util_atomic_exchange_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_exchange_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t desiredValue})"}},{"label":"•core_util_atomic_fetch_add(T *volatile *valuePtr, ptrdiff_t arg)","kind":3,"detail":"T *","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_fetch_add_ptr"},"sortText":"40791bfccore_util_atomic_fetch_add","filterText":"core_util_atomic_fetch_add","insertText":"core_util_atomic_fetch_add(${1:T *volatile *valuePtr}, ${2:ptrdiff_t arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_add(${1:T *volatile *valuePtr}, ${2:ptrdiff_t arg})"}},{"label":"•core_util_atomic_fetch_add_explicit(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_fetch_add_explicit_u8"},"sortText":"40791bfccore_util_atomic_fetch_add_explicit","filterText":"core_util_atomic_fetch_add_explicit","insertText":"core_util_atomic_fetch_add_explicit($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_add_explicit($0)"}},{"label":"•core_util_atomic_fetch_add_s16(volatile int16_t *valuePtr, int16_t arg)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_add_u8"},"sortText":"40791bfccore_util_atomic_fetch_add_s16","filterText":"core_util_atomic_fetch_add_s16","insertText":"core_util_atomic_fetch_add_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_add_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t arg})"}},{"label":"•core_util_atomic_fetch_add_u64(volatile uint64_t *valuePtr, uint64_t arg)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_add_u8"},"sortText":"40791bfccore_util_atomic_fetch_add_u64","filterText":"core_util_atomic_fetch_add_u64","insertText":"core_util_atomic_fetch_add_u64(${1:volatile uint64_t *valuePtr}, ${2:uint64_t arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_add_u64(${1:volatile uint64_t *valuePtr}, ${2:uint64_t arg})"}},{"label":"•core_util_atomic_fetch_or(volatile T *valuePtr, mstd::type_identity_t\u003cT\u003e arg)","kind":3,"detail":"T","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_fetch_or_u8"},"sortText":"40791bfccore_util_atomic_fetch_or","filterText":"core_util_atomic_fetch_or","insertText":"core_util_atomic_fetch_or(${1:volatile T *valuePtr}, ${2:mstd::type_identity_t\u003cT\u003e arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_or(${1:volatile T *valuePtr}, ${2:mstd::type_identity_t\u003cT\u003e arg})"}},{"label":"•core_util_atomic_fetch_or_explicit_u32(volatile uint32_t *valuePtr, uint32_t arg, mbed_memory_order order)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_or_explicit_u8"},"sortText":"40791bfccore_util_atomic_fetch_or_explicit_u32","filterText":"core_util_atomic_fetch_or_explicit_u32","insertText":"core_util_atomic_fetch_or_explicit_u32(${1:volatile uint32_t *valuePtr}, ${2:uint32_t arg}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_or_explicit_u32(${1:volatile uint32_t *valuePtr}, ${2:uint32_t arg}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_fetch_or_u16(volatile uint16_t *valuePtr, uint16_t arg)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_or_u8"},"sortText":"40791bfccore_util_atomic_fetch_or_u16","filterText":"core_util_atomic_fetch_or_u16","insertText":"core_util_atomic_fetch_or_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_or_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t arg})"}},{"label":"•core_util_atomic_fetch_or_u64(volatile uint64_t *valuePtr, uint64_t arg)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_or_u8"},"sortText":"40791bfccore_util_atomic_fetch_or_u64","filterText":"core_util_atomic_fetch_or_u64","insertText":"core_util_atomic_fetch_or_u64(${1:volatile uint64_t *valuePtr}, ${2:uint64_t arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_or_u64(${1:volatile uint64_t *valuePtr}, ${2:uint64_t arg})"}},{"label":"•core_util_atomic_fetch_or_u8(volatile uint8_t *valuePtr, uint8_t arg)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \nAtomic bitwise inclusive or.  \n@param valuePtr Target memory location being modified.  \n@param arg The argument for the bitwise operation.  \n@return The original value."},"sortText":"40791bfccore_util_atomic_fetch_or_u8","filterText":"core_util_atomic_fetch_or_u8","insertText":"core_util_atomic_fetch_or_u8(${1:volatile uint8_t *valuePtr}, ${2:uint8_t arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_or_u8(${1:volatile uint8_t *valuePtr}, ${2:uint8_t arg})"}},{"label":"•core_util_atomic_fetch_sub_explicit_s16(volatile int16_t *valuePtr, int16_t arg, mbed_memory_order order)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_sub_explicit_u8"},"sortText":"40791bfccore_util_atomic_fetch_sub_explicit_s16","filterText":"core_util_atomic_fetch_sub_explicit_s16","insertText":"core_util_atomic_fetch_sub_explicit_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t arg}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_sub_explicit_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t arg}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_fetch_sub_explicit_u16(volatile uint16_t *valuePtr, uint16_t arg, mbed_memory_order order)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_sub_explicit_u8"},"sortText":"40791bfccore_util_atomic_fetch_sub_explicit_u16","filterText":"core_util_atomic_fetch_sub_explicit_u16","insertText":"core_util_atomic_fetch_sub_explicit_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t arg}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_sub_explicit_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t arg}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_fetch_sub_explicit_u32(volatile uint32_t *valuePtr, uint32_t arg, mbed_memory_order order)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_sub_explicit_u8"},"sortText":"40791bfccore_util_atomic_fetch_sub_explicit_u32","filterText":"core_util_atomic_fetch_sub_explicit_u32","insertText":"core_util_atomic_fetch_sub_explicit_u32(${1:volatile uint32_t *valuePtr}, ${2:uint32_t arg}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_sub_explicit_u32(${1:volatile uint32_t *valuePtr}, ${2:uint32_t arg}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_fetch_sub_explicit_u64(volatile uint64_t *valuePtr, uint64_t arg, mbed_memory_order order)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_sub_explicit_u8"},"sortText":"40791bfccore_util_atomic_fetch_sub_explicit_u64","filterText":"core_util_atomic_fetch_sub_explicit_u64","insertText":"core_util_atomic_fetch_sub_explicit_u64(${1:volatile uint64_t *valuePtr}, ${2:uint64_t arg}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_sub_explicit_u64(${1:volatile uint64_t *valuePtr}, ${2:uint64_t arg}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_fetch_sub_s8(volatile int8_t *valuePtr, int8_t arg)","kind":3,"detail":"int8_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_sub_u8"},"sortText":"40791bfccore_util_atomic_fetch_sub_s8","filterText":"core_util_atomic_fetch_sub_s8","insertText":"core_util_atomic_fetch_sub_s8(${1:volatile int8_t *valuePtr}, ${2:int8_t arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_sub_s8(${1:volatile int8_t *valuePtr}, ${2:int8_t arg})"}},{"label":"•core_util_atomic_fetch_sub_u16(volatile uint16_t *valuePtr, uint16_t arg)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_sub_u8"},"sortText":"40791bfccore_util_atomic_fetch_sub_u16","filterText":"core_util_atomic_fetch_sub_u16","insertText":"core_util_atomic_fetch_sub_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_sub_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t arg})"}},{"label":"•core_util_atomic_fetch_sub_u8(volatile uint8_t *valuePtr, uint8_t arg)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \nAtomic subtract.  \n@param valuePtr Target memory location being modified.  \n@param arg The argument for the subtraction.  \n@return The original value."},"sortText":"40791bfccore_util_atomic_fetch_sub_u8","filterText":"core_util_atomic_fetch_sub_u8","insertText":"core_util_atomic_fetch_sub_u8(${1:volatile uint8_t *valuePtr}, ${2:uint8_t arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_sub_u8(${1:volatile uint8_t *valuePtr}, ${2:uint8_t arg})"}},{"label":"•core_util_atomic_fetch_xor_explicit_u16(volatile uint16_t *valuePtr, uint16_t arg, mbed_memory_order order)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_xor_explicit_u8"},"sortText":"40791bfccore_util_atomic_fetch_xor_explicit_u16","filterText":"core_util_atomic_fetch_xor_explicit_u16","insertText":"core_util_atomic_fetch_xor_explicit_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t arg}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_xor_explicit_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t arg}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_fetch_xor_u64(volatile uint64_t *valuePtr, uint64_t arg)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_fetch_xor_u8"},"sortText":"40791bfccore_util_atomic_fetch_xor_u64","filterText":"core_util_atomic_fetch_xor_u64","insertText":"core_util_atomic_fetch_xor_u64(${1:volatile uint64_t *valuePtr}, ${2:uint64_t arg})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_fetch_xor_u64(${1:volatile uint64_t *valuePtr}, ${2:uint64_t arg})"}},{"label":"•core_util_atomic_flag","kind":22,"documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \nA lock-free, primitive atomic flag.  \nEmulate C11's atomic_flag. The flag is initially in an indeterminate state unless explicitly initialized with CORE_UTIL_ATOMIC_FLAG_INIT."},"sortText":"40791bfccore_util_atomic_flag","filterText":"core_util_atomic_flag","insertText":"core_util_atomic_flag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_flag"}},{"label":"•core_util_atomic_incr_s16(volatile int16_t *valuePtr, int16_t delta)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_incr_u8"},"sortText":"40791bfccore_util_atomic_incr_s16","filterText":"core_util_atomic_incr_s16","insertText":"core_util_atomic_incr_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t delta})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_incr_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t delta})"}},{"label":"•core_util_atomic_incr_u16(volatile uint16_t *valuePtr, uint16_t delta)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_incr_u8"},"sortText":"40791bfccore_util_atomic_incr_u16","filterText":"core_util_atomic_incr_u16","insertText":"core_util_atomic_incr_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t delta})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_incr_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t delta})"}},{"label":"•core_util_atomic_load(T *const *valuePtr)","kind":3,"detail":"T *","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_load_ptr"},"sortText":"40791bfccore_util_atomic_load","filterText":"core_util_atomic_load","insertText":"core_util_atomic_load(${1:T *const *valuePtr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load(${1:T *const *valuePtr})"}},{"label":"•core_util_atomic_load_explicit(const volatile T *valuePtr, mbed_memory_order order)","kind":3,"detail":"T","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_load_explicit_u8"},"sortText":"40791bfccore_util_atomic_load_explicit","filterText":"core_util_atomic_load_explicit","insertText":"core_util_atomic_load_explicit(${1:const volatile T *valuePtr}, ${2:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load_explicit(${1:const volatile T *valuePtr}, ${2:mbed_memory_order order})"}},{"label":"•core_util_atomic_load_explicit_ptr(void *const volatile *valuePtr, mbed_memory_order order)","kind":3,"detail":"void *","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_load_u8"},"sortText":"40791bfccore_util_atomic_load_explicit_ptr","filterText":"core_util_atomic_load_explicit_ptr","insertText":"core_util_atomic_load_explicit_ptr(${1:void *const volatile *valuePtr}, ${2:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load_explicit_ptr(${1:void *const volatile *valuePtr}, ${2:mbed_memory_order order})"}},{"label":"•core_util_atomic_load_explicit_u16(const volatile uint16_t *valuePtr, mbed_memory_order order)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_load_explicit_u8"},"sortText":"40791bfccore_util_atomic_load_explicit_u16","filterText":"core_util_atomic_load_explicit_u16","insertText":"core_util_atomic_load_explicit_u16(${1:const volatile uint16_t *valuePtr}, ${2:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load_explicit_u16(${1:const volatile uint16_t *valuePtr}, ${2:mbed_memory_order order})"}},{"label":"•core_util_atomic_load_explicit_u64(const volatile uint64_t *valuePtr, mbed_memory_order order)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_load_explicit_u8"},"sortText":"40791bfccore_util_atomic_load_explicit_u64","filterText":"core_util_atomic_load_explicit_u64","insertText":"core_util_atomic_load_explicit_u64(${1:const volatile uint64_t *valuePtr}, ${2:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load_explicit_u64(${1:const volatile uint64_t *valuePtr}, ${2:mbed_memory_order order})"}},{"label":"•core_util_atomic_load_explicit_u8(const volatile uint8_t *valuePtr, mbed_memory_order order)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_load_u8  \n@param order memory ordering constraint"},"sortText":"40791bfccore_util_atomic_load_explicit_u8","filterText":"core_util_atomic_load_explicit_u8","insertText":"core_util_atomic_load_explicit_u8(${1:const volatile uint8_t *valuePtr}, ${2:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load_explicit_u8(${1:const volatile uint8_t *valuePtr}, ${2:mbed_memory_order order})"}},{"label":"•core_util_atomic_load_s32(const volatile int32_t *valuePtr)","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_load_u8"},"sortText":"40791bfccore_util_atomic_load_s32","filterText":"core_util_atomic_load_s32","insertText":"core_util_atomic_load_s32(${1:const volatile int32_t *valuePtr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load_s32(${1:const volatile int32_t *valuePtr})"}},{"label":"•core_util_atomic_load_s64(const volatile int64_t *valuePtr)","kind":3,"detail":"int64_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_load_u8"},"sortText":"40791bfccore_util_atomic_load_s64","filterText":"core_util_atomic_load_s64","insertText":"core_util_atomic_load_s64(${1:const volatile int64_t *valuePtr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load_s64(${1:const volatile int64_t *valuePtr})"}},{"label":"•core_util_atomic_load_s8(const volatile int8_t *valuePtr)","kind":3,"detail":"int8_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_load_u8"},"sortText":"40791bfccore_util_atomic_load_s8","filterText":"core_util_atomic_load_s8","insertText":"core_util_atomic_load_s8(${1:const volatile int8_t *valuePtr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load_s8(${1:const volatile int8_t *valuePtr})"}},{"label":"•core_util_atomic_load_u32(const volatile uint32_t *valuePtr)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_load_u8"},"sortText":"40791bfccore_util_atomic_load_u32","filterText":"core_util_atomic_load_u32","insertText":"core_util_atomic_load_u32(${1:const volatile uint32_t *valuePtr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load_u32(${1:const volatile uint32_t *valuePtr})"}},{"label":"•core_util_atomic_load_u64(const volatile uint64_t *valuePtr)","kind":3,"detail":"uint64_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_load_u8"},"sortText":"40791bfccore_util_atomic_load_u64","filterText":"core_util_atomic_load_u64","insertText":"core_util_atomic_load_u64(${1:const volatile uint64_t *valuePtr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load_u64(${1:const volatile uint64_t *valuePtr})"}},{"label":"•core_util_atomic_load_u8(const volatile uint8_t *valuePtr)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \nAtomic load.  \n@param valuePtr Target memory location.  \n@return The loaded value."},"sortText":"40791bfccore_util_atomic_load_u8","filterText":"core_util_atomic_load_u8","insertText":"core_util_atomic_load_u8(${1:const volatile uint8_t *valuePtr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_load_u8(${1:const volatile uint8_t *valuePtr})"}},{"label":"•core_util_atomic_store(volatile T *valuePtr, mstd::type_identity_t\u003cT\u003e desiredValue)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_store_u8"},"sortText":"40791bfccore_util_atomic_store","filterText":"core_util_atomic_store","insertText":"core_util_atomic_store(${1:volatile T *valuePtr}, ${2:mstd::type_identity_t\u003cT\u003e desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_store(${1:volatile T *valuePtr}, ${2:mstd::type_identity_t\u003cT\u003e desiredValue})"}},{"label":"•core_util_atomic_store_explicit(T **valuePtr, mstd::type_identity_t\u003cT\u003e *desiredValue, mbed_memory_order order)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_store_explicit_ptr"},"sortText":"40791bfccore_util_atomic_store_explicit","filterText":"core_util_atomic_store_explicit","insertText":"core_util_atomic_store_explicit(${1:T **valuePtr}, ${2:mstd::type_identity_t\u003cT\u003e *desiredValue}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_store_explicit(${1:T **valuePtr}, ${2:mstd::type_identity_t\u003cT\u003e *desiredValue}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_store_explicit_bool(volatile bool *valuePtr, bool desiredValue, mbed_memory_order order)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_store_explicit_u8"},"sortText":"40791bfccore_util_atomic_store_explicit_bool","filterText":"core_util_atomic_store_explicit_bool","insertText":"core_util_atomic_store_explicit_bool(${1:volatile bool *valuePtr}, ${2:bool desiredValue}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_store_explicit_bool(${1:volatile bool *valuePtr}, ${2:bool desiredValue}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_store_explicit_ptr(void *volatile *valuePtr, void *desiredValue, mbed_memory_order order)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_store_explicit_u8"},"sortText":"40791bfccore_util_atomic_store_explicit_ptr","filterText":"core_util_atomic_store_explicit_ptr","insertText":"core_util_atomic_store_explicit_ptr(${1:void *volatile *valuePtr}, ${2:void *desiredValue}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_store_explicit_ptr(${1:void *volatile *valuePtr}, ${2:void *desiredValue}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_store_explicit_s32(volatile int32_t *valuePtr, int32_t desiredValue, mbed_memory_order order)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_store_explicit_u8"},"sortText":"40791bfccore_util_atomic_store_explicit_s32","filterText":"core_util_atomic_store_explicit_s32","insertText":"core_util_atomic_store_explicit_s32(${1:volatile int32_t *valuePtr}, ${2:int32_t desiredValue}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_store_explicit_s32(${1:volatile int32_t *valuePtr}, ${2:int32_t desiredValue}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_store_explicit_u16(volatile uint16_t *valuePtr, uint16_t desiredValue, mbed_memory_order order)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_store_explicit_u8"},"sortText":"40791bfccore_util_atomic_store_explicit_u16","filterText":"core_util_atomic_store_explicit_u16","insertText":"core_util_atomic_store_explicit_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t desiredValue}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_store_explicit_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t desiredValue}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_store_explicit_u64(volatile uint64_t *valuePtr, uint64_t desiredValue, mbed_memory_order order)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_store_explicit_u8"},"sortText":"40791bfccore_util_atomic_store_explicit_u64","filterText":"core_util_atomic_store_explicit_u64","insertText":"core_util_atomic_store_explicit_u64(${1:volatile uint64_t *valuePtr}, ${2:uint64_t desiredValue}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_store_explicit_u64(${1:volatile uint64_t *valuePtr}, ${2:uint64_t desiredValue}, ${3:mbed_memory_order order})"}},{"label":"•core_util_atomic_store_s16(volatile int16_t *valuePtr, int16_t desiredValue)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_store_u8"},"sortText":"40791bfccore_util_atomic_store_s16","filterText":"core_util_atomic_store_s16","insertText":"core_util_atomic_store_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_store_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t desiredValue})"}},{"label":"•core_util_atomic_store_s8(volatile int8_t *valuePtr, int8_t desiredValue)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_atomic.h\"`  \n\\\\copydoc core_util_atomic_store_u8"},"sortText":"40791bfccore_util_atomic_store_s8","filterText":"core_util_atomic_store_s8","insertText":"core_util_atomic_store_s8(${1:volatile int8_t *valuePtr}, ${2:int8_t desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_atomic_store_s8(${1:volatile int8_t *valuePtr}, ${2:int8_t desiredValue})"}},{"label":"•core_util_critical_section_enter()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_critical.h\"`  \nMark the start of a critical section  \nThis function should be called to mark the start of a critical section of code.  \n@note NOTES:  \n1\\) The use of this style of critical section is targetted at C based implementations.  \n2\\) These critical sections can be nested.  \n3\\) The interrupt enable state on entry to the first critical section (of a nested set, or single section) will be preserved on exit from the section.  \n4\\) This implementation will currently only work on code running in privileged mode."},"sortText":"40791bfccore_util_critical_section_enter","filterText":"core_util_critical_section_enter","insertText":"core_util_critical_section_enter()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_critical_section_enter()"}},{"label":"•core_util_critical_section_exit()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_critical.h\"`  \nMark the end of a critical section  \nThis function should be called to mark the end of a critical section of code.  \n@note NOTES:  \n1\\) The use of this style of critical section is targetted at C based implementations.  \n2\\) These critical sections can be nested.  \n3\\) The interrupt enable state on entry to the first critical section (of a nested set, or single section) will be preserved on exit from the section.  \n4\\) This implementation will currently only work on code running in privileged mode."},"sortText":"40791bfccore_util_critical_section_exit","filterText":"core_util_critical_section_exit","insertText":"core_util_critical_section_exit()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_critical_section_exit()"}},{"label":"•core_util_in_critical_section()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_critical.h\"`  \nDetermine if we are currently in a critical section  \n@return true if in a critical section, false otherwise."},"sortText":"40791bfccore_util_in_critical_section","filterText":"core_util_in_critical_section","insertText":"core_util_in_critical_section()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_in_critical_section()"}},{"label":"•core_util_is_isr_active()","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\"mbed_critical.h\"`  \nDetermine if this code is executing from an interrupt  \nThis function can be called to determine if the code is running on interrupt context.  \n@note NOTE:  \nThis function works for both cortex-A and cortex-M, although the underlying implementation differs.  \n@return true if in an isr, false otherwise"},"sortText":"40791bfccore_util_is_isr_active","filterText":"core_util_is_isr_active","insertText":"core_util_is_isr_active()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"core_util_is_isr_active()"}},{"label":" ctime(const time_t *_time)","kind":3,"detail":"char *","sortText":"40791bfcctime","filterText":"ctime","insertText":"ctime(${1:const time_t *_time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"ctime(${1:const time_t *_time})"}},{"label":" ctime_r(const time_t *, char *)","kind":3,"detail":"char *","sortText":"40791bfcctime_r","filterText":"ctime_r","insertText":"ctime_r(${1:const time_t *}, ${2:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"ctime_r(${1:const time_t *}, ${2:char *})"}},{"label":"•caddr_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"407f2f3bcaddr_t","filterText":"caddr_t","insertText":"caddr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"caddr_t"}},{"label":"•clock_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"407f2f3bclock_t","filterText":"clock_t","insertText":"clock_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"clock_t"}},{"label":"•clockid_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csys/types.h\u003e`"},"sortText":"407f2f3bclockid_t","filterText":"clockid_t","insertText":"clockid_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"clockid_t"}},{"label":" creat(const char *, mode_t)","kind":3,"detail":"int","sortText":"407f2f3bcreat","filterText":"creat","insertText":"creat(${1:const char *}, ${2:mode_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"creat(${1:const char *}, ${2:mode_t})"}},{"label":" COMPONENT_FLASHIAP","kind":1,"sortText":"40800000COMPONENT_FLASHIAP","filterText":"COMPONENT_FLASHIAP","insertText":"COMPONENT_FLASHIAP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"COMPONENT_FLASHIAP"}},{"label":"•mbed::Callback\u003ctypename Signature\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"Callback.h\"`  \nCallback class based on template specialization  \n@note Synchronization level: Not protected"},"sortText":"4092d0aaCallback","filterText":"Callback","insertText":"mbed::Callback\u003c${1:typename Signature}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"mbed::Callback\u003c${1:typename Signature}\u003e"}},{"label":"•mbed::detail::CallbackBase","kind":22,"documentation":{"kind":"markdown","value":"From `\"Callback.h\"`  \n\\*INDENT-ON\\*"},"sortText":"4092d0aaCallbackBase","filterText":"CallbackBase","insertText":"mbed::detail::CallbackBase","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"mbed::detail::CallbackBase"}},{"label":"•mbed::callback(…)","kind":3,"detail":"[12 overloads]","documentation":{"kind":"markdown","value":"From `\"Callback.h\"`  \nCreate a callback class with type inferred from the arguments  \n@param func Static function to attach  \n@param arg Pointer argument to function  \n@return Callback with inferred type"},"sortText":"4092d0aacallback","filterText":"callback","insertText":"mbed::callback($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":7}},"newText":"mbed::callback($0)"}}]},"jsonrpc":"2.0"}Content-Length: 398

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'co'"}]},"jsonrpc":"2.0"}Content-Length: 789

{"id":123,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":11}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":124,"result":[],"jsonrpc":"2.0"}
<<<
39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":389}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":390},"contentChanges":[{"range":{"start":{"line":14,"character":8},"end":{"line":14,"character":8}},"rangeLength":0,"text":"n"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":123}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":124}}Content-Length: 222

{"jsonrpc":"2.0","id":125,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":391},"contentChanges":[{"range":{"start":{"line":14,"character":9},"end":{"line":14,"character":9}},"rangeLength":0,"text":"t"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":125}}Content-Length: 222

{"jsonrpc":"2.0","id":126,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":392},"contentChanges":[{"range":{"start":{"line":14,"character":10},"end":{"line":14,"character":10}},"rangeLength":0,"text":"i"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":126}}Content-Length: 222

{"jsonrpc":"2.0","id":127,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":393},"contentChanges":[{"range":{"start":{"line":14,"character":11},"end":{"line":14,"character":11}},"rangeLength":0,"text":"n"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":127}}Content-Length: 222

{"jsonrpc":"2.0","id":128,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":394},"contentChanges":[{"range":{"start":{"line":14,"character":12},"end":{"line":14,"character":12}},"rangeLength":0,"text":"u"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":128}}Content-Length: 222

{"jsonrpc":"2.0","id":129,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":130,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocumen
>>>
Content-Length: 1349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'con'; did you mean 'cos'? (fix available)\n\nc:\\users\\mirko\\appdata\\local\\arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4\\bin\\..\\lib\\gcc\\arm-none-eabi\\7.2.1\\..\\..\\..\\..\\arm-none-eabi\\include\\c++\\7.2.1\\math.h:43:12:\nnote: 'cos' declared here"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":5}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":9}},"severity":1,"code":"ovl_unresolvable","source":"clang","message":"Reference to overloaded function could not be resolved; did you mean to call it?\n\nc:\\users\\mirko\\appdata\\local\\arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\7-2017q4\\bin\\..\\lib\\gcc\\arm-none-eabi\\7.2.1\\..\\..\\..\\..\\arm-none-eabi\\include\\c++\\7.2.1\\cmath:196:5:\nnote: possible target for call"}]},"jsonrpc":"2.0"}Content-Length: 789

{"id":125,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":11}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 401

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'cont'"}]},"jsonrpc":"2.0"}Content-Length: 789

{"id":126,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":11}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 789

{"id":127,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":11}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 402

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'conti'"}]},"jsonrpc":"2.0"}Content-Length: 403

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'contin'"}]},"jsonrpc":"2.0"}Content-Length: 789

{"id":128,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":11}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 404

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":14,"character":6},"end":{"line":14,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'continu'"}]},"jsonrpc":"2.0"}Content-Length: 789

{"id":129,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":11}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":130,"result":[],"jsonrpc":"2.0"}
<<<
t":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":395},"contentChanges":[{"range":{"start":{"line":14,"character":13},"end":{"line":14,"character":13}},"rangeLength":0,"text":"e"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":129}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":130}}Content-Length: 222

{"jsonrpc":"2.0","id":131,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":132,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 325

{"jsonrpc":"2.0","id":133,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":132}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":396},"contentChanges":[{"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"rangeLength":0,"text":";"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":131}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":133}}Content-Length: 222

{"jsonrpc":"2.0","id":134,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":135,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 325

{"jsonrpc":"2.0","id":136,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":135}}Content-Length: 325

{"jsonrpc":"2.0","id":137,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":136}}Content-Length: 325

{"jsonrpc":"2.0","id":138,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":137}}Content-Length: 325

{"jsonrpc":"2.0","id":139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved2021
>>>
Content-Length: 789

{"id":131,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":11}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 424

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":5}},"severity":1,"code":"expected_semi_after_stmt","source":"clang","message":"Expected ';' after continue statement (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 398

{"id":132,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server899810663/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":21,"character":14},"end":{"line":21,"character":14}}}]}}],"jsonrpc":"2.0"}Content-Length: 398

{"id":133,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server899810663/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":21,"character":14},"end":{"line":21,"character":14}}}]}}],"jsonrpc":"2.0"}Content-Length: 789

{"id":134,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":11}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 38

{"id":135,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":136,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":137,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":138,"result":[],"jsonrpc":"2.0"}
<<<
1024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":138}}Content-Length: 325

{"jsonrpc":"2.0","id":140,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":139}}Content-Length: 325

{"jsonrpc":"2.0","id":141,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":14,"character":15},"end":{"line":14,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":140}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":396}}}Content-Length: 262

{"jsonrpc":"2.0","id":142,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":1,"character":19}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":122}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":134}}Content-Length: 222

{"jsonrpc":"2.0","id":143,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":142}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":397},"contentChanges":[{"range":{"start":{"line":1,"character":19},"end":{"line":1,"character":19}},"rangeLength":0,"text":"\n"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":143}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":141}}Content-Length: 222

{"jsonrpc":"2.0","id":144,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":398},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":144}}Content-Length: 222

{"jsonrpc":"2.0","id":145,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":399},"contentChanges":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":0}},"rangeLength":0,"text":"#"}]}}Content-Length: 64

{"jsonrpc":"
>>>
Content-Length: 38

{"id":139,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":140,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":141,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":142,"result":[],"jsonrpc":"2.0"}Content-Length: 789

{"id":143,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":23}},"selectionRange":{"start":{"line":3,"character":5},"end":{"line":3,"character":15}}},{"name":"loop","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":11}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":9}}},{"name":"setup","kind":12,"range":{"start":{"line":5,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 601

{"id":144,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"setup","kind":12,"range":{"start":{"line":6,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":6,"character":5},"end":{"line":6,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":9}}}],"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3207

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10760,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\mirko\\AppData\\Local\\Temp\\.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh\\sketch_nov24a","rootUri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","name":"sketch_nov24a"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 620

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","languageId":"cpp","version":408,"text":"#define LEDBLUE 2\n#define BUTTON_1 12\n\n#define \n\nbool statusBLUE = false;\n\nvoid setup() {\n\n  pinMode(LEDBLUE, OUTPUT);\n  pinMode(BUTTON_1, INPUT_PULLUP);\n  \n  while(1) {\n    statusBLUE = !statusBLUE;\n    digitalWrite(LEDBLUE, statusBLUE);\n    if(digitalRead(BUTTON_1) == LOW) {\n      continue;\n    }\n    delay(200);\n  }\n\n}\n\nvoid loop() {\n  \n\n}\n"}}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":409},"contentChanges":[{"range":{"start":{"line":3,"character":7},"end":{"line":3,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":410},"contentChanges":[{"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":411},"contentChanges":[{"range":{"start":{"line":3,"character":5},"end":{"line":3,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":412},"contentChanges":[{"range":{"start":{"line":3,"character":4},"end":{"line":3,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":413},"contentChanges":[{"range":{"start":{"line":3,"character":3},"end":{"line":3,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":414},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":415},"contentChanges":[{"range":{"start":{"line":3,"character":1},"end":{"line":3,"character":2}},"rangeLength":1,"text":""}]}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":416},"contentChanges":[{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":1}},"rangeLength":1,"text":""}]}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":417},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":3,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":418},"contentChanges":[{"range":{"start":{"line":1,"character":19},"end":{"line":2,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":419},"contentChanges":[{"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"rangeLength":0,"text":"\n"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/di
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}
<<<
dChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":420},"contentChanges":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"rangeLength":0,"text":"#"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":421},"contentChanges":[{"range":{"start":{"line":1,"character":1},"end":{"line":1,"character":1}},"rangeLength":0,"text":"d"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":422},"contentChanges":[{"range":{"start":{"line":1,"character":2},"end":{"line":1,"character":2}},"rangeLength":0,"text":"e"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":423},"contentChanges":[{"range":{"start":{"line":1,"character":3},"end":{"line":1,"character":3}},"rangeLength":0,"text":"f"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":424},"contentChanges":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":4}},"rangeLength":0,"text":"i"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":425},"contentChanges":[{"range":{"start":{"line":1,"character":5},"end":{"line":1,"character":5}},"rangeLength":0,"text":"n"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":426},"contentChanges":[{"range":{"start":{"line":1,"character":6},"end":{"line":1,"character":6}},"rangeLength":0,"text":"e"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":427},"contentChanges":[{"range":{"start":{"line":1,"character":7},"end":{"line":1,"character":7}},"rangeLength":0,"text":" "}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":428},"contentChanges":[{"range":{"start":{"line":1,"character":8},"end":{"line":1,"character":8}},"rangeLength":0,"text":"L"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":429},"contentChanges":[{"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":9}},"rangeLength":0,"text":"E"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":430},"contentChanges":[{"range":{"start":{"line":1,"character":10},"end":{"line":1,"character":10}},"rangeLength":0,"text":"D"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":431},"contentChanges":[{"range":{"start":{"line":1,"character":11},"end":{"line":1,"character":11}},"rangeLength":0,"text":"F"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":432},"contentChanges":[{"range":{"start":{"line":1,"character":12},"end":{"line":1,"character":12}},"rangeLength":0,"text":"G"}]}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":433},"contentChanges":[{"range":{"start":{"line":1,"character":12},"end":{"line":1,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":434},"contentChanges":[{"range":{"start":{"line":1,"character":11},"end":{"line":1,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":435},"contentChanges":[{"range":{"start":{"line":1,"character":11},"end":{"line":1,"character":11}},"rangeLength":0,"text":"G"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":436},"contentChanges":[{"range":{"start":{"line":1,"character":12},"end":{"line":1,"character":12}},"rangeLength":0,"text":"R"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":437},"contentChanges":[{"range":{"start":{"line":1,"character":13},"end":{"line":1,"character":13}},"rangeLength":0,"text":"E"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":438},"contentChanges":[{"range":{"start":{"line":1,"character":14},"end":{"line":1,"character":14}},"rangeLength":0,"text":"E"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":439},"contentChanges":[{"range":{"start":{"line":1,"character":15},"end":{"line":1,"character":15}},"rangeLength":0,"text":"N"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":440},"contentChanges":[{"range":{"start":{"line":1,"character":16},"end":{"line":1,"character":16}},"rangeLength":0,"text":" "}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":441},"contentChanges":[{"range":{"start":{"line":1,"character":17},"end":{"line":1,"character":17}},"rangeLength":0,"text":"3"}]}}Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/30","percentage":3.3333333333333335,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/30","percentage":6.666666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/30","percentage":6.666666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":441}}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/30","percentage":10,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/30","percentage":10,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/30","percentage":13.333333333333334,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/30","percentage":13.333333333333334,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/30","percentage":16.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/30","percentage":16.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/30","percentage":20,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/30","percentage":20,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/30","percentage":23.333333333333332,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/30","percentage":26.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/30","percentage":26.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/30","percentage":30,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/30","percentage":30,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/30","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/30","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/30","percentage":36.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/30","percentage":36.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/30","percentage":40,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/30","percentage":40,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/30","percentage":43.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/30","percentage":46.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/30","percentage":46.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/30","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/30","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/30","percentage":53.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/30","percentage":53.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/30","percentage":60,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/30","percentage":60,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/30","percentage":63.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/30","percentage":63.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/30","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/30","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/30","percentage":73.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/30","percentage":76.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/30","percentage":86.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/30","percentage":90,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/30","percentage":93.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/30","percentage":96.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":442},"contentChanges":[{"range":{"start":{"line":4,"character":24},"end":{"line":4,"character":24}},"rangeLength":0,"text":"\n"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":443},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":0}},"rangeLength":0,"text":"b"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":444},"contentChanges":[{"range":{"start":{"line":5,"character":1},"end":{"line":5,"character":1}},"rangeLength":0,"text":"o"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":445},"contentChanges":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":2}},"rangeLength":0,"text":"o"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":446},"contentChanges":[{"range":{"start":{"line":5,"character":3},"end":{"line":5,"character":3}},"rangeLength":0,"text":"l"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":447},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"rangeLength":0,"text":" "}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":448},"contentChanges":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"rangeLength":0,"text":"s"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":449},"contentChanges":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":6}},"rangeLength":0,"text":"t"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":450},"contentChanges":[{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":7}},"rangeLength":0,"text":"a"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":451},"contentChanges":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"rangeLength":0,"text":"t"}]}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":452},"contentChanges":[{"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":9}},"rangeLength":0,"text":"u"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDo
>>>
Content-Length: 1189

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":7,"character":10},"end":{"line":7,"character":18}},"severity":1,"code":"invalid_suffix_constant","source":"clang","message":"Invalid suffix 'tusBLUE' on integer constant"},{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'statusBLUE'"},{"range":{"start":{"line":10,"character":18},"end":{"line":10,"character":28}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'statusBLUE'"},{"range":{"start":{"line":11,"character":26},"end":{"line":11,"character":36}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'statusBLUE'"},{"range":{"start":{"line":12,"character":19},"end":{"line":12,"character":27}},"severity":1,"code":"invalid_suffix_constant","source":"clang","message":"Invalid suffix 'tusBLUE' on integer constant"}]},"jsonrpc":"2.0"}
<<<
cument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":453},"contentChanges":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"rangeLength":0,"text":"s"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":454},"contentChanges":[{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"rangeLength":0,"text":"G"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":455},"contentChanges":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":12}},"rangeLength":0,"text":"r"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":456},"contentChanges":[{"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":13}},"rangeLength":0,"text":"e"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":457},"contentChanges":[{"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"rangeLength":0,"text":"e"}]}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":458},"contentChanges":[{"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":459},"contentChanges":[{"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":460},"contentChanges":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":461},"contentChanges":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":12}},"rangeLength":0,"text":"R"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":462},"contentChanges":[{"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":13}},"rangeLength":0,"text":"E"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":463},"contentChanges":[{"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"rangeLength":0,"text":"E"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":464},"contentChanges":[{"range":{"start":{"line":5,"character":15},"end":{"line":5,"character":15}},"rangeLength":0,"text":"N"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":465},"contentChanges":[{"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":16}},"rangeLength":0,"text":" "}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":466},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":17}},"rangeLength":0,"text":"="}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":467},"contentChanges":[{"range":{"start":{"line":5,"character":18},"end":{"line":5,"character":18}},"rangeLength":0,"text":" "}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":468},"contentChanges":[{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":19}},"rangeLength":0,"text":"f"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":469},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"rangeLength":0,"text":"a"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":470},"contentChanges":[{"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":21}},"rangeLength":0,"text":"l"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":471},"contentChanges":[{"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"rangeLength":0,"text":"s"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":472},"contentChanges":[{"range":{"start":{"line":5,"character":23},"end":{"line":5,"character":23}},"rangeLength":0,"text":"e"}]}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":473},"contentChanges":[{"range":{"start":{"line":5,"character":24},"end":{"line":5,"character":24}},"rangeLength":0,"text":";"}]}}Content-Length: 281

{"jsonrpc":"2.0","id":1,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":25},"context":{"triggerKind":1}}}Content-Length: 321

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 28199

{"id":1,"result":{"isIncomplete":true,"items":[{"label":" bool","kind":14,"sortText":"3ec00000bool","filterText":"bool","insertText":"bool","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"bool"}},{"label":" alignas(expression)","kind":15,"sortText":"3f000000alignas","filterText":"alignas","insertText":"alignas(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"alignas(${0:expression})"}},{"label":" asm(string-literal)","kind":15,"sortText":"3f000000asm","filterText":"asm","insertText":"asm(${0:string-literal})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"asm(${0:string-literal})"}},{"label":" auto","kind":14,"sortText":"3f000000auto","filterText":"auto","insertText":"auto","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"auto"}},{"label":" char","kind":14,"sortText":"3f000000char","filterText":"char","insertText":"char","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"char"}},{"label":" char16_t","kind":14,"sortText":"3f000000char16_t","filterText":"char16_t","insertText":"char16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"char16_t"}},{"label":" char32_t","kind":14,"sortText":"3f000000char32_t","filterText":"char32_t","insertText":"char32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"char32_t"}},{"label":" class","kind":14,"sortText":"3f000000class","filterText":"class","insertText":"class","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"class"}},{"label":" const","kind":14,"sortText":"3f000000const","filterText":"const","insertText":"const","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"const"}},{"label":" constexpr","kind":14,"sortText":"3f000000constexpr","filterText":"constexpr","insertText":"constexpr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"constexpr"}},{"label":" decltype(expression)","kind":15,"sortText":"3f000000decltype","filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"decltype(${0:expression})"}},{"label":" double","kind":14,"sortText":"3f000000double","filterText":"double","insertText":"double","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"double"}},{"label":" enum","kind":14,"sortText":"3f000000enum","filterText":"enum","insertText":"enum","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"enum"}},{"label":" extern","kind":14,"sortText":"3f000000extern","filterText":"extern","insertText":"extern","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"extern"}},{"label":" float","kind":14,"sortText":"3f000000float","filterText":"float","insertText":"float","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"float"}},{"label":" inline","kind":14,"sortText":"3f000000inline","filterText":"inline","insertText":"inline","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"inline"}},{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"int"}},{"label":" long","kind":14,"sortText":"3f000000long","filterText":"long","insertText":"long","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"long"}},{"label":" namespace name = namespace;","kind":15,"sortText":"3f000000namespace","filterText":"namespace","insertText":"namespace ${1:name} = ${0:namespace};","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"namespace ${1:name} = ${0:namespace};"}},{"label":" namespace identifier {declarations}","kind":15,"sortText":"3f000000namespace","filterText":"namespace","insertText":"namespace ${1:identifier} {\n${0:declarations}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"namespace ${1:identifier} {\n${0:declarations}\n}"}},{"label":" operator","kind":14,"sortText":"3f000000operator","filterText":"operator","insertText":"operator","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"operator"}},{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"signed"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"struct"}},{"label":" template declaration","kind":15,"sortText":"3f000000template","filterText":"template","insertText":"template ${0:declaration}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"template ${0:declaration}"}},{"label":" template\u003cparameters\u003e","kind":15,"sortText":"3f000000template","filterText":"template","insertText":"template\u003c${0:parameters}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"template\u003c${0:parameters}\u003e"}},{"label":" thread_local","kind":14,"sortText":"3f000000thread_local","filterText":"thread_local","insertText":"thread_local","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"thread_local"}},{"label":" typedef type name;","kind":15,"sortText":"3f000000typedef","filterText":"typedef","insertText":"typedef ${1:type} ${0:name};","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"typedef ${1:type} ${0:name};"}},{"label":" typename name","kind":15,"sortText":"3f000000typename","filterText":"typename","insertText":"typename ${0:name}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"typename ${0:name}"}},{"label":" union","kind":14,"sortText":"3f000000union","filterText":"union","insertText":"union","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"union"}},{"label":" unsigned","kind":14,"sortText":"3f000000unsigned","filterText":"unsigned","insertText":"unsigned","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"unsigned"}},{"label":" using name = type;","kind":15,"sortText":"3f000000using","filterText":"using","insertText":"using ${1:name} = ${0:type};","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"using ${1:name} = ${0:type};"}},{"label":" using qualifier::name;","kind":15,"sortText":"3f000000using","filterText":"using","insertText":"using ${1:qualifier}::${0:name};","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"using ${1:qualifier}::${0:name};"}},{"label":" using namespace identifier;","kind":15,"sortText":"3f000000using namespace","filterText":"using namespace","insertText":"using namespace ${0:identifier};","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"using namespace ${0:identifier};"}},{"label":" void","kind":14,"sortText":"3f000000void","filterText":"void","insertText":"void","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"void"}},{"label":" volatile","kind":14,"sortText":"3f000000volatile","filterText":"volatile","insertText":"volatile","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"volatile"}},{"label":" wchar_t","kind":14,"sortText":"3f000000wchar_t","filterText":"wchar_t","insertText":"wchar_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"wchar_t"}},{"label":" size_t","kind":8,"sortText":"3f16cba2size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"size_t"}},{"label":" FILE","kind":8,"sortText":"3f17ae13FILE","filterText":"FILE","insertText":"FILE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"FILE"}},{"label":" type_info","kind":7,"sortText":"3f651eb8type_info","filterText":"type_info","insertText":"type_info","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"type_info"}},{"label":" arduino","kind":9,"sortText":"3f9eb851arduino","filterText":"arduino","insertText":"arduino","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"arduino"}},{"label":" USBCDC","kind":7,"sortText":"3fec239bUSBCDC","filterText":"USBCDC","insertText":"USBCDC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"USBCDC"}},{"label":" Stream","kind":7,"sortText":"3fecba8fStream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"Stream"}},{"label":" INADDR_NONE","kind":6,"detail":"const IPAddress","sortText":"3ff8a156INADDR_NONE","filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"INADDR_NONE"}},{"label":" IPAddress","kind":7,"documentation":{"kind":"markdown","value":"A class to make it easier to handle and pass around IP addresses"},"sortText":"3ff8a156IPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"IPAddress"}},{"label":" LookaheadMode","kind":13,"documentation":{"kind":"markdown","value":"This enumeration provides the lookahead options for parseInt(), parseFloat() The rules set out here are used until either the first valid character is found or a time out occurs due to lack of input."},"sortText":"3ff8a156LookaheadMode","filterText":"LookaheadMode","insertText":"LookaheadMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"LookaheadMode"}},{"label":" String","kind":7,"documentation":{"kind":"markdown","value":"The string class"},"sortText":"3ff8a156String","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"String"}},{"label":" operator==(const String \u0026a, const char *b)","kind":3,"detail":"bool","sortText":"3ff8a156operator==","filterText":"operator==","insertText":"operator==(${1:const String \u0026a}, ${2:const char *b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"operator==(${1:const String \u0026a}, ${2:const char *b})"}},{"label":" pinMode(pin_size_t pinNumber, int mode)","kind":3,"detail":"void","sortText":"3ff8a156pinMode","filterText":"pinMode","insertText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"pinMode(${1:pin_size_t pinNumber}, ${2:int mode})"}},{"label":" LEDBLUE","kind":1,"sortText":"40400000LEDBLUE","filterText":"LEDBLUE","insertText":"LEDBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"LEDBLUE"}},{"label":" LEDGREEN","kind":1,"sortText":"40400000LEDGREEN","filterText":"LEDGREEN","insertText":"LEDGREEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"LEDGREEN"}},{"label":" loop()","kind":3,"detail":"void","sortText":"404a3370loop","filterText":"loop","insertText":"loop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"loop()"}},{"label":" setup()","kind":3,"detail":"void","sortText":"404a3370setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"setup()"}},{"label":" DNSClient","kind":7,"sortText":"405d8e68DNSClient","filterText":"DNSClient","insertText":"DNSClient","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"DNSClient"}},{"label":" DhcpClass","kind":7,"sortText":"405d8e68DhcpClass","filterText":"DhcpClass","insertText":"DhcpClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"DhcpClass"}},{"label":" EthernetClass","kind":7,"documentation":{"kind":"markdown","value":"forward declarations of global name space friend classes"},"sortText":"405d8e68EthernetClass","filterText":"EthernetClass","insertText":"EthernetClass","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"EthernetClass"}},{"label":" LEDR","kind":6,"detail":"NinaPin","sortText":"405d8e68LEDR","filterText":"LEDR","insertText":"LEDR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"LEDR"}},{"label":" g_APinDescription","kind":6,"detail":"PinDescription []","documentation":{"kind":"markdown","value":"Pins table to be instantiated into variant.cpp"},"sortText":"405d8e68g_APinDescription","filterText":"g_APinDescription","insertText":"g_APinDescription","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"g_APinDescription"}},{"label":" memcpy(void *, const void *, size_t)","kind":3,"detail":"void *","sortText":"405d8e68memcpy","filterText":"memcpy","insertText":"memcpy(${1:void *}, ${2:const void *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"memcpy(${1:void *}, ${2:const void *}, ${3:size_t})"}},{"label":" millis()","kind":3,"detail":"unsigned long","sortText":"405d8e68millis","filterText":"millis","insertText":"millis()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"millis()"}},{"label":" min(const T \u0026a, const L \u0026b)","kind":3,"detail":"decltype((b \u003c a) ? b : a)","sortText":"405d8e68min","filterText":"min","insertText":"min(${1:const T \u0026a}, ${2:const L \u0026b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"min(${1:const T \u0026a}, ${2:const L \u0026b})"}},{"label":" p22","kind":20,"detail":"PinName","sortText":"405d8e68p22","filterText":"p22","insertText":"p22","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"p22"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","sortText":"405d8e68strlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"strlen(${1:const char *})"}},{"label":" uint32_t","kind":8,"sortText":"4066fdf7uint32_t","filterText":"uint32_t","insertText":"uint32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"uint32_t"}},{"label":" uint8_t","kind":8,"sortText":"4066fdf7uint8_t","filterText":"uint8_t","insertText":"uint8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"uint8_t"}},{"label":" PluggableUSBD()","kind":3,"detail":"arduino::PluggableUSBDevice \u0026","sortText":"406a7657PluggableUSBD","filterText":"PluggableUSBD","insertText":"PluggableUSBD()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"PluggableUSBD()"}},{"label":" IPAddress","kind":18,"sortText":"406c52eaIPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"IPAddress"}},{"label":" srand","kind":18,"sortText":"406c52easrand","filterText":"srand","insertText":"srand","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"srand"}},{"label":" clearerr(FILE *)","kind":3,"detail":"void","sortText":"4071b066clearerr","filterText":"clearerr","insertText":"clearerr(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"clearerr(${1:FILE *})"}},{"label":" imaxabs(intmax_t j)","kind":3,"detail":"intmax_t","sortText":"4071b066imaxabs","filterText":"imaxabs","insertText":"imaxabs(${1:intmax_t j})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"imaxabs(${1:intmax_t j})"}},{"label":" isprint(int __c)","kind":3,"detail":"int","sortText":"4071b066isprint","filterText":"isprint","insertText":"isprint(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"isprint(${1:int __c})"}},{"label":" rewind(FILE *)","kind":3,"detail":"void","sortText":"4071b066rewind","filterText":"rewind","insertText":"rewind(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"rewind(${1:FILE *})"}},{"label":" wcstoimax(const wchar_t *, wchar_t **, int)","kind":3,"detail":"intmax_t","sortText":"4071b066wcstoimax","filterText":"wcstoimax","insertText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":" core_util_atomic_cas_explicit_ptr(void *volatile *ptr, void **expectedCurrentValue, void *desiredValue, mbed_memory_order success, mbed_memory_order failure)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"\\\\copydoc core_util_atomic_cas_explicit_u8"},"sortText":"40791bfccore_util_atomic_cas_explicit_ptr","filterText":"core_util_atomic_cas_explicit_ptr","insertText":"core_util_atomic_cas_explicit_ptr(${1:void *volatile *ptr}, ${2:void **expectedCurrentValue}, ${3:void *desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"core_util_atomic_cas_explicit_ptr(${1:void *volatile *ptr}, ${2:void **expectedCurrentValue}, ${3:void *desiredValue}, ${4:mbed_memory_order success}, ${5:mbed_memory_order failure})"}},{"label":" core_util_atomic_cas_u16(volatile uint16_t *ptr, uint16_t *expectedCurrentValue, uint16_t desiredValue)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"\\\\copydoc core_util_atomic_cas_u8"},"sortText":"40791bfccore_util_atomic_cas_u16","filterText":"core_util_atomic_cas_u16","insertText":"core_util_atomic_cas_u16(${1:volatile uint16_t *ptr}, ${2:uint16_t *expectedCurrentValue}, ${3:uint16_t desiredValue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"core_util_atomic_cas_u16(${1:volatile uint16_t *ptr}, ${2:uint16_t *expectedCurrentValue}, ${3:uint16_t desiredValue})"}},{"label":" core_util_atomic_exchange_explicit_s16(volatile int16_t *valuePtr, int16_t desiredValue, mbed_memory_order order)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"\\\\copydoc core_util_atomic_exchange_explicit_u8"},"sortText":"40791bfccore_util_atomic_exchange_explicit_s16","filterText":"core_util_atomic_exchange_explicit_s16","insertText":"core_util_atomic_exchange_explicit_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t desiredValue}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"core_util_atomic_exchange_explicit_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t desiredValue}, ${3:mbed_memory_order order})"}},{"label":" core_util_atomic_incr_s16(volatile int16_t *valuePtr, int16_t delta)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"\\\\copydoc core_util_atomic_incr_u8"},"sortText":"40791bfccore_util_atomic_incr_s16","filterText":"core_util_atomic_incr_s16","insertText":"core_util_atomic_incr_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t delta})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"core_util_atomic_incr_s16(${1:volatile int16_t *valuePtr}, ${2:int16_t delta})"}},{"label":" core_util_atomic_store_explicit_u16(volatile uint16_t *valuePtr, uint16_t desiredValue, mbed_memory_order order)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\copydoc core_util_atomic_store_explicit_u8"},"sortText":"40791bfccore_util_atomic_store_explicit_u16","filterText":"core_util_atomic_store_explicit_u16","insertText":"core_util_atomic_store_explicit_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t desiredValue}, ${3:mbed_memory_order order})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"core_util_atomic_store_explicit_u16(${1:volatile uint16_t *valuePtr}, ${2:uint16_t desiredValue}, ${3:mbed_memory_order order})"}},{"label":" erfl(long double)","kind":3,"detail":"long double","sortText":"40791bfcerfl","filterText":"erfl","insertText":"erfl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"erfl(${1:long double})"}},{"label":" exp2l(long double)","kind":3,"detail":"long double","sortText":"40791bfcexp2l","filterText":"exp2l","insertText":"exp2l(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"exp2l(${1:long double})"}},{"label":" hypot(double, double)","kind":3,"detail":"double","sortText":"40791bfchypot","filterText":"hypot","insertText":"hypot(${1:double}, ${2:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"hypot(${1:double}, ${2:double})"}},{"label":" lgammal(long double)","kind":3,"detail":"long double","sortText":"40791bfclgammal","filterText":"lgammal","insertText":"lgammal(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"lgammal(${1:long double})"}},{"label":" mbed_assert_internal(const char *expr, const char *file, int line)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Internal mbed assert function which is invoked when MBED_ASSERT macro fails.  \nThis function is active only if NDEBUG is not defined prior to including this assert header file.  \nIn case of MBED_ASSERT failing condition, error() is called with the assertation message.  \n@param expr Expression to be checked.  \n@param file File where assertation failed.  \n@param line Failing assertation line number."},"sortText":"40791bfcmbed_assert_internal","filterText":"mbed_assert_internal","insertText":"mbed_assert_internal(${1:const char *expr}, ${2:const char *file}, ${3:int line})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"mbed_assert_internal(${1:const char *expr}, ${2:const char *file}, ${3:int line})"}},{"label":" nearbyint(double)","kind":3,"detail":"double","sortText":"40791bfcnearbyint","filterText":"nearbyint","insertText":"nearbyint(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"nearbyint(${1:double})"}},{"label":" scalbln(double, long)","kind":3,"detail":"double","sortText":"40791bfcscalbln","filterText":"scalbln","insertText":"scalbln(${1:double}, ${2:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"scalbln(${1:double}, ${2:long})"}},{"label":" srand(unsigned int __seed)","kind":3,"detail":"void","sortText":"40791bfcsrand","filterText":"srand","insertText":"srand(${1:unsigned int __seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"srand(${1:unsigned int __seed})"}},{"label":" truncf(float)","kind":3,"detail":"float","sortText":"40791bfctruncf","filterText":"truncf","insertText":"truncf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"truncf(${1:float})"}},{"label":" wctomb(char *, wchar_t)","kind":3,"detail":"int","sortText":"40791bfcwctomb","filterText":"wctomb","insertText":"wctomb(${1:char *}, ${2:wchar_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"wctomb(${1:char *}, ${2:wchar_t})"}},{"label":"•mkfifo(const char *__path, mode_t __mode)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/stat.h\u003e`"},"sortText":"407f2f3bmkfifo","filterText":"mkfifo","insertText":"mkfifo(${1:const char *__path}, ${2:mode_t __mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"newText":"mkfifo(${1:const char *__path}, ${2:mode_t __mode})"}}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":473}}}
>>>
Content-Length: 791

{"id":3,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":23,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":23,"character":5},"end":{"line":23,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1351

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":15,"character":7},"end":{"line":15,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":15,"character":32},"end":{"line":15,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 791

{"id":4,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":23,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":23,"character":5},"end":{"line":23,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 791

{"id":5,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":23,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":23,"character":5},"end":{"line":23,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 791

{"id":6,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":23,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":23,"character":5},"end":{"line":23,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 791

{"id":7,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":23,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":23,"character":5},"end":{"line":23,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 791

{"id":8,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":23,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":23,"character":5},"end":{"line":23,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 791

{"id":9,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":23,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":23,"character":5},"end":{"line":23,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":10,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":23,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":23,"character":5},"end":{"line":23,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":11,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":23,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":23,"character":5},"end":{"line":23,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":12,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":21,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":23,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":23,"character":5},"end":{"line":23,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 1076

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":12,"character":2},"end":{"line":19,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":16}},"message":"Use of undeclared identifier 'digitalWrite'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":15,"character":7},"end":{"line":15,"character":18}},"message":"Use of undeclared identifier 'digitalRead'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":15,"character":32},"end":{"line":15,"character":35}},"message":"Use of undeclared identifier 'LOW'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":9}},"message":"Use of undeclared identifier 'delay'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 395

{"id":13,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server733079971/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":19,"character":2},"end":{"line":26,"character":3}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 1076

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":12,"character":2},"end":{"line":19,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":16}},"message":"Use of undeclared identifier 'digitalWrite'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":15,"character":7},"end":{"line":15,"character":18}},"message":"Use of undeclared identifier 'digitalRead'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":15,"character":32},"end":{"line":15,"character":35}},"message":"Use of undeclared identifier 'LOW'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":9}},"message":"Use of undeclared identifier 'delay'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 395

{"id":14,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server733079971/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":19,"character":2},"end":{"line":26,"character":3}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 1076

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":12,"character":2},"end":{"line":19,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":16}},"message":"Use of undeclared identifier 'digitalWrite'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":15,"character":7},"end":{"line":15,"character":18}},"message":"Use of undeclared identifier 'digitalRead'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":15,"character":32},"end":{"line":15,"character":35}},"message":"Use of undeclared identifier 'LOW'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":9}},"message":"Use of undeclared identifier 'delay'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 395

{"id":15,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server733079971/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":19,"character":2},"end":{"line":26,"character":3}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 250

{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":33}}}
>>>
Content-Length: 39

{"id":16,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":9,"character":27},"end":{"line":9,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 349

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":474},"contentChanges":[{"range":{"start":{"line":9,"character":27},"end":{"line":9,"character":27}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 221

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":18,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1351

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":475},"contentChanges":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":2}},"rangeLength":0,"text":"p"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":19,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":20,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 1519

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'p'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}Content-Length: 37158

{"id":20,"result":{"isIncomplete":true,"items":[{"label":" pinMode(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\* FUNCTION DECLARATION  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*"},"sortText":"405dc948pinMode","filterText":"pinMode","insertText":"pinMode($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pinMode($0)"}},{"label":" pwm_clkdiv_mode","kind":13,"documentation":{"kind":"markdown","value":"\\\\brief PWM Divider mode settings  \n\\\\ingroup hardware_pwm"},"sortText":"4066421cpwm_clkdiv_mode","filterText":"pwm_clkdiv_mode","insertText":"pwm_clkdiv_mode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_clkdiv_mode"}},{"label":" pwm_set_output_polarity(uint slice_num, bool a, bool b)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Set PWM output polarity  \n\\\\ingroup hardware_pwm  \n\\\\param slice_num PWM slice number  \n\\\\param a true to invert output A  \n\\\\param b true to invert output B"},"sortText":"4066421cpwm_set_output_polarity","filterText":"pwm_set_output_polarity","insertText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})"}},{"label":" arduino::pinMode(pin_size_t pinNumber, int mode)","kind":3,"detail":"void","sortText":"407a5ae6pinMode","filterText":"pinMode","insertText":"arduino::pinMode(${1:pin_size_t pinNumber}, ${2:int mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"arduino::pinMode(${1:pin_size_t pinNumber}, ${2:int mode})"}},{"label":" PluggableUSBD()","kind":3,"detail":"arduino::PluggableUSBDevice \u0026","sortText":"40898272PluggableUSBD","filterText":"PluggableUSBD","insertText":"PluggableUSBD()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PluggableUSBD()"}},{"label":" PINCOUNT_fn()","kind":3,"detail":"unsigned int","sortText":"40a7b70bPINCOUNT_fn","filterText":"PINCOUNT_fn","insertText":"PINCOUNT_fn()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PINCOUNT_fn()"}},{"label":" PullNone","kind":20,"detail":"PinMode","sortText":"40a7b70bPullNone","filterText":"PullNone","insertText":"PullNone","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PullNone"}},{"label":" PushPullNoPull","kind":20,"detail":"PinMode","sortText":"40a7b70bPushPullNoPull","filterText":"PushPullNoPull","insertText":"PushPullNoPull","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PushPullNoPull"}},{"label":" PushPullPullDown","kind":20,"detail":"PinMode","sortText":"40a7b70bPushPullPullDown","filterText":"PushPullPullDown","insertText":"PushPullPullDown","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PushPullPullDown"}},{"label":" PushPullPullUp","kind":20,"detail":"PinMode","sortText":"40a7b70bPushPullPullUp","filterText":"PushPullPullUp","insertText":"PushPullPullUp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PushPullPullUp"}},{"label":" perror(const char *)","kind":3,"detail":"void","sortText":"40a7b70bperror","filterText":"perror","insertText":"perror(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"perror(${1:const char *})"}},{"label":" posix_memalign(void **, size_t, size_t)","kind":3,"detail":"int","sortText":"40a7b70bposix_memalign","filterText":"posix_memalign","insertText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"posix_memalign(${1:void **}, ${2:size_t}, ${3:size_t})"}},{"label":" powf(float, float)","kind":3,"detail":"float","sortText":"40a7b70bpowf","filterText":"powf","insertText":"powf(${1:float}, ${2:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"powf(${1:float}, ${2:float})"}},{"label":" putc(int, FILE *)","kind":3,"detail":"int","sortText":"40a7b70bputc","filterText":"putc","insertText":"putc(${1:int}, ${2:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"putc(${1:int}, ${2:FILE *})"}},{"label":" putc_unlocked(int, FILE *)","kind":3,"detail":"int","sortText":"40a7b70bputc_unlocked","filterText":"putc_unlocked","insertText":"putc_unlocked(${1:int}, ${2:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"putc_unlocked(${1:int}, ${2:FILE *})"}},{"label":" puts(const char *)","kind":3,"detail":"int","sortText":"40a7b70bputs","filterText":"puts","insertText":"puts(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"puts(${1:const char *})"}},{"label":" putw(int, FILE *)","kind":3,"detail":"int","sortText":"40a7b70bputw","filterText":"putw","insertText":"putw(${1:int}, ${2:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"putw(${1:int}, ${2:FILE *})"}},{"label":" arduino::Print","kind":7,"sortText":"40a91c10Print","filterText":"Print","insertText":"arduino::Print","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"arduino::Print"}},{"label":" PinStatus","kind":8,"sortText":"40aa2b09PinStatus","filterText":"PinStatus","insertText":"PinStatus","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PinStatus"}},{"label":" PluggableUSB()","kind":3,"detail":"arduino::PluggableUSB_ \u0026","documentation":{"kind":"markdown","value":"Replacement for global singleton.  \nThis function prevents static-initialization-order-fiasco https://isocpp.org/wiki/faq/ctors#static-init-order-on-first-use"},"sortText":"40aa2b09PluggableUSB","filterText":"PluggableUSB","insertText":"PluggableUSB()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PluggableUSB()"}},{"label":" pin_size_t","kind":8,"sortText":"40aa2b09pin_size_t","filterText":"pin_size_t","insertText":"pin_size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pin_size_t"}},{"label":"•pselect(int __n, _types_fd_set *__readfds, _types_fd_set *__writefds, _types_fd_set *__exceptfds, const struct timespec *__timeout, const sigset_t *__set)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\u003csys/select.h\u003e`"},"sortText":"40aa2b09pselect","filterText":"pselect","insertText":"pselect(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:const struct timespec *__timeout}, ${6:const sigset_t *__set})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pselect(${1:int __n}, ${2:_types_fd_set *__readfds}, ${3:_types_fd_set *__writefds}, ${4:_types_fd_set *__exceptfds}, ${5:const struct timespec *__timeout}, ${6:const sigset_t *__set})"}},{"label":" pthread_attr_t","kind":8,"sortText":"40aa2b09pthread_attr_t","filterText":"pthread_attr_t","insertText":"pthread_attr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pthread_attr_t"}},{"label":" pthread_key_t","kind":8,"documentation":{"kind":"markdown","value":"Keys"},"sortText":"40aa2b09pthread_key_t","filterText":"pthread_key_t","insertText":"pthread_key_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pthread_key_t"}},{"label":" pthread_mutex_t","kind":8,"sortText":"40aa2b09pthread_mutex_t","filterText":"pthread_mutex_t","insertText":"pthread_mutex_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pthread_mutex_t"}},{"label":" pthread_mutexattr_t","kind":8,"sortText":"40aa2b09pthread_mutexattr_t","filterText":"pthread_mutexattr_t","insertText":"pthread_mutexattr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pthread_mutexattr_t"}},{"label":" pthread_once_t","kind":8,"sortText":"40aa2b09pthread_once_t","filterText":"pthread_once_t","insertText":"pthread_once_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pthread_once_t"}},{"label":" pulseIn(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","sortText":"40aa2b09pulseIn","filterText":"pulseIn","insertText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pulseIn(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":" pulseInLong(pin_size_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","sortText":"40aa2b09pulseInLong","filterText":"pulseInLong","insertText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pulseInLong(${1:pin_size_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":" prog_char","kind":8,"sortText":"40add229prog_char","filterText":"prog_char","insertText":"prog_char","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"prog_char"}},{"label":" prog_int16_t","kind":8,"sortText":"40add229prog_int16_t","filterText":"prog_int16_t","insertText":"prog_int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"prog_int16_t"}},{"label":" prog_int32_t","kind":8,"sortText":"40add229prog_int32_t","filterText":"prog_int32_t","insertText":"prog_int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"prog_int32_t"}},{"label":" prog_int64_t","kind":8,"sortText":"40add229prog_int64_t","filterText":"prog_int64_t","insertText":"prog_int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"prog_int64_t"}},{"label":" prog_int8_t","kind":8,"sortText":"40add229prog_int8_t","filterText":"prog_int8_t","insertText":"prog_int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"prog_int8_t"}},{"label":" prog_uchar","kind":8,"sortText":"40add229prog_uchar","filterText":"prog_uchar","insertText":"prog_uchar","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"prog_uchar"}},{"label":" prog_uint16_t","kind":8,"sortText":"40add229prog_uint16_t","filterText":"prog_uint16_t","insertText":"prog_uint16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"prog_uint16_t"}},{"label":" prog_uint32_t","kind":8,"sortText":"40add229prog_uint32_t","filterText":"prog_uint32_t","insertText":"prog_uint32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"prog_uint32_t"}},{"label":" prog_uint64_t","kind":8,"sortText":"40add229prog_uint64_t","filterText":"prog_uint64_t","insertText":"prog_uint64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"prog_uint64_t"}},{"label":" prog_uint8_t","kind":8,"sortText":"40add229prog_uint8_t","filterText":"prog_uint8_t","insertText":"prog_uint8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"prog_uint8_t"}},{"label":" prog_void","kind":8,"sortText":"40add229prog_void","filterText":"prog_void","insertText":"prog_void","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"prog_void"}},{"label":" PIN_INPUT","kind":20,"detail":"PinDirection","sortText":"40af2acfPIN_INPUT","filterText":"PIN_INPUT","insertText":"PIN_INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PIN_INPUT"}},{"label":" PWM_1","kind":20,"detail":"PWMName","sortText":"40af2acfPWM_1","filterText":"PWM_1","insertText":"PWM_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PWM_1"}},{"label":" PWM_4","kind":20,"detail":"PWMName","sortText":"40af2acfPWM_4","filterText":"PWM_4","insertText":"PWM_4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PWM_4"}},{"label":" PWM_5","kind":20,"detail":"PWMName","sortText":"40af2acfPWM_5","filterText":"PWM_5","insertText":"PWM_5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PWM_5"}},{"label":" PinList","kind":8,"sortText":"40af2acfPinList","filterText":"PinList","insertText":"PinList","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PinList"}},{"label":" PlatformMutex","kind":8,"sortText":"40af2acfPlatformMutex","filterText":"PlatformMutex","insertText":"PlatformMutex","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PlatformMutex"}},{"label":" Port0","kind":20,"detail":"PortName","sortText":"40af2acfPort0","filterText":"Port0","insertText":"Port0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"Port0"}},{"label":" PortName","kind":8,"sortText":"40af2acfPortName","filterText":"PortName","insertText":"PortName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PortName"}},{"label":" pin_function(PinName pin, int function)","kind":3,"detail":"void","sortText":"40af2acfpin_function","filterText":"pin_function","insertText":"pin_function(${1:PinName pin}, ${2:int function})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pin_function(${1:PinName pin}, ${2:int function})"}},{"label":" pinmap_find_function(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","sortText":"40af2acfpinmap_find_function","filterText":"pinmap_find_function","insertText":"pinmap_find_function(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pinmap_find_function(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":" pinmap_list_has_pin(const PinList *list, PinName pin)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"Check if the pin is in the list  \n@param list pin list to check  \n@param pin pin to check for in the list  \n@return true if the pin is in the list, false otherwise"},"sortText":"40af2acfpinmap_list_has_pin","filterText":"pinmap_list_has_pin","insertText":"pinmap_list_has_pin(${1:const PinList *list}, ${2:PinName pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pinmap_list_has_pin(${1:const PinList *list}, ${2:PinName pin})"}},{"label":" pwmout_free(pwmout_t *obj)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Deinitialize the pwmout object  \n@param obj The pwmout object"},"sortText":"40af2acfpwmout_free","filterText":"pwmout_free","insertText":"pwmout_free(${1:pwmout_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwmout_free(${1:pwmout_t *obj})"}},{"label":" pwmout_period_ms(pwmout_t *obj, int ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the PWM period specified in miliseconds, keeping the duty cycle the same  \n@param obj The pwmout object  \n@param ms The milisecond period"},"sortText":"40af2acfpwmout_period_ms","filterText":"pwmout_period_ms","insertText":"pwmout_period_ms(${1:pwmout_t *obj}, ${2:int ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwmout_period_ms(${1:pwmout_t *obj}, ${2:int ms})"}},{"label":" pwmout_period_us(pwmout_t *obj, int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the PWM period specified in microseconds, keeping the duty cycle the same  \n@param obj The pwmout object  \n@param us The microsecond period"},"sortText":"40af2acfpwmout_period_us","filterText":"pwmout_period_us","insertText":"pwmout_period_us(${1:pwmout_t *obj}, ${2:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwmout_period_us(${1:pwmout_t *obj}, ${2:int us})"}},{"label":" pwmout_pulsewidth(pwmout_t *obj, float seconds)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the PWM pulsewidth specified in seconds, keeping the period the same.  \n@param obj The pwmout object  \n@param seconds The floating-point pulsewidth in seconds"},"sortText":"40af2acfpwmout_pulsewidth","filterText":"pwmout_pulsewidth","insertText":"pwmout_pulsewidth(${1:pwmout_t *obj}, ${2:float seconds})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwmout_pulsewidth(${1:pwmout_t *obj}, ${2:float seconds})"}},{"label":" pwmout_pulsewidth_us(pwmout_t *obj, int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Set the PWM pulsewidth specified in microseconds, keeping the period the same.  \n@param obj The pwmout object  \n@param us The floating-point pulsewidth in microseconds"},"sortText":"40af2acfpwmout_pulsewidth_us","filterText":"pwmout_pulsewidth_us","insertText":"pwmout_pulsewidth_us(${1:pwmout_t *obj}, ${2:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwmout_pulsewidth_us(${1:pwmout_t *obj}, ${2:int us})"}},{"label":" pwmout_read(pwmout_t *obj)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"Read the current float-point output duty-cycle  \n@param obj The pwmout object  \n@return A floating-point output duty-cycle"},"sortText":"40af2acfpwmout_read","filterText":"pwmout_read","insertText":"pwmout_read(${1:pwmout_t *obj})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwmout_read(${1:pwmout_t *obj})"}},{"label":" pwmout_t","kind":8,"documentation":{"kind":"markdown","value":"Pwmout hal structure. pwmout_s is declared in the target's hal"},"sortText":"40af2acfpwmout_t","filterText":"pwmout_t","insertText":"pwmout_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwmout_t"}},{"label":" PinName","kind":8,"sortText":"40b044fcPinName","filterText":"PinName","insertText":"PinName","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PinName"}},{"label":" p13","kind":20,"detail":"PinName","sortText":"40b044fcp13","filterText":"p13","insertText":"p13","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p13"}},{"label":" p14","kind":20,"detail":"PinName","sortText":"40b044fcp14","filterText":"p14","insertText":"p14","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p14"}},{"label":" p15","kind":20,"detail":"PinName","sortText":"40b044fcp15","filterText":"p15","insertText":"p15","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p15"}},{"label":" p2","kind":20,"detail":"PinName","sortText":"40b044fcp2","filterText":"p2","insertText":"p2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p2"}},{"label":" p20","kind":20,"detail":"PinName","sortText":"40b044fcp20","filterText":"p20","insertText":"p20","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p20"}},{"label":" p24","kind":20,"detail":"PinName","sortText":"40b044fcp24","filterText":"p24","insertText":"p24","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p24"}},{"label":" p27","kind":20,"detail":"PinName","sortText":"40b044fcp27","filterText":"p27","insertText":"p27","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p27"}},{"label":" p28","kind":20,"detail":"PinName","sortText":"40b044fcp28","filterText":"p28","insertText":"p28","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p28"}},{"label":" p3","kind":20,"detail":"PinName","sortText":"40b044fcp3","filterText":"p3","insertText":"p3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p3"}},{"label":" p5","kind":20,"detail":"PinName","sortText":"40b044fcp5","filterText":"p5","insertText":"p5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p5"}},{"label":" p6","kind":20,"detail":"PinName","sortText":"40b044fcp6","filterText":"p6","insertText":"p6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p6"}},{"label":" p7","kind":20,"detail":"PinName","sortText":"40b044fcp7","filterText":"p7","insertText":"p7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p7"}},{"label":" p8","kind":20,"detail":"PinName","sortText":"40b044fcp8","filterText":"p8","insertText":"p8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p8"}},{"label":" p9","kind":20,"detail":"PinName","sortText":"40b044fcp9","filterText":"p9","insertText":"p9","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"p9"}},{"label":" arduino::PluggableUSBDevice","kind":7,"documentation":{"kind":"markdown","value":"forward declaration"},"sortText":"40b2975fPluggableUSBDevice","filterText":"PluggableUSBDevice","insertText":"arduino::PluggableUSBDevice","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"arduino::PluggableUSBDevice"}},{"label":" PICO_ERROR_NONE","kind":20,"detail":"enum \u003canonymous\u003e","sortText":"40b302d1PICO_ERROR_NONE","filterText":"PICO_ERROR_NONE","insertText":"PICO_ERROR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PICO_ERROR_NONE"}},{"label":" PWM_CHAN_B","kind":20,"detail":"pwm_chan","sortText":"40b302d1PWM_CHAN_B","filterText":"PWM_CHAN_B","insertText":"PWM_CHAN_B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PWM_CHAN_B"}},{"label":" PWM_DIV_B_HIGH","kind":20,"detail":"pwm_clkdiv_mode","documentation":{"kind":"markdown","value":"Fractional divider is gated by the PWM B pin"},"sortText":"40b302d1PWM_DIV_B_HIGH","filterText":"PWM_DIV_B_HIGH","insertText":"PWM_DIV_B_HIGH","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"PWM_DIV_B_HIGH"}},{"label":" panic(const char *fmt, ...)","kind":3,"detail":"void","sortText":"40b302d1panic","filterText":"panic","insertText":"panic(${1:const char *fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"panic(${1:const char *fmt, ...})"}},{"label":" panic_unsupported()","kind":3,"detail":"void","sortText":"40b302d1panic_unsupported","filterText":"panic_unsupported","insertText":"panic_unsupported()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"panic_unsupported()"}},{"label":" pwm_config_set_clkdiv(pwm_config *c, float div)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Set clock divider in a PWM configuration  \n\\\\ingroup hardware_pwm  \n\\\\param c PWM configuration struct to modify  \n\\\\param div Value to divide counting rate by. Must be greater than or equal to 1.  \nIf the divide mode is free-running, the PWM counter runs at clk_sys / div.  \nOtherwise, the divider reduces the rate of events seen on the B pin input (level or edge) before passing them on to the PWM counter."},"sortText":"40b302d1pwm_config_set_clkdiv","filterText":"pwm_config_set_clkdiv","insertText":"pwm_config_set_clkdiv(${1:pwm_config *c}, ${2:float div})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_config_set_clkdiv(${1:pwm_config *c}, ${2:float div})"}},{"label":" pwm_config_set_wrap(pwm_config *c, uint16_t wrap)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Set PWM counter wrap value in a PWM configuration  \n\\\\ingroup hardware_pwm  \nSet the highest value the counter will reach before returning to 0. Also known as TOP.  \n\\\\param c PWM configuration struct to modify  \n\\\\param wrap Value to set wrap to"},"sortText":"40b302d1pwm_config_set_wrap","filterText":"pwm_config_set_wrap","insertText":"pwm_config_set_wrap(${1:pwm_config *c}, ${2:uint16_t wrap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_config_set_wrap(${1:pwm_config *c}, ${2:uint16_t wrap})"}},{"label":" pwm_get_counter(uint slice_num)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"\\\\brief Get PWM counter  \n\\\\ingroup hardware_pwm  \nGet current value of PWM counter  \n\\\\param slice_num PWM slice number  \n\\\\return Current value of PWM counter"},"sortText":"40b302d1pwm_get_counter","filterText":"pwm_get_counter","insertText":"pwm_get_counter(${1:uint slice_num})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_get_counter(${1:uint slice_num})"}},{"label":" pwm_get_default_config()","kind":3,"detail":"pwm_config","documentation":{"kind":"markdown","value":"\\\\brief Get a set of default values for PWM configuration  \n\\\\ingroup hardware_pwm  \nPWM config is free running at system clock speed, no phase correction, wrapping at 0xffff,  \nwith standard polarities for channels A and B.  \n\\\\return Set of default values."},"sortText":"40b302d1pwm_get_default_config","filterText":"pwm_get_default_config","insertText":"pwm_get_default_config()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_get_default_config()"}},{"label":" pwm_get_irq_status_mask()","kind":3,"detail":"int32_t","documentation":{"kind":"markdown","value":"\\\\brief Get PWM interrupt status, raw  \n\\\\ingroup hardware_pwm  \n\\\\return Bitmask of all PWM interrupts currently set"},"sortText":"40b302d1pwm_get_irq_status_mask","filterText":"pwm_get_irq_status_mask","insertText":"pwm_get_irq_status_mask()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_get_irq_status_mask()"}},{"label":" pwm_gpio_to_channel(uint gpio)","kind":3,"detail":"uint","documentation":{"kind":"markdown","value":"\\\\brief Determine the PWM channel that is attached to the specified GPIO.  \n\\\\ingroup hardware_pwm  \nEach slice 0 to 7 has two channels, A and B.  \n\\\\return The PWM channel that controls the specified GPIO."},"sortText":"40b302d1pwm_gpio_to_channel","filterText":"pwm_gpio_to_channel","insertText":"pwm_gpio_to_channel(${1:uint gpio})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_gpio_to_channel(${1:uint gpio})"}},{"label":" pwm_set_both_levels(uint slice_num, uint16_t level_a, uint16_t level_b)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Set PWM counter compare values  \n\\\\ingroup hardware_pwm  \nSet the value of the PWM counter compare values, A and B  \n\\\\param slice_num PWM slice number  \n\\\\param level_a Value to set compare A to. When the counter reaches this value the A output is deasserted  \n\\\\param level_b Value to set compare B to. When the counter reaches this value the B output is deasserted"},"sortText":"40b302d1pwm_set_both_levels","filterText":"pwm_set_both_levels","insertText":"pwm_set_both_levels(${1:uint slice_num}, ${2:uint16_t level_a}, ${3:uint16_t level_b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_set_both_levels(${1:uint slice_num}, ${2:uint16_t level_a}, ${3:uint16_t level_b})"}},{"label":" pwm_set_mask_enabled(uint32_t mask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Enable/Disable multiple PWM slices simultaneously  \n\\\\ingroup hardware_pwm  \n\\\\param mask Bitmap of PWMs to enable/disable. Bits 0 to 7 enable slices 0-7 respectively"},"sortText":"40b302d1pwm_set_mask_enabled","filterText":"pwm_set_mask_enabled","insertText":"pwm_set_mask_enabled(${1:uint32_t mask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_set_mask_enabled(${1:uint32_t mask})"}},{"label":" pwm_set_phase_correct(uint slice_num, bool phase_correct)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Set PWM phase correct on/off  \n\\\\ingroup hardware_pwm  \n\\\\param slice_num PWM slice number  \n\\\\param phase_correct true to set phase correct modulation, false to set trailing edge  \nSetting phase control to true means that instead of wrapping back to zero when the wrap point is reached,  \nthe PWM starts counting back down. The output frequency is halved when phase-correct mode is enabled."},"sortText":"40b302d1pwm_set_phase_correct","filterText":"pwm_set_phase_correct","insertText":"pwm_set_phase_correct(${1:uint slice_num}, ${2:bool phase_correct})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_set_phase_correct(${1:uint slice_num}, ${2:bool phase_correct})"}},{"label":" pwm_slice_hw","kind":22,"sortText":"40b36a9fpwm_slice_hw","filterText":"pwm_slice_hw","insertText":"pwm_slice_hw","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"pwm_slice_hw"}},{"label":" arduino::internal::PluggableUSBModule","kind":7,"sortText":"40b40133PluggableUSBModule","filterText":"PluggableUSBModule","insertText":"arduino::internal::PluggableUSBModule","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"arduino::internal::PluggableUSBModule"}},{"label":" arduino::PluggableUSBModule","kind":7,"sortText":"40cdce88PluggableUSBModule","filterText":"PluggableUSBModule","insertText":"arduino::PluggableUSBModule","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"arduino::PluggableUSBModule"}},{"label":" arduino::PluggableUSB_","kind":7,"sortText":"40cdce88PluggableUSB_","filterText":"PluggableUSB_","insertText":"arduino::PluggableUSB_","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"arduino::PluggableUSB_"}},{"label":" arduino::Printable","kind":7,"documentation":{"kind":"markdown","value":"The Printable class provides a way for new classes to allow themselves to be printed.  \nBy deriving from Printable and implementing the printTo method, it will then be possible for users to print out instances of this class by passing them into the usual Print::print and Print::println methods."},"sortText":"40cdce88Printable","filterText":"Printable","insertText":"arduino::Printable","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"arduino::Printable"}},{"label":"•std::pow(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7affpow","filterText":"pow","insertText":"std::pow($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"std::pow($0)"}},{"label":"•std::prev(_BidirectionalIterator __x, typename iterator_traits\u003c_BidirectionalIterator\u003e::difference_type __n = 1)","kind":3,"detail":"_BidirectionalIterator","documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`"},"sortText":"40d0d9cdprev","filterText":"prev","insertText":"std::prev(${1:_BidirectionalIterator __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"std::prev(${1:_BidirectionalIterator __x})"}},{"label":" mbed::PwmOut","kind":7,"documentation":{"kind":"markdown","value":"A pulse-width modulation digital output  \n@note Synchronization level: Interrupt safe  \nExample  \n@code // Gradually change the intensity of the LED.  \n#include \"mbed.h\"  \nPwmOut led(LED1);  \nint main() { while(1) { led = led + 0.01;  \nThisThread::sleep_for(200);  \nif(led == 1.0) { led = 0;  \n} } }  \n@endcode"},"sortText":"40d1f902PwmOut","filterText":"PwmOut","insertText":"mbed::PwmOut","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"mbed::PwmOut"}},{"label":"•std::ptrdiff_t","kind":8,"documentation":{"kind":"markdown","value":"From `\u003ccstddef\u003e`"},"sortText":"40d1f902ptrdiff_t","filterText":"ptrdiff_t","insertText":"std::ptrdiff_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"std::ptrdiff_t"}},{"label":"•std::perror","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40df8717perror","filterText":"perror","insertText":"std::perror","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"std::perror"}},{"label":"•std::pow","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717pow","filterText":"pow","insertText":"std::pow","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"std::pow"}},{"label":"•std::printf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdio\u003e`"},"sortText":"40df8717printf","filterText":"printf","insertText":"std::printf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":3}},"newText":"std::printf"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":476},"contentChanges":[{"range":{"start":{"line":10,"character":3},"end":{"line":10,"character":3}},"rangeLength":0,"text":"i"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":21,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1520

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'pi'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":477},"contentChanges":[{"range":{"start":{"line":10,"character":4},"end":{"line":10,"character":4}},"rangeLength":0,"text":"n"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":22,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1521

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'pin'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 491

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":5},"end":{"line":10,"character":5}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":5}},"message":"Unknown type name 'pin'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":23,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":478},"contentChanges":[{"range":{"start":{"line":10,"character":5},"end":{"line":10,"character":5}},"rangeLength":0,"text":"M"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":24,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":24,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1522

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'pinM'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 282

{"jsonrpc":"2.0","id":25,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":6},"context":{"triggerKind":3}}}
>>>
Content-Length: 17279

{"id":25,"result":{"isIncomplete":false,"items":[{"label":" PinMode","kind":8,"documentation":{"kind":"markdown","value":"Define the PinName symbol to be used in all the contexts"},"sortText":"405dc948PinMode","filterText":"PinMode","insertText":"PinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"PinMode"}},{"label":" pinMode(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\* FUNCTION DECLARATION  \n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*"},"sortText":"405dc948pinMode","filterText":"pinMode","insertText":"pinMode($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinMode($0)"}},{"label":" pin_mode(PinName pin, PinMode mode)","kind":3,"detail":"void","sortText":"4076f418pin_mode","filterText":"pin_mode","insertText":"pin_mode(${1:PinName pin}, ${2:PinMode mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pin_mode(${1:PinName pin}, ${2:PinMode mode})"}},{"label":" arduino::pinMode(pin_size_t pinNumber, int mode)","kind":3,"detail":"void","sortText":"407a5ae6pinMode","filterText":"pinMode","insertText":"arduino::pinMode(${1:pin_size_t pinNumber}, ${2:int mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"arduino::pinMode(${1:pin_size_t pinNumber}, ${2:int mode})"}},{"label":" ArduinoPinMode","kind":8,"sortText":"40a0f4c3ArduinoPinMode","filterText":"ArduinoPinMode","insertText":"ArduinoPinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"ArduinoPinMode"}},{"label":" MbedPinMode","kind":8,"sortText":"40a0f4c3MbedPinMode","filterText":"MbedPinMode","insertText":"MbedPinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"MbedPinMode"}},{"label":" PinMap","kind":8,"sortText":"40af2acfPinMap","filterText":"PinMap","insertText":"PinMap","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"PinMap"}},{"label":" pinmap_find_function(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","sortText":"40c94576pinmap_find_function","filterText":"pinmap_find_function","insertText":"pinmap_find_function(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_find_function(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":" pinmap_find_peripheral(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","sortText":"40c94576pinmap_find_peripheral","filterText":"pinmap_find_peripheral","insertText":"pinmap_find_peripheral(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_find_peripheral(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":" pinmap_find_peripheral_pins(const PinList *whitelist, const PinList *blacklist, int per, const PinMap *const *maps, PinName **pins, uint32_t count)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"Find a combination of pins suitable for use given the constraints  \nThis function finds pins which meet these specific properties:  \n\\- The pin is part of the form factor  \n\\- The pin is not in the restricted list  \n\\- The pin is contained within the respective pinmap  \n\\- The pin belongs to the given peripheral  \n\\- Each pin found is distinct; in the example below mosi and miso will never be assigned the same pin  \nExample:  \n@code  \n#include \"mbed.h\"  \n#include \"pinmap.h\"  \nint main() { int per = spi_master_cs_pinmap()-\u003eperipheral;  \nconst PinList \\*pins_ff = pinmap_ff_default_pins();  \nconst PinList \\*pins_avoid = pinmap_restricted_pins();  \nPinName mosi = NC;  \nPinName miso = NC;  \nPinName sclk = NC;  \nPinName ssel = NC;  \nconst PinMap \\*maps[] = { spi_master_mosi_pinmap(),  \nspi_master_miso_pinmap(),  \nspi_master_clk_pinmap(),  \nspi_master_cs_pinmap() };  \nPinName \\*pins[] = { \u0026mosi,  \n\u0026miso,  \n\u0026sclk,  \n\u0026ssel };  \nif (pinmap_find_peripheral_pins(pins_ff, pins_avoid, per, maps, pins, sizeof(maps) / sizeof(maps[0]))) { printf(\"Found SPI pins to test instance %i with:\\\\n\" \" mosi=%s\\\\n\" \" miso=%s\\\\n\" \" sclk=%s\\\\n\" \" ssel=%s\\\\n\", per,  \npinmap_ff_default_pin_to_string(mosi),  \npinmap_ff_default_pin_to_string(miso),  \npinmap_ff_default_pin_to_string(sclk),  \npinmap_ff_default_pin_to_string(ssel));  \n} else { printf(\"Could not find SPI combination to test %i\\\\n\", per);  \n} return 0;  \n}  \n@endcode  \n@param whitelist List of pins to choose from  \n@param blacklist List of pins which cannot be used  \n@param per Peripheral to which the pins belong  \n@param maps An array of pin maps to select from  \n@param pins An array of pins to find. Pins already set to a value will be left unchanged. Only pins initialized to NC will be updated by this function  \n@param count The size of maps and pins  \n@return true if a suitable combination of pins was found and written to the pins array, otherwise false"},"sortText":"40c94576pinmap_find_peripheral_pins","filterText":"pinmap_find_peripheral_pins","insertText":"pinmap_find_peripheral_pins(${1:const PinList *whitelist}, ${2:const PinList *blacklist}, ${3:int per}, ${4:const PinMap *const *maps}, ${5:PinName **pins}, ${6:uint32_t count})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_find_peripheral_pins(${1:const PinList *whitelist}, ${2:const PinList *blacklist}, ${3:int per}, ${4:const PinMap *const *maps}, ${5:PinName **pins}, ${6:uint32_t count})"}},{"label":" pinmap_function(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","sortText":"40c94576pinmap_function","filterText":"pinmap_function","insertText":"pinmap_function(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_function(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":" pinmap_gpio_restricted_pins()","kind":3,"detail":"const PinList *","documentation":{"kind":"markdown","value":"Get the pin list of pins to avoid during GPIO/GPIO_IRQ testing  \nThe GPIO restricted pin list is used to indicate to testing that a pin should be skipped due to some caveat about it.  \nTargets should override the weak implementation of this function if they have peripherals which should be skipped during testing.  \n@note This is special case only for GPIO/GPIO_IRQ tests because targets do not provide pin-maps for GPIO.  \n@return Pointer to a peripheral list of peripheral to avoid"},"sortText":"40c94576pinmap_gpio_restricted_pins","filterText":"pinmap_gpio_restricted_pins","insertText":"pinmap_gpio_restricted_pins()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_gpio_restricted_pins()"}},{"label":" pinmap_list_has_peripheral(const PeripheralList *list, int peripheral)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"Check if the peripheral is in the list  \n@param list peripheral list to check  \n@param peripheral peripheral to check for in the list  \n@return true if the peripheral is in the list, false otherwise"},"sortText":"40c94576pinmap_list_has_peripheral","filterText":"pinmap_list_has_peripheral","insertText":"pinmap_list_has_peripheral(${1:const PeripheralList *list}, ${2:int peripheral})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_list_has_peripheral(${1:const PeripheralList *list}, ${2:int peripheral})"}},{"label":" pinmap_list_has_pin(const PinList *list, PinName pin)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"Check if the pin is in the list  \n@param list pin list to check  \n@param pin pin to check for in the list  \n@return true if the pin is in the list, false otherwise"},"sortText":"40c94576pinmap_list_has_pin","filterText":"pinmap_list_has_pin","insertText":"pinmap_list_has_pin(${1:const PinList *list}, ${2:PinName pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_list_has_pin(${1:const PinList *list}, ${2:PinName pin})"}},{"label":" pinmap_merge(uint32_t a, uint32_t b)","kind":3,"detail":"uint32_t","sortText":"40c94576pinmap_merge","filterText":"pinmap_merge","insertText":"pinmap_merge(${1:uint32_t a}, ${2:uint32_t b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_merge(${1:uint32_t a}, ${2:uint32_t b})"}},{"label":" pinmap_peripheral(PinName pin, const PinMap *map)","kind":3,"detail":"uint32_t","sortText":"40c94576pinmap_peripheral","filterText":"pinmap_peripheral","insertText":"pinmap_peripheral(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_peripheral(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":" pinmap_pinout(PinName pin, const PinMap *map)","kind":3,"detail":"void","sortText":"40c94576pinmap_pinout","filterText":"pinmap_pinout","insertText":"pinmap_pinout(${1:PinName pin}, ${2:const PinMap *map})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_pinout(${1:PinName pin}, ${2:const PinMap *map})"}},{"label":" pinmap_restricted_pins()","kind":3,"detail":"const PinList *","documentation":{"kind":"markdown","value":"Get the pin list of pins to avoid during testing  \nThe restricted pin list is used to indicate to testing that a pin should be skipped due to some caveat about it.  \nFor example, using CONSOLE_RX and CONSOLE_TX during tests will interfere with the test runner and should be avoided.  \nTargets should override the weak implementation of this function if they have additional pins which should be skipped during testing.  \n@return Pointer to a pin list of pins to avoid"},"sortText":"40c94576pinmap_restricted_pins","filterText":"pinmap_restricted_pins","insertText":"pinmap_restricted_pins()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_restricted_pins()"}},{"label":" pinmap_uart_restricted_peripherals()","kind":3,"detail":"const PeripheralList *","sortText":"40c94576pinmap_uart_restricted_peripherals","filterText":"pinmap_uart_restricted_peripherals","insertText":"pinmap_uart_restricted_peripherals()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pinmap_uart_restricted_peripherals()"}},{"label":" PinMode","kind":1,"sortText":"40ec8870PinMode","filterText":"PinMode","insertText":"PinMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"PinMode"}},{"label":" analogin_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support analogin  \nReturn a PinMap array of pins that support analogin. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"41151028analogin_pinmap","filterText":"analogin_pinmap","insertText":"analogin_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"analogin_pinmap()"}},{"label":" gpio_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support all GPIO tests  \nReturn a PinMap array of pins that support GPIO. The array is terminated with {NC, NC, 0}.  \nTargets should override the weak implementation of this function to provide the actual pinmap for GPIO testing.  \n@return PinMap array"},"sortText":"41151028gpio_pinmap","filterText":"gpio_pinmap","insertText":"gpio_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"gpio_pinmap()"}},{"label":" i2c_pinmap_t","kind":8,"sortText":"41151028i2c_pinmap_t","filterText":"i2c_pinmap_t","insertText":"i2c_pinmap_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"i2c_pinmap_t"}},{"label":" pwmout_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support PWM  \nReturn a PinMap array of pins that support PWM.  \nThe array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"41151028pwmout_pinmap","filterText":"pwmout_pinmap","insertText":"pwmout_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"pwmout_pinmap()"}},{"label":" gpio_irq_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support all GPIO IRQ tests  \nReturn a PinMap array of pins that support GPIO IRQ.  \nThe array is terminated with {NC, NC, 0}.  \nTargets should override the weak implementation of this function to provide the actual pinmap for GPIO IRQ testing.  \n@return PinMap array"},"sortText":"412f2acfgpio_irq_pinmap","filterText":"gpio_irq_pinmap","insertText":"gpio_irq_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"gpio_irq_pinmap()"}},{"label":" i2c_master_scl_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support I2C SCL  \nReturn a PinMap array of pins that support I2C SCL in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"41494576i2c_master_scl_pinmap","filterText":"i2c_master_scl_pinmap","insertText":"i2c_master_scl_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"i2c_master_scl_pinmap()"}},{"label":" i2c_master_sda_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support I2C SDA  \nReturn a PinMap array of pins that support I2C SDA in master mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"41494576i2c_master_sda_pinmap","filterText":"i2c_master_sda_pinmap","insertText":"i2c_master_sda_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"i2c_master_sda_pinmap()"}},{"label":" i2c_slave_scl_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support I2C SCL  \nReturn a PinMap array of pins that support I2C SCL in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"41494576i2c_slave_scl_pinmap","filterText":"i2c_slave_scl_pinmap","insertText":"i2c_slave_scl_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"i2c_slave_scl_pinmap()"}},{"label":" i2c_slave_sda_pinmap()","kind":3,"detail":"const PinMap *","documentation":{"kind":"markdown","value":"Get the pins that support I2C SDA  \nReturn a PinMap array of pins that support I2C SDA in slave mode. The array is terminated with {NC, NC, 0}.  \n@return PinMap array"},"sortText":"41494576i2c_slave_sda_pinmap","filterText":"i2c_slave_sda_pinmap","insertText":"i2c_slave_sda_pinmap()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"i2c_slave_sda_pinmap()"}},{"label":" MBED_ERROR_PINMAP_INVALID","kind":20,"detail":"_mbed_error_code","sortText":"426dd12aMBED_ERROR_PINMAP_INVALID","filterText":"MBED_ERROR_PINMAP_INVALID","insertText":"MBED_ERROR_PINMAP_INVALID","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"MBED_ERROR_PINMAP_INVALID"}},{"label":" MBED_ERROR_CODE_PINMAP_INVALID","kind":20,"detail":"_mbed_error_code","sortText":"42856691MBED_ERROR_CODE_PINMAP_INVALID","filterText":"MBED_ERROR_CODE_PINMAP_INVALID","insertText":"MBED_ERROR_CODE_PINMAP_INVALID","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":6}},"newText":"MBED_ERROR_CODE_PINMAP_INVALID"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":479},"contentChanges":[{"range":{"start":{"line":10,"character":6},"end":{"line":10,"character":6}},"rangeLength":0,"text":"o"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":26,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1523

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'pinMo'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":480},"contentChanges":[{"range":{"start":{"line":10,"character":7},"end":{"line":10,"character":7}},"rangeLength":0,"text":"d"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":27,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1524

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":8}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'pinMod'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":481},"contentChanges":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":8}},"rangeLength":0,"text":"e"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":28,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1525

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":9}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'pinMode'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 495

{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":9}},"message":"Unknown type name 'pinMode'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":29,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":482},"contentChanges":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":9}},"rangeLength":0,"text":"()"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":30,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1738

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pinMode'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":31,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":10},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 92

{"id":31,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":32,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":33,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":483},"contentChanges":[{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":10}},"rangeLength":0,"text":"L"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":34,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 283

{"jsonrpc":"2.0","id":35,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":11},"context":{"triggerKind":1}}}
>>>
Content-Length: 1734

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'L'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}Content-Length: 33135

{"id":35,"result":{"isIncomplete":true,"items":[{"label":" long","kind":14,"sortText":"3f000000long","filterText":"long","insertText":"long","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"long"}},{"label":" loop()","kind":3,"detail":"[2 overloads]","sortText":"3f13a2a3loop","filterText":"loop","insertText":"loop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"loop()"}},{"label":" LEDBLUE","kind":1,"sortText":"40400000LEDBLUE","filterText":"LEDBLUE","insertText":"LEDBLUE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"LEDBLUE"}},{"label":" arduino::LookaheadMode","kind":13,"documentation":{"kind":"markdown","value":"This enumeration provides the lookahead options for parseInt(), parseFloat() The rules set out here are used until either the first valid character is found or a time out occurs due to lack of input."},"sortText":"407a5ae6LookaheadMode","filterText":"LookaheadMode","insertText":"arduino::LookaheadMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"arduino::LookaheadMode"}},{"label":" LEDGREEN","kind":1,"sortText":"40800000LEDGREEN","filterText":"LEDGREEN","insertText":"LEDGREEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"LEDGREEN"}},{"label":" LEDB","kind":6,"detail":"NinaPin","sortText":"40a7b70bLEDB","filterText":"LEDB","insertText":"LEDB","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"LEDB"}},{"label":" LEDG","kind":6,"detail":"NinaPin","sortText":"40a7b70bLEDG","filterText":"LEDG","insertText":"LEDG","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"LEDG"}},{"label":" LEDR","kind":6,"detail":"NinaPin","sortText":"40a7b70bLEDR","filterText":"LEDR","insertText":"LEDR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"LEDR"}},{"label":" labs(long)","kind":3,"detail":"long","sortText":"40a7b70blabs","filterText":"labs","insertText":"labs(${1:long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"labs(${1:long})"}},{"label":" lcong48(unsigned short *)","kind":3,"detail":"void","sortText":"40a7b70blcong48","filterText":"lcong48","insertText":"lcong48(${1:unsigned short *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"lcong48(${1:unsigned short *})"}},{"label":" lconv","kind":22,"sortText":"40a7b70blconv","filterText":"lconv","insertText":"lconv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"lconv"}},{"label":" ldexpf(float, int)","kind":3,"detail":"float","sortText":"40a7b70bldexpf","filterText":"ldexpf","insertText":"ldexpf(${1:float}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"ldexpf(${1:float}, ${2:int})"}},{"label":" ldiv(long __numer, long __denom)","kind":3,"detail":"ldiv_t","sortText":"40a7b70bldiv","filterText":"ldiv","insertText":"ldiv(${1:long __numer}, ${2:long __denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"ldiv(${1:long __numer}, ${2:long __denom})"}},{"label":" ldiv_t","kind":8,"sortText":"40a7b70bldiv_t","filterText":"ldiv_t","insertText":"ldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"ldiv_t"}},{"label":" lgammaf(float)","kind":3,"detail":"float","sortText":"40a7b70blgammaf","filterText":"lgammaf","insertText":"lgammaf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"lgammaf(${1:float})"}},{"label":" lgammal(long double)","kind":3,"detail":"long double","sortText":"40a7b70blgammal","filterText":"lgammal","insertText":"lgammal(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"lgammal(${1:long double})"}},{"label":" llabs(long long)","kind":3,"detail":"long long","sortText":"40a7b70bllabs","filterText":"llabs","insertText":"llabs(${1:long long})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"llabs(${1:long long})"}},{"label":" lldiv(long long __numer, long long __denom)","kind":3,"detail":"lldiv_t","sortText":"40a7b70blldiv","filterText":"lldiv","insertText":"lldiv(${1:long long __numer}, ${2:long long __denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"lldiv(${1:long long __numer}, ${2:long long __denom})"}},{"label":" lldiv_t","kind":8,"sortText":"40a7b70blldiv_t","filterText":"lldiv_t","insertText":"lldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"lldiv_t"}},{"label":" llrint(double)","kind":3,"detail":"long long","sortText":"40a7b70bllrint","filterText":"llrint","insertText":"llrint(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"llrint(${1:double})"}},{"label":" llrintl(long double)","kind":3,"detail":"long long","sortText":"40a7b70bllrintl","filterText":"llrintl","insertText":"llrintl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"llrintl(${1:long double})"}},{"label":" llroundf(float)","kind":3,"detail":"long long","sortText":"40a7b70bllroundf","filterText":"llroundf","insertText":"llroundf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"llroundf(${1:float})"}},{"label":" locale_t","kind":8,"sortText":"40a7b70blocale_t","filterText":"locale_t","insertText":"locale_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"locale_t"}},{"label":" localeconv()","kind":3,"detail":"struct lconv *","sortText":"40a7b70blocaleconv","filterText":"localeconv","insertText":"localeconv()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"localeconv()"}},{"label":" localtime(const time_t *_timer)","kind":3,"detail":"struct tm *","sortText":"40a7b70blocaltime","filterText":"localtime","insertText":"localtime(${1:const time_t *_timer})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"localtime(${1:const time_t *_timer})"}},{"label":" localtime_r(const time_t *, struct tm *)","kind":3,"detail":"struct tm *","sortText":"40a7b70blocaltime_r","filterText":"localtime_r","insertText":"localtime_r(${1:const time_t *}, ${2:struct tm *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"localtime_r(${1:const time_t *}, ${2:struct tm *})"}},{"label":" log(double)","kind":3,"detail":"double","sortText":"40a7b70blog","filterText":"log","insertText":"log(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"log(${1:double})"}},{"label":" log10(double)","kind":3,"detail":"double","sortText":"40a7b70blog10","filterText":"log10","insertText":"log10(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"log10(${1:double})"}},{"label":" log1pl(long double)","kind":3,"detail":"long double","sortText":"40a7b70blog1pl","filterText":"log1pl","insertText":"log1pl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"log1pl(${1:long double})"}},{"label":" log2(double)","kind":3,"detail":"double","sortText":"40a7b70blog2","filterText":"log2","insertText":"log2(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"log2(${1:double})"}},{"label":" log2f(float)","kind":3,"detail":"float","sortText":"40a7b70blog2f","filterText":"log2f","insertText":"log2f(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"log2f(${1:float})"}},{"label":" logb(double)","kind":3,"detail":"double","sortText":"40a7b70blogb","filterText":"logb","insertText":"logb(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"logb(${1:double})"}},{"label":" logbf(float)","kind":3,"detail":"float","sortText":"40a7b70blogbf","filterText":"logbf","insertText":"logbf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"logbf(${1:float})"}},{"label":" logbl(long double)","kind":3,"detail":"long double","sortText":"40a7b70blogbl","filterText":"logbl","insertText":"logbl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"logbl(${1:long double})"}},{"label":" logl(long double)","kind":3,"detail":"long double","sortText":"40a7b70blogl","filterText":"logl","insertText":"logl(${1:long double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"logl(${1:long double})"}},{"label":" lrand48()","kind":3,"detail":"long","sortText":"40a7b70blrand48","filterText":"lrand48","insertText":"lrand48()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"lrand48()"}},{"label":" lround(double)","kind":3,"detail":"long","sortText":"40a7b70blround","filterText":"lround","insertText":"lround(${1:double})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"lround(${1:double})"}},{"label":" lroundf(float)","kind":3,"detail":"long","sortText":"40a7b70blroundf","filterText":"lroundf","insertText":"lroundf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"lroundf(${1:float})"}},{"label":" LOW","kind":20,"detail":"PinStatus","sortText":"40aa2b09LOW","filterText":"LOW","insertText":"LOW","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"LOW"}},{"label":" LSBFIRST","kind":20,"detail":"BitOrder","sortText":"40aa2b09LSBFIRST","filterText":"LSBFIRST","insertText":"LSBFIRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"LSBFIRST"}},{"label":" lseek(int fildes, off_t offset, int whence)","kind":3,"detail":"off_t","sortText":"40af2acflseek","filterText":"lseek","insertText":"lseek(${1:int fildes}, ${2:off_t offset}, ${3:int whence})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"lseek(${1:int fildes}, ${2:off_t offset}, ${3:int whence})"}},{"label":" LED2","kind":20,"detail":"PinName","sortText":"40b044fcLED2","filterText":"LED2","insertText":"LED2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"LED2"}},{"label":" LED3","kind":20,"detail":"PinName","sortText":"40b044fcLED3","filterText":"LED3","insertText":"LED3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"LED3"}},{"label":" LinkedListBase","kind":7,"documentation":{"kind":"markdown","value":"\\\\defgroup drivers_LinkedListBase LinkedListBase class  \n\\\\ingroup drivers-internal-api-usb  \n@{"},"sortText":"40b12c04LinkedListBase","filterText":"LinkedListBase","insertText":"LinkedListBase","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"LinkedListBase"}},{"label":" labs","kind":18,"sortText":"40bf6ee9labs","filterText":"labs","insertText":"labs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"labs"}},{"label":" ldexp","kind":18,"sortText":"40bf6ee9ldexp","filterText":"ldexp","insertText":"ldexp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"ldexp"}},{"label":" ldiv","kind":18,"sortText":"40bf6ee9ldiv","filterText":"ldiv","insertText":"ldiv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"ldiv"}},{"label":" llrint","kind":18,"sortText":"40bf6ee9llrint","filterText":"llrint","insertText":"llrint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"llrint"}},{"label":" llround","kind":18,"sortText":"40bf6ee9llround","filterText":"llround","insertText":"llround","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"llround"}},{"label":" log","kind":18,"sortText":"40bf6ee9log","filterText":"log","insertText":"log","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"log"}},{"label":" log10","kind":18,"sortText":"40bf6ee9log10","filterText":"log10","insertText":"log10","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"log10"}},{"label":" logb","kind":18,"sortText":"40bf6ee9logb","filterText":"logb","insertText":"logb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"logb"}},{"label":"•std::ldexp(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7affldexp","filterText":"ldexp","insertText":"std::ldexp($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::ldexp($0)"}},{"label":"•std::length_error","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cstdexcept\u003e`  \nThrown when an object is constructed that would exceed its maximum permitted size (e.g., a basic_string instance)."},"sortText":"40cf7afflength_error","filterText":"length_error","insertText":"std::length_error","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::length_error"}},{"label":"•std::lgamma(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afflgamma","filterText":"lgamma","insertText":"std::lgamma($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::lgamma($0)"}},{"label":"•std::llrint(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7affllrint","filterText":"llrint","insertText":"std::llrint($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::llrint($0)"}},{"label":"•std::llround(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7affllround","filterText":"llround","insertText":"std::llround($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::llround($0)"}},{"label":"•std::lock(_L1 \u0026__l1, _L2 \u0026__l2, _L3 \u0026__l3...)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\u003cmutex\u003e`  \n@brief Generic lock.  \n@param \\_\\_l1 Meets Mutex requirements (try_lock() may throw).  \n@param \\_\\_l2 Meets Mutex requirements (try_lock() may throw).  \n@param \\_\\_l3 Meets Mutex requirements (try_lock() may throw).  \n@throw An exception thrown by an argument's lock() or try_lock() member.  \n@post All arguments are locked.  \nAll arguments are locked via a sequence of calls to lock(), try_lock() and unlock(). If the call exits via an exception any locks that were obtained will be released."},"sortText":"40cf7afflock","filterText":"lock","insertText":"std::lock(${1:_L1 \u0026__l1}, ${2:_L2 \u0026__l2}, ${3:_L3 \u0026__l3...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::lock(${1:_L1 \u0026__l1}, ${2:_L2 \u0026__l2}, ${3:_L3 \u0026__l3...})"}},{"label":"•std::log(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afflog","filterText":"log","insertText":"std::log($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log($0)"}},{"label":"•std::log10(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afflog10","filterText":"log10","insertText":"std::log10($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log10($0)"}},{"label":"•std::log1p(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afflog1p","filterText":"log1p","insertText":"std::log1p($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log1p($0)"}},{"label":"•std::log2(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`  \nDR 568."},"sortText":"40cf7afflog2","filterText":"log2","insertText":"std::log2($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log2($0)"}},{"label":"•std::logb(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afflogb","filterText":"logb","insertText":"std::logb($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::logb($0)"}},{"label":"•std::lrint(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afflrint","filterText":"lrint","insertText":"std::lrint($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::lrint($0)"}},{"label":"•std::lround(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40cf7afflround","filterText":"lround","insertText":"std::lround($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::lround($0)"}},{"label":" mstd::launder(T *p)","kind":3,"detail":"T *","sortText":"40d0d9cdlaunder","filterText":"launder","insertText":"mstd::launder(${1:T *p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"mstd::launder(${1:T *p})"}},{"label":"•std::left(ios_base \u0026__base)","kind":3,"detail":"ios_base \u0026","documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nCalls base.setf(ios_base::left, ios_base::adjustfield)."},"sortText":"40d0d9cdleft","filterText":"left","insertText":"std::left(${1:ios_base \u0026__base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::left(${1:ios_base \u0026__base})"}},{"label":"•std::less_equal\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \nOne of the @link comparison_functors comparison functors@endlink."},"sortText":"40d0d9cdless_equal","filterText":"less_equal","insertText":"std::less_equal\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::less_equal\u003c\u003e"}},{"label":"•std::lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)","kind":3,"detail":"bool","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Performs @b dictionary comparison on ranges.  \n@ingroup sorting_algorithms  \n@param \\_\\_first1 An input iterator.  \n@param \\_\\_last1 An input iterator.  \n@param \\_\\_first2 An input iterator.  \n@param \\_\\_last2 An input iterator.  \n@return A boolean true or false.  \n\\\u003cem\u003eReturns true if the sequence of elements defined by the range [first1,last1) is lexicographically less than the sequence of elements defined by the range [first2,last2). Returns false otherwise.\\\u003c/em\u003e (Quoted from [25.3.8]/1.) If the iterators are all character pointers,  \nthen this is an inline call to @c memcmp."},"sortText":"40d0d9cdlexicographical_compare","filterText":"lexicographical_compare","insertText":"std::lexicographical_compare(${1:_II1 __first1}, ${2:_II1 __last1}, ${3:_II2 __first2}, ${4:_II2 __last2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::lexicographical_compare(${1:_II1 __first1}, ${2:_II1 __last1}, ${3:_II2 __first2}, ${4:_II2 __last2})"}},{"label":"•std::locale","kind":7,"documentation":{"kind":"markdown","value":"From `\u003clocale\u003e`  \n22.1.1 Locale"},"sortText":"40d0d9cdlocale","filterText":"locale","insertText":"std::locale","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::locale"}},{"label":"•std::logical_and\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \nOne of the @link logical_functors Boolean operations functors@endlink."},"sortText":"40d0d9cdlogical_and","filterText":"logical_and","insertText":"std::logical_and\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::logical_and\u003c\u003e"}},{"label":"•std::logical_or\u003ctypename _Tp\u003e","kind":22,"documentation":{"kind":"markdown","value":"From `\u003cfunctional\u003e`  \nOne of the @link logical_functors Boolean operations functors@endlink."},"sortText":"40d0d9cdlogical_or","filterText":"logical_or","insertText":"std::logical_or\u003c\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::logical_or\u003c\u003e"}},{"label":"•std::lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp \u0026__val)","kind":3,"detail":"_ForwardIterator","documentation":{"kind":"markdown","value":"From `\u003calgorithm\u003e`  \n@brief Finds the first position in which @a val could be inserted without changing the ordering.  \n@param \\_\\_first An iterator.  \n@param \\_\\_last Another iterator.  \n@param \\_\\_val The search term.  \n@return An iterator pointing to the first element \\\u003cem\u003enot less than\\\u003c/em\u003e @a val, or end() if every element is less than  \n@a val.  \n@ingroup binary_search_algorithms"},"sortText":"40d0d9cdlower_bound","filterText":"lower_bound","insertText":"std::lower_bound(${1:_ForwardIterator __first}, ${2:_ForwardIterator __last}, ${3:const _Tp \u0026__val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::lower_bound(${1:_ForwardIterator __first}, ${2:_ForwardIterator __last}, ${3:const _Tp \u0026__val})"}},{"label":"•std::labs","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40df8717labs","filterText":"labs","insertText":"std::labs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::labs"}},{"label":"•std::lconv","kind":18,"documentation":{"kind":"markdown","value":"From `\u003cclocale\u003e`"},"sortText":"40df8717lconv","filterText":"lconv","insertText":"std::lconv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::lconv"}},{"label":"•std::ldexp","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717ldexp","filterText":"ldexp","insertText":"std::ldexp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::ldexp"}},{"label":"•std::ldiv","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40df8717ldiv","filterText":"ldiv","insertText":"std::ldiv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::ldiv"}},{"label":"•std::lgamma","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717lgamma","filterText":"lgamma","insertText":"std::lgamma","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::lgamma"}},{"label":"•std::lgammaf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717lgammaf","filterText":"lgammaf","insertText":"std::lgammaf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::lgammaf"}},{"label":"•std::lgammal","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717lgammal","filterText":"lgammal","insertText":"std::lgammal","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::lgammal"}},{"label":"•std::lldiv","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40df8717lldiv","filterText":"lldiv","insertText":"std::lldiv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::lldiv"}},{"label":"•std::llrint","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717llrint","filterText":"llrint","insertText":"std::llrint","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::llrint"}},{"label":"•std::llrintf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717llrintf","filterText":"llrintf","insertText":"std::llrintf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::llrintf"}},{"label":"•std::llrintl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717llrintl","filterText":"llrintl","insertText":"std::llrintl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::llrintl"}},{"label":"•std::llround","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717llround","filterText":"llround","insertText":"std::llround","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::llround"}},{"label":"•std::llroundf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717llroundf","filterText":"llroundf","insertText":"std::llroundf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::llroundf"}},{"label":"•std::llroundl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717llroundl","filterText":"llroundl","insertText":"std::llroundl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::llroundl"}},{"label":"•std::localeconv","kind":18,"documentation":{"kind":"markdown","value":"From `\u003cclocale\u003e`"},"sortText":"40df8717localeconv","filterText":"localeconv","insertText":"std::localeconv","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::localeconv"}},{"label":"•std::log","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717log","filterText":"log","insertText":"std::log","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log"}},{"label":"•std::log10","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717log10","filterText":"log10","insertText":"std::log10","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log10"}},{"label":"•std::log1p","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717log1p","filterText":"log1p","insertText":"std::log1p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log1p"}},{"label":"•std::log1pf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717log1pf","filterText":"log1pf","insertText":"std::log1pf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log1pf"}},{"label":"•std::log1pl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717log1pl","filterText":"log1pl","insertText":"std::log1pl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log1pl"}},{"label":"•std::log2","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717log2","filterText":"log2","insertText":"std::log2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log2"}},{"label":"•std::log2f","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717log2f","filterText":"log2f","insertText":"std::log2f","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log2f"}},{"label":"•std::log2l","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717log2l","filterText":"log2l","insertText":"std::log2l","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::log2l"}},{"label":"•std::logb","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717logb","filterText":"logb","insertText":"std::logb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::logb"}},{"label":"•std::logbf","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717logbf","filterText":"logbf","insertText":"std::logbf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::logbf"}},{"label":"•std::logbl","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccmath\u003e`"},"sortText":"40df8717logbl","filterText":"logbl","insertText":"std::logbl","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":11}},"newText":"std::logbl"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":484},"contentChanges":[{"range":{"start":{"line":10,"character":11},"end":{"line":10,"character":11}},"rangeLength":0,"text":"E"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":36,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":485},"contentChanges":[{"range":{"start":{"line":10,"character":12},"end":{"line":10,"character":12}},"rangeLength":0,"text":"D"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}Content-Length: 221

{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 1735

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LE'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}Content-Length: 792

{"id":37,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1736

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LED'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":38,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":13},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":38,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 508

{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":13},"end":{"line":10,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":13}},"message":"Use of undeclared identifier 'LED'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":39,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":486},"contentChanges":[{"range":{"start":{"line":10,"character":13},"end":{"line":10,"character":13}},"rangeLength":0,"text":"G"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":40,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1737

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LEDG'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":41,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":14},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":41,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":487},"contentChanges":[{"range":{"start":{"line":10,"character":14},"end":{"line":10,"character":14}},"rangeLength":0,"text":"R"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":42,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1738

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LEDGR'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":43,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":15},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":43,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":488},"contentChanges":[{"range":{"start":{"line":10,"character":15},"end":{"line":10,"character":15}},"rangeLength":0,"text":"E"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":44,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1739

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LEDGRE'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":45,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":16},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":45,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":489},"contentChanges":[{"range":{"start":{"line":10,"character":16},"end":{"line":10,"character":16}},"rangeLength":0,"text":"E"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":46,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1740

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LEDGREE'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":47,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":17},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":47,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":490},"contentChanges":[{"range":{"start":{"line":10,"character":17},"end":{"line":10,"character":17}},"rangeLength":0,"text":"N"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":48,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1738

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":2},"end":{"line":10,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'pinMode'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":49,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":18},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":49,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":18},"end":{"line":10,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 401

{"id":50,"result":[{"title":"Expand macro 'LEDGREEN'","kind":"refactor","command":{"title":"Expand macro 'LEDGREEN'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server733079971/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":17,"character":18},"end":{"line":17,"character":18}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":491},"contentChanges":[{"range":{"start":{"line":10,"character":18},"end":{"line":10,"character":18}},"rangeLength":0,"text":","}]}}Content-Length: 221

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":51,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1328

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":19},"end":{"line":10,"character":20}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 328

{"jsonrpc":"2.0","id":52,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":19},"context":{"isRetrigger":true,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 92

{"id":52,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":492},"contentChanges":[{"range":{"start":{"line":10,"character":19},"end":{"line":10,"character":19}},"rangeLength":0,"text":" "}]}}Content-Length: 221

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":53,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1328

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":21}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":54,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":20},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":54,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":493},"contentChanges":[{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":20}},"rangeLength":0,"text":"O"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":55,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1734

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":21}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'O'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":56,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":21},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":56,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":494},"contentChanges":[{"range":{"start":{"line":10,"character":21},"end":{"line":10,"character":21}},"rangeLength":0,"text":"U"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":57,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1735

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OU'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":58,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":22},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":58,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 507

{"jsonrpc":"2.0","id":59,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":22},"end":{"line":10,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":22}},"message":"Use of undeclared identifier 'OU'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":59,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":495},"contentChanges":[{"range":{"start":{"line":10,"character":22},"end":{"line":10,"character":22}},"rangeLength":0,"text":"T"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":60,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":60,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1736

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUT'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":61,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":23},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":61,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":496},"contentChanges":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":23}},"rangeLength":0,"text":"P"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":62,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":62,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1737

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTP'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":63,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":24},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":63,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":497},"contentChanges":[{"range":{"start":{"line":10,"character":24},"end":{"line":10,"character":24}},"rangeLength":0,"text":"U"}]}}Content-Length: 283

{"jsonrpc":"2.0","id":64,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":25},"context":{"triggerKind":3}}}Content-Length: 221

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 3272

{"id":64,"result":{"isIncomplete":false,"items":[{"label":" OUTPUT","kind":20,"detail":"PinMode","sortText":"405dc948OUTPUT","filterText":"OUTPUT","insertText":"OUTPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":25}},"newText":"OUTPUT"}},{"label":" TempOUTPUT","kind":20,"detail":"ArduinoPinMode","sortText":"408cadecTempOUTPUT","filterText":"TempOUTPUT","insertText":"TempOUTPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":25}},"newText":"TempOUTPUT"}},{"label":" PIN_OUTPUT","kind":20,"detail":"PinDirection","sortText":"40951028PIN_OUTPUT","filterText":"PIN_OUTPUT","insertText":"PIN_OUTPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":25}},"newText":"PIN_OUTPUT"}},{"label":"•std::output_iterator_tag","kind":22,"documentation":{"kind":"markdown","value":"From `\u003citerator\u003e`  \nMarking output iterators."},"sortText":"40add229output_iterator_tag","filterText":"output_iterator_tag","insertText":"std::output_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":25}},"newText":"std::output_iterator_tag"}},{"label":" mstd::output_iterator_tag","kind":18,"sortText":"40c0ed9aoutput_iterator_tag","filterText":"output_iterator_tag","insertText":"mstd::output_iterator_tag","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":25}},"newText":"mstd::output_iterator_tag"}},{"label":" pwm_set_output_polarity(uint slice_num, bool a, bool b)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Set PWM output polarity  \n\\\\ingroup hardware_pwm  \n\\\\param slice_num PWM slice number  \n\\\\param a true to invert output A  \n\\\\param b true to invert output B"},"sortText":"40e6421cpwm_set_output_polarity","filterText":"pwm_set_output_polarity","insertText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":25}},"newText":"pwm_set_output_polarity(${1:uint slice_num}, ${2:bool a}, ${3:bool b})"}},{"label":" OUTPUT","kind":1,"sortText":"40ec8870OUTPUT","filterText":"OUTPUT","insertText":"OUTPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":25}},"newText":"OUTPUT"}},{"label":" pwm_config_set_output_polarity(pwm_config *c, bool a, bool b)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\brief Set output polarity in a PWM configuration  \n\\\\ingroup hardware_pwm  \n\\\\param c PWM configuration struct to modify  \n\\\\param a true to invert output A  \n\\\\param b true to invert output B"},"sortText":"40f5a1e6pwm_config_set_output_polarity","filterText":"pwm_config_set_output_polarity","insertText":"pwm_config_set_output_polarity(${1:pwm_config *c}, ${2:bool a}, ${3:bool b})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":25}},"newText":"pwm_config_set_output_polarity(${1:pwm_config *c}, ${2:bool a}, ${3:bool b})"}}]},"jsonrpc":"2.0"}Content-Length: 792

{"id":65,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":498},"contentChanges":[{"range":{"start":{"line":10,"character":25},"end":{"line":10,"character":25}},"rangeLength":0,"text":"T"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":65}}Content-Length: 221

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 1738

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPU'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}Content-Length: 792

{"id":66,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1739

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":2},"end":{"line":11,"character":9}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":67,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":26},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":67,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 511

{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":26},"end":{"line":10,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":26}},"message":"Use of undeclared identifier 'OUTPUT'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":68,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 511

{"jsonrpc":"2.0","id":69,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":26},"end":{"line":10,"character":26}},"context":{"diagnostics":[{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":26}},"message":"Use of undeclared identifier 'OUTPUT'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":69,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":70,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":70,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":71,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":27},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":71,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":27},"end":{"line":10,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":72,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":499},"contentChanges":[{"range":{"start":{"line":10,"character":27},"end":{"line":10,"character":27}},"rangeLength":0,"text":";"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":73,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":73,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1539

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'OUTPUT'"},{"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":32}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'INPUT_PULLUP'"},{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalWrite'"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'digitalRead'"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'LOW'"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'delay'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 305

{"jsonrpc":"2.0","id":74,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":28},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":74,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":75,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":28},"end":{"line":10,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":75,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":28},"end":{"line":10,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":76,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 250

{"jsonrpc":"2.0","id":77,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":10,"character":27}}}
>>>
Content-Length: 39

{"id":77,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":78,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":28},"end":{"line":10,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":78,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":79,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":28},"end":{"line":10,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":79,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 220

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":499}}}Content-Length: 324

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":28},"end":{"line":10,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":80,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":28},"end":{"line":10,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":81,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":82,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":28},"end":{"line":10,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":82,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 324

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":10,"character":28},"end":{"line":10,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":83,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":84,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":85,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":85}}Content-Length: 221

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":86}}Content-Length: 221

{"jsonrpc":"2.0","id":87,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":85,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 792

{"id":86,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 792

{"id":87,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":87}}Content-Length: 221

{"jsonrpc":"2.0","id":88,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":88,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":89,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":89,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":90,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":90,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":91,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":91,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":92,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":92,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":93,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":93}}Content-Length: 221

{"jsonrpc":"2.0","id":94,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":93,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 792

{"id":94,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":95,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":95,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":96,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":96,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":97,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":97,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":98,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":98,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 221

{"jsonrpc":"2.0","id":99,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":99}}Content-Length: 222

{"jsonrpc":"2.0","id":100,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":100}}Content-Length: 222

{"jsonrpc":"2.0","id":101,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":101}}Content-Length: 222

{"jsonrpc":"2.0","id":102,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 792

{"id":99,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 793

{"id":100,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 793

{"id":101,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 793

{"id":102,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":102}}Content-Length: 222

{"jsonrpc":"2.0","id":103,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":103,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":104,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"jsonrpc":"2.0","id":105,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":105,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"jsonrpc":"2.0","id":106,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":106}}Content-Length: 222

{"jsonrpc":"2.0","id":107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":106,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 793

{"id":107,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"jsonrpc":"2.0","id":108,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":108,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"jsonrpc":"2.0","id":109,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":109,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":110,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"jsonrpc":"2.0","id":111,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":111,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"jsonrpc":"2.0","id":112,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":112,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"jsonrpc":"2.0","id":113,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":113,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"jsonrpc":"2.0","id":114,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":114,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 1077

{"jsonrpc":"2.0","id":115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":2},"end":{"line":20,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"message":"Use of undeclared identifier 'digitalWrite'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"message":"Use of undeclared identifier 'digitalRead'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"message":"Use of undeclared identifier 'LOW'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"message":"Use of undeclared identifier 'delay'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 396

{"id":115,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server733079971/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":20,"character":2},"end":{"line":27,"character":3}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 250

{"jsonrpc":"2.0","id":116,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":13,"character":2}}}
>>>
Content-Length: 40

{"id":116,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 1077

{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":2},"end":{"line":20,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"message":"Use of undeclared identifier 'digitalWrite'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"message":"Use of undeclared identifier 'digitalRead'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"message":"Use of undeclared identifier 'LOW'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"message":"Use of undeclared identifier 'delay'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 396

{"id":117,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server733079971/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":20,"character":2},"end":{"line":27,"character":3}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 1077

{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":2},"end":{"line":20,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"message":"Use of undeclared identifier 'digitalWrite'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"message":"Use of undeclared identifier 'digitalRead'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"message":"Use of undeclared identifier 'LOW'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"message":"Use of undeclared identifier 'delay'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 396

{"id":118,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server733079971/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":20,"character":2},"end":{"line":27,"character":3}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 1077

{"jsonrpc":"2.0","id":119,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":13,"character":2},"end":{"line":20,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}},"message":"Use of undeclared identifier 'digitalWrite'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":16,"character":7},"end":{"line":16,"character":18}},"message":"Use of undeclared identifier 'digitalRead'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":16,"character":32},"end":{"line":16,"character":35}},"message":"Use of undeclared identifier 'LOW'","severity":1,"code":"undeclared_var_use","source":"clang"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"message":"Use of undeclared identifier 'delay'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 396

{"id":119,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server733079971/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":20,"character":2},"end":{"line":27,"character":3}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 222

{"jsonrpc":"2.0","id":120,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 793

{"id":120,"result":[{"name":"statusBLUE","kind":13,"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":23}},"selectionRange":{"start":{"line":4,"character":5},"end":{"line":4,"character":15}}},{"name":"statusGREEN","kind":13,"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":24}},"selectionRange":{"start":{"line":5,"character":5},"end":{"line":5,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":7,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":7,"character":5},"end":{"line":7,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":20,"character":3},"end":{"line":20,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":121,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 349

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":500},"contentChanges":[{"range":{"start":{"line":20,"character":3},"end":{"line":20,"character":3}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 222

{"jsonrpc":"2.0","id":122,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3207

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":16236,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\mirko\\AppData\\Local\\Temp\\.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh\\sketch_nov24a","rootUri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a","name":"sketch_nov24a"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 441

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","languageId":"cpp","version":1,"text":"void setup() {\n  \n  Serial.begin(115200);\n  int x = 0;\n  while(x < 9) {\n    x++;\n    if(x == 5) {\n      continue;   \n    }  \n    Serial.println(x);\n  }\n\n}\n\nvoid loop() {\n  \n\n}\n"}}}Content-Length: 321

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":4,"character":16},"end":{"line":4,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 319

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 220

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 247

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":6,"character":7}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 408

{"id":3,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":12,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":17,"character":1}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 250

{"id":4,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":8}}},"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/30","percentage":3.3333333333333335,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/30","percentage":6.666666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/30","percentage":6.666666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/30","percentage":10,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/30","percentage":10,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/30","percentage":13.333333333333334,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/30","percentage":13.333333333333334,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 247

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":3,"character":9}}}
>>>
Content-Length: 250

{"id":5,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":3,"character":8},"end":{"line":3,"character":9}}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/30","percentage":16.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/30","percentage":16.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/30","percentage":20,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/30","percentage":20,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/30","percentage":23.333333333333332,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/30","percentage":23.333333333333332,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/30","percentage":26.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/30","percentage":26.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/30","percentage":30,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/30","percentage":30,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/30","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/30","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/30","percentage":36.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/30","percentage":36.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/30","percentage":40,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/30","percentage":40,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/30","percentage":43.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/30","percentage":43.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/30","percentage":46.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/30","percentage":46.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/30","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/30","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/30","percentage":53.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/30","percentage":53.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 248

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":0,"character":13}}}
>>>
Content-Length: 38

{"id":6,"result":null,"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/30","percentage":56.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/30","percentage":56.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 321

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":23},"end":{"line":2,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":7,"result":[],"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/30","percentage":60,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/30","percentage":60,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/30","percentage":63.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/30","percentage":63.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":2},"contentChanges":[{"range":{"start":{"line":2,"character":23},"end":{"line":2,"character":23}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 220

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 408

{"id":8,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":13,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":15,"character":0},"end":{"line":18,"character":1}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":3},"contentChanges":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},"rangeLength":0,"text":"\n  "},{"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 220

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 408

{"id":9,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":3}}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":4},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"rangeLength":0,"text":"w"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 409

{"id":11,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 281

{"jsonrpc":"2.0","id":12,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 382

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'w'"}]},"jsonrpc":"2.0"}Content-Length: 39788

{"id":12,"result":{"isIncomplete":true,"items":[{"label":" wchar_t","kind":14,"sortText":"3f000000wchar_t","filterText":"wchar_t","insertText":"wchar_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wchar_t"}},{"label":" while (condition) {statements}","kind":15,"sortText":"3f000000while","filterText":"while","insertText":"while (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"while (${1:condition}) {\n${0:statements}\n}"}},{"label":"•word","kind":8,"documentation":{"kind":"markdown","value":"From `\"api/Common.h\"`"},"sortText":"405d8e68word","filterText":"word","insertText":"word","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"word"}},{"label":" wcstombs","kind":18,"sortText":"406c52eawcstombs","filterText":"wcstombs","insertText":"wcstombs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstombs"}},{"label":" wctomb","kind":18,"sortText":"406c52eawctomb","filterText":"wctomb","insertText":"wctomb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wctomb"}},{"label":" wcstoimax(const wchar_t *, wchar_t **, int)","kind":3,"detail":"intmax_t","sortText":"4071b066wcstoimax","filterText":"wcstoimax","insertText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstoimax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":" wcstoimax_l(const wchar_t *, wchar_t **_restrict, int, locale_t)","kind":3,"detail":"intmax_t","sortText":"4071b066wcstoimax_l","filterText":"wcstoimax_l","insertText":"wcstoimax_l(${1:const wchar_t *}, ${2:wchar_t **_restrict}, ${3:int}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstoimax_l(${1:const wchar_t *}, ${2:wchar_t **_restrict}, ${3:int}, ${4:locale_t})"}},{"label":" wcstoumax(const wchar_t *, wchar_t **, int)","kind":3,"detail":"uintmax_t","sortText":"4071b066wcstoumax","filterText":"wcstoumax","insertText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstoumax(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":" wcstoumax_l(const wchar_t *, wchar_t **_restrict, int, locale_t)","kind":3,"detail":"uintmax_t","sortText":"4071b066wcstoumax_l","filterText":"wcstoumax_l","insertText":"wcstoumax_l(${1:const wchar_t *}, ${2:wchar_t **_restrict}, ${3:int}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstoumax_l(${1:const wchar_t *}, ${2:wchar_t **_restrict}, ${3:int}, ${4:locale_t})"}},{"label":" wint_t","kind":8,"sortText":"4071b066wint_t","filterText":"wint_t","insertText":"wint_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wint_t"}},{"label":"•wait_ns(unsigned int ns)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_wait_api.h\"`  \nWaits a number of nanoseconds.  \nThis function spins the CPU to produce a small delay. It should normally only be used for delays of 10us (10000ns) or less. As it is calculated based on the expected execution time of a software loop, it may well run slower than requested based on activity from other threads and interrupts.  \nIf greater precision is required, this can be called from inside a critical section.  \n@param ns the number of nanoseconds to wait  \n@note wait_us() will likely give more precise time than wait_ns for large-enough delays, as it is based on a timer, but its set-up time may be excessive for the smallest microsecond counts, at which point wait_ns() is better.  \n@note Any delay larger than a millisecond (1000000ns) is liable to cause overflow in the internal loop calculation. You shouldn't normally be using this for such large delays anyway in real code, but be aware if calibrating. Make repeated calls for longer test runs.  \n@note You may call this function from ISR context."},"sortText":"40791bfcwait_ns","filterText":"wait_ns","insertText":"wait_ns(${1:unsigned int ns})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wait_ns(${1:unsigned int ns})"}},{"label":"•wait_us(int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"mbed_wait_api.h\"`  \nWaits a number of microseconds.  \n@param us the whole number of microseconds to wait  \n@note This function always spins to get the exact number of microseconds.  \nThis will affect power and multithread performance. Therefore, spinning for millisecond wait is not recommended, and ThisThread::sleep_for should be used instead.  \n@note You may call this function from ISR context, but large delays may impact system stability - interrupt handlers should take less than 50us."},"sortText":"40791bfcwait_us","filterText":"wait_us","insertText":"wait_us(${1:int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wait_us(${1:int us})"}},{"label":" wcpcpy(wchar_t *, const wchar_t *)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcpcpy","filterText":"wcpcpy","insertText":"wcpcpy(${1:wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcpcpy(${1:wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcpncpy(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcpncpy","filterText":"wcpncpy","insertText":"wcpncpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcpncpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcrtomb(char *, wchar_t, mbstate_t *)","kind":3,"detail":"size_t","sortText":"40791bfcwcrtomb","filterText":"wcrtomb","insertText":"wcrtomb(${1:char *}, ${2:wchar_t}, ${3:mbstate_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcrtomb(${1:char *}, ${2:wchar_t}, ${3:mbstate_t *})"}},{"label":" wcscasecmp(const wchar_t *, const wchar_t *)","kind":3,"detail":"int","sortText":"40791bfcwcscasecmp","filterText":"wcscasecmp","insertText":"wcscasecmp(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcscasecmp(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcscasecmp_l(const wchar_t *, const wchar_t *, locale_t)","kind":3,"detail":"int","sortText":"40791bfcwcscasecmp_l","filterText":"wcscasecmp_l","insertText":"wcscasecmp_l(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcscasecmp_l(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:locale_t})"}},{"label":" wcscat(wchar_t *, const wchar_t *)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcscat","filterText":"wcscat","insertText":"wcscat(${1:wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcscat(${1:wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcschr(const wchar_t *, wchar_t)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcschr","filterText":"wcschr","insertText":"wcschr(${1:const wchar_t *}, ${2:wchar_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcschr(${1:const wchar_t *}, ${2:wchar_t})"}},{"label":" wcscmp(const wchar_t *, const wchar_t *)","kind":3,"detail":"int","sortText":"40791bfcwcscmp","filterText":"wcscmp","insertText":"wcscmp(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcscmp(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcscoll(const wchar_t *, const wchar_t *)","kind":3,"detail":"int","sortText":"40791bfcwcscoll","filterText":"wcscoll","insertText":"wcscoll(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcscoll(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcscoll_l(const wchar_t *, const wchar_t *, locale_t)","kind":3,"detail":"int","sortText":"40791bfcwcscoll_l","filterText":"wcscoll_l","insertText":"wcscoll_l(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcscoll_l(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:locale_t})"}},{"label":" wcscpy(wchar_t *, const wchar_t *)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcscpy","filterText":"wcscpy","insertText":"wcscpy(${1:wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcscpy(${1:wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcscspn(const wchar_t *, const wchar_t *)","kind":3,"detail":"size_t","sortText":"40791bfcwcscspn","filterText":"wcscspn","insertText":"wcscspn(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcscspn(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcsdup(const wchar_t *)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcsdup","filterText":"wcsdup","insertText":"wcsdup(${1:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsdup(${1:const wchar_t *})"}},{"label":" wcsftime(wchar_t *, size_t, const wchar_t *, const struct tm *)","kind":3,"detail":"size_t","sortText":"40791bfcwcsftime","filterText":"wcsftime","insertText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsftime(${1:wchar_t *}, ${2:size_t}, ${3:const wchar_t *}, ${4:const struct tm *})"}},{"label":" wcslcat(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"size_t","sortText":"40791bfcwcslcat","filterText":"wcslcat","insertText":"wcslcat(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcslcat(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcslcpy(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"size_t","sortText":"40791bfcwcslcpy","filterText":"wcslcpy","insertText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcslcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcslen(const wchar_t *)","kind":3,"detail":"size_t","sortText":"40791bfcwcslen","filterText":"wcslen","insertText":"wcslen(${1:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcslen(${1:const wchar_t *})"}},{"label":" wcsncasecmp(const wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"int","sortText":"40791bfcwcsncasecmp","filterText":"wcsncasecmp","insertText":"wcsncasecmp(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsncasecmp(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcsncasecmp_l(const wchar_t *, const wchar_t *, size_t, locale_t)","kind":3,"detail":"int","sortText":"40791bfcwcsncasecmp_l","filterText":"wcsncasecmp_l","insertText":"wcsncasecmp_l(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsncasecmp_l(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t}, ${4:locale_t})"}},{"label":" wcsncat(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcsncat","filterText":"wcsncat","insertText":"wcsncat(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsncat(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcsncmp(const wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"int","sortText":"40791bfcwcsncmp","filterText":"wcsncmp","insertText":"wcsncmp(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsncmp(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcsncpy(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcsncpy","filterText":"wcsncpy","insertText":"wcsncpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsncpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcsnlen(const wchar_t *, size_t)","kind":3,"detail":"size_t","sortText":"40791bfcwcsnlen","filterText":"wcsnlen","insertText":"wcsnlen(${1:const wchar_t *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsnlen(${1:const wchar_t *}, ${2:size_t})"}},{"label":" wcsnrtombs(char *, const wchar_t **, size_t, size_t, mbstate_t *)","kind":3,"detail":"size_t","sortText":"40791bfcwcsnrtombs","filterText":"wcsnrtombs","insertText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsnrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:size_t}, ${5:mbstate_t *})"}},{"label":" wcspbrk(const wchar_t *, const wchar_t *)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcspbrk","filterText":"wcspbrk","insertText":"wcspbrk(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcspbrk(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcsrchr(const wchar_t *, wchar_t)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcsrchr","filterText":"wcsrchr","insertText":"wcsrchr(${1:const wchar_t *}, ${2:wchar_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsrchr(${1:const wchar_t *}, ${2:wchar_t})"}},{"label":" wcsrtombs(char *, const wchar_t **, size_t, mbstate_t *)","kind":3,"detail":"size_t","sortText":"40791bfcwcsrtombs","filterText":"wcsrtombs","insertText":"wcsrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:mbstate_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsrtombs(${1:char *}, ${2:const wchar_t **}, ${3:size_t}, ${4:mbstate_t *})"}},{"label":" wcsspn(const wchar_t *, const wchar_t *)","kind":3,"detail":"size_t","sortText":"40791bfcwcsspn","filterText":"wcsspn","insertText":"wcsspn(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsspn(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcsstr(const wchar_t *, const wchar_t *)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcsstr","filterText":"wcsstr","insertText":"wcsstr(${1:const wchar_t *}, ${2:const wchar_t *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsstr(${1:const wchar_t *}, ${2:const wchar_t *})"}},{"label":" wcstod(const wchar_t *, wchar_t **)","kind":3,"detail":"double","sortText":"40791bfcwcstod","filterText":"wcstod","insertText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstod(${1:const wchar_t *}, ${2:wchar_t **})"}},{"label":" wcstof(const wchar_t *, wchar_t **)","kind":3,"detail":"float","sortText":"40791bfcwcstof","filterText":"wcstof","insertText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstof(${1:const wchar_t *}, ${2:wchar_t **})"}},{"label":" wcstok(wchar_t *, const wchar_t *, wchar_t **)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwcstok","filterText":"wcstok","insertText":"wcstok(${1:wchar_t *}, ${2:const wchar_t *}, ${3:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstok(${1:wchar_t *}, ${2:const wchar_t *}, ${3:wchar_t **})"}},{"label":" wcstol(const wchar_t *, wchar_t **, int)","kind":3,"detail":"long","sortText":"40791bfcwcstol","filterText":"wcstol","insertText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstol(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":" wcstold(const wchar_t *, wchar_t **)","kind":3,"detail":"long double","sortText":"40791bfcwcstold","filterText":"wcstold","insertText":"wcstold(${1:const wchar_t *}, ${2:wchar_t **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstold(${1:const wchar_t *}, ${2:wchar_t **})"}},{"label":" wcstoll(const wchar_t *, wchar_t **, int)","kind":3,"detail":"long long","sortText":"40791bfcwcstoll","filterText":"wcstoll","insertText":"wcstoll(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstoll(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":" wcstombs(char *, const wchar_t *, size_t)","kind":3,"detail":"size_t","sortText":"40791bfcwcstombs","filterText":"wcstombs","insertText":"wcstombs(${1:char *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstombs(${1:char *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcstoul(const wchar_t *, wchar_t **, int)","kind":3,"detail":"unsigned long","sortText":"40791bfcwcstoul","filterText":"wcstoul","insertText":"wcstoul(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstoul(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":" wcstoull(const wchar_t *, wchar_t **, int)","kind":3,"detail":"unsigned long long","sortText":"40791bfcwcstoull","filterText":"wcstoull","insertText":"wcstoull(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcstoull(${1:const wchar_t *}, ${2:wchar_t **}, ${3:int})"}},{"label":" wcsxfrm(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"size_t","sortText":"40791bfcwcsxfrm","filterText":"wcsxfrm","insertText":"wcsxfrm(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsxfrm(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wcsxfrm_l(wchar_t *, const wchar_t *, size_t, locale_t)","kind":3,"detail":"size_t","sortText":"40791bfcwcsxfrm_l","filterText":"wcsxfrm_l","insertText":"wcsxfrm_l(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t}, ${4:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wcsxfrm_l(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t}, ${4:locale_t})"}},{"label":" wctob(wint_t)","kind":3,"detail":"int","sortText":"40791bfcwctob","filterText":"wctob","insertText":"wctob(${1:wint_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wctob(${1:wint_t})"}},{"label":" wctomb(char *, wchar_t)","kind":3,"detail":"int","sortText":"40791bfcwctomb","filterText":"wctomb","insertText":"wctomb(${1:char *}, ${2:wchar_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wctomb(${1:char *}, ${2:wchar_t})"}},{"label":" wctrans_t","kind":8,"sortText":"40791bfcwctrans_t","filterText":"wctrans_t","insertText":"wctrans_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wctrans_t"}},{"label":" wctype(const char *)","kind":3,"detail":"wctype_t","sortText":"40791bfcwctype","filterText":"wctype","insertText":"wctype(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wctype(${1:const char *})"}},{"label":" wctype_l(const char *, locale_t)","kind":3,"detail":"wctype_t","sortText":"40791bfcwctype_l","filterText":"wctype_l","insertText":"wctype_l(${1:const char *}, ${2:locale_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wctype_l(${1:const char *}, ${2:locale_t})"}},{"label":" wctype_t","kind":8,"sortText":"40791bfcwctype_t","filterText":"wctype_t","insertText":"wctype_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wctype_t"}},{"label":" wmemchr(const wchar_t *, wchar_t, size_t)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwmemchr","filterText":"wmemchr","insertText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wmemchr(${1:const wchar_t *}, ${2:wchar_t}, ${3:size_t})"}},{"label":" wmemcmp(const wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"int","sortText":"40791bfcwmemcmp","filterText":"wmemcmp","insertText":"wmemcmp(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wmemcmp(${1:const wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wmemcpy(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwmemcpy","filterText":"wmemcpy","insertText":"wmemcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wmemcpy(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wmemmove(wchar_t *, const wchar_t *, size_t)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwmemmove","filterText":"wmemmove","insertText":"wmemmove(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wmemmove(${1:wchar_t *}, ${2:const wchar_t *}, ${3:size_t})"}},{"label":" wmemset(wchar_t *, wchar_t, size_t)","kind":3,"detail":"wchar_t *","sortText":"40791bfcwmemset","filterText":"wmemset","insertText":"wmemset(${1:wchar_t *}, ${2:wchar_t}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wmemset(${1:wchar_t *}, ${2:wchar_t}, ${3:size_t})"}},{"label":" wprintf(const wchar_t *, ...)","kind":3,"detail":"int","sortText":"40791bfcwprintf","filterText":"wprintf","insertText":"wprintf(${1:const wchar_t *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wprintf(${1:const wchar_t *, ...})"}},{"label":"•write(int fildes, const void *buf, size_t nbyte)","kind":3,"detail":"ssize_t","documentation":{"kind":"markdown","value":"From `\"mbed_retarget.h\"`"},"sortText":"40791bfcwrite","filterText":"write","insertText":"write(${1:int fildes}, ${2:const void *buf}, ${3:size_t nbyte})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"write(${1:int fildes}, ${2:const void *buf}, ${3:size_t nbyte})"}},{"label":" wscanf(const wchar_t *, ...)","kind":3,"detail":"int","sortText":"40791bfcwscanf","filterText":"wscanf","insertText":"wscanf(${1:const wchar_t *, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"wscanf(${1:const wchar_t *, ...})"}},{"label":"•WATCHDOG_STATUS_INVALID_ARGUMENT","kind":20,"detail":"watchdog_status_t","documentation":{"kind":"markdown","value":"From `\"watchdog_api.h\"`  \nInvalid argument. *"},"sortText":"4088511fWATCHDOG_STATUS_INVALID_ARGUMENT","filterText":"WATCHDOG_STATUS_INVALID_ARGUMENT","insertText":"WATCHDOG_STATUS_INVALID_ARGUMENT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WATCHDOG_STATUS_INVALID_ARGUMENT"}},{"label":"•watchdog_features_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"watchdog_api.h\"`  \nWatchdog features."},"sortText":"4088511fwatchdog_features_t","filterText":"watchdog_features_t","insertText":"watchdog_features_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"watchdog_features_t"}},{"label":"•watchdog_status_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"watchdog_api.h\"`  \nStatus of a watchdog operation."},"sortText":"4088511fwatchdog_status_t","filterText":"watchdog_status_t","insertText":"watchdog_status_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"watchdog_status_t"}},{"label":"•WiFiInterface","kind":7,"documentation":{"kind":"markdown","value":"From `\"WiFiInterface.h\"`"},"sortText":"40907626WiFiInterface","filterText":"WiFiInterface","insertText":"WiFiInterface","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"WiFiInterface"}},{"label":"•std::wcschr(wchar_t *__p, wchar_t __c)","kind":3,"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"409f2ea4wcschr","filterText":"wcschr","insertText":"std::wcschr(${1:wchar_t *__p}, ${2:wchar_t __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcschr(${1:wchar_t *__p}, ${2:wchar_t __c})"}},{"label":"•std::wcspbrk(wchar_t *__s1, const wchar_t *__s2)","kind":3,"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"409f2ea4wcspbrk","filterText":"wcspbrk","insertText":"std::wcspbrk(${1:wchar_t *__s1}, ${2:const wchar_t *__s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcspbrk(${1:wchar_t *__s1}, ${2:const wchar_t *__s2})"}},{"label":"•std::wcsrchr(wchar_t *__p, wchar_t __c)","kind":3,"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"409f2ea4wcsrchr","filterText":"wcsrchr","insertText":"std::wcsrchr(${1:wchar_t *__p}, ${2:wchar_t __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcsrchr(${1:wchar_t *__p}, ${2:wchar_t __c})"}},{"label":"•std::wfilebuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nClass for @c wchar_t file buffers."},"sortText":"409f2ea4wfilebuf","filterText":"wfilebuf","insertText":"std::wfilebuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wfilebuf"}},{"label":"•std::wfstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`  \nClass for @c wchar_t mixed input and output file streams."},"sortText":"409f2ea4wfstream","filterText":"wfstream","insertText":"std::wfstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wfstream"}},{"label":"•std::wifstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`  \nClass for @c wchar_t input file streams."},"sortText":"409f2ea4wifstream","filterText":"wifstream","insertText":"std::wifstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wifstream"}},{"label":"•std::wios","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nBase class for @c wchar_t streams."},"sortText":"409f2ea4wios","filterText":"wios","insertText":"std::wios","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wios"}},{"label":"•std::wiostream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \nBase class for @c wchar_t mixed input and output streams."},"sortText":"409f2ea4wiostream","filterText":"wiostream","insertText":"std::wiostream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wiostream"}},{"label":"•std::wistream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \nBase class for @c wchar_t input streams."},"sortText":"409f2ea4wistream","filterText":"wistream","insertText":"std::wistream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wistream"}},{"label":"•std::wmemchr(wchar_t *__p, wchar_t __c, size_t __n)","kind":3,"detail":"wchar_t *","documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"409f2ea4wmemchr","filterText":"wmemchr","insertText":"std::wmemchr(${1:wchar_t *__p}, ${2:wchar_t __c}, ${3:size_t __n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wmemchr(${1:wchar_t *__p}, ${2:wchar_t __c}, ${3:size_t __n})"}},{"label":"•std::wofstream","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cfstream\u003e`  \nClass for @c wchar_t output file streams."},"sortText":"409f2ea4wofstream","filterText":"wofstream","insertText":"std::wofstream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wofstream"}},{"label":"•std::ws(basic_istream\u003c_CharT, _Traits\u003e \u0026__is)","kind":3,"detail":"basic_istream\u003c_CharT, _Traits\u003e \u0026","documentation":{"kind":"markdown","value":"From `\u003cistream\u003e`  \n@brief Quick and easy way to eat whitespace  \nThis manipulator extracts whitespace characters, stopping when the next character is non-whitespace, or when the input sequence is empty.  \nIf the sequence is empty, @c eofbit is set in the stream, but not  \n@c failbit.  \nThe current locale is used to distinguish whitespace characters.  \nExample:  \n@code MyClass mc;  \nstd::cin \u003e\u003e std::ws \u003e\u003e mc;  \n@endcode will skip leading whitespace before calling operator\u003e\u003e on cin and your object. Note that the same effect can be achieved by creating a std::basic_istream::sentry inside your definition of operator\u003e\u003e."},"sortText":"409f2ea4ws","filterText":"ws","insertText":"std::ws(${1:basic_istream\u003c_CharT, _Traits\u003e \u0026__is})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::ws(${1:basic_istream\u003c_CharT, _Traits\u003e \u0026__is})"}},{"label":"•std::wstreambuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstreambuf\u003e`  \nBase class for @c wchar_t buffers."},"sortText":"409f2ea4wstreambuf","filterText":"wstreambuf","insertText":"std::wstreambuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wstreambuf"}},{"label":"•std::wstringbuf","kind":8,"documentation":{"kind":"markdown","value":"From `\u003csstream\u003e`  \nClass for @c wchar_t memory buffers."},"sortText":"409f2ea4wstringbuf","filterText":"wstringbuf","insertText":"std::wstringbuf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wstringbuf"}},{"label":"•std::wcstombs","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bwcstombs","filterText":"wcstombs","insertText":"std::wcstombs","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcstombs"}},{"label":"•std::wctomb","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccstdlib\u003e`"},"sortText":"40a8609bwctomb","filterText":"wctomb","insertText":"std::wctomb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wctomb"}},{"label":"•std::weak_ptr\u003ctypename _Tp\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\u003cmemory\u003e`"},"sortText":"40a94eb8weak_ptr","filterText":"weak_ptr","insertText":"std::weak_ptr\u003c${1:typename _Tp}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::weak_ptr\u003c${1:typename _Tp}\u003e"}},{"label":"•std::wstreampos","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cios\u003e`  \nFile position for wchar_t streams."},"sortText":"40a94eb8wstreampos","filterText":"wstreampos","insertText":"std::wstreampos","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wstreampos"}},{"label":"•std::wstring","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cstring\u003e`  \nA string of @c wchar_t"},"sortText":"40a94eb8wstring","filterText":"wstring","insertText":"std::wstring","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wstring"}},{"label":"•rtos::Waiter","kind":22,"documentation":{"kind":"markdown","value":"From `\"ConditionVariable.h\"`"},"sortText":"40b198efWaiter","filterText":"Waiter","insertText":"rtos::Waiter","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"rtos::Waiter"}},{"label":"•rtos::Kernel::wait_for_u32_forever","kind":6,"detail":"const Clock::duration_u32","documentation":{"kind":"markdown","value":"From `\"Kernel.h\"`  \nMagic \"wait forever\" constant for Kernel::Clock::duration_u32-based APIs  \nMany duration_u32-based APIs treat duration_u32(0xFFFFFFFF) as \"wait forever\"."},"sortText":"40b198efwait_for_u32_forever","filterText":"wait_for_u32_forever","insertText":"rtos::Kernel::wait_for_u32_forever","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"rtos::Kernel::wait_for_u32_forever"}},{"label":"•rtos::Kernel::wait_for_u32_max","kind":6,"detail":"const Clock::duration_u32","documentation":{"kind":"markdown","value":"From `\"Kernel.h\"`  \nMaximum duration for Kernel::Clock::duration_u32-based APIs  \n@note As duration_u32-based APIs pass through straight to CMSIS-RTOS, they will interpret duration_u32(0xFFFFFFFF) as \"wait forever\". Indicate maximum wait time of 0xFFFFFFFE for these calls (which is ~49 days)."},"sortText":"40b198efwait_for_u32_max","filterText":"wait_for_u32_max","insertText":"rtos::Kernel::wait_for_u32_max","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"rtos::Kernel::wait_for_u32_max"}},{"label":"•std::wcrtomb","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40b39ec4wcrtomb","filterText":"wcrtomb","insertText":"std::wcrtomb","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcrtomb"}},{"label":"•std::wcschr","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40b39ec4wcschr","filterText":"wcschr","insertText":"std::wcschr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcschr"}},{"label":"•std::wcscmp","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40b39ec4wcscmp","filterText":"wcscmp","insertText":"std::wcscmp","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcscmp"}},{"label":"•std::wcscoll","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40b39ec4wcscoll","filterText":"wcscoll","insertText":"std::wcscoll","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcscoll"}},{"label":"•std::wcscpy","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40b39ec4wcscpy","filterText":"wcscpy","insertText":"std::wcscpy","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcscpy"}},{"label":"•std::wcscspn","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40b39ec4wcscspn","filterText":"wcscspn","insertText":"std::wcscspn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcscspn"}},{"label":"•std::wcsftime","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40b39ec4wcsftime","filterText":"wcsftime","insertText":"std::wcsftime","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcsftime"}},{"label":"•std::wcslen","kind":18,"documentation":{"kind":"markdown","value":"From `\u003ccwchar\u003e`"},"sortText":"40b39ec4wcslen","filterText":"wcslen","insertText":"std::wcslen","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":3}},"newText":"std::wcslen"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":5},"contentChanges":[{"range":{"start":{"line":4,"character":3},"end":{"line":4,"character":3}},"rangeLength":0,"text":"h"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}
>>>
Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/30","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/30","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}Content-Length: 409

{"id":13,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}Content-Length: 281

{"jsonrpc":"2.0","id":14,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":4},"context":{"triggerKind":3}}}Content-Length: 322

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/30","percentage":70,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/30","percentage":70,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/30","percentage":73.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/30","percentage":76.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/30","percentage":76.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/30","percentage":80,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/30","percentage":80,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/30","percentage":83.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/30","percentage":83.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/30","percentage":86.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/30","percentage":86.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/30","percentage":90,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/30","percentage":93.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/30","percentage":96.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 383

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'wh'"}]},"jsonrpc":"2.0"}Content-Length: 394

{"id":14,"result":{"isIncomplete":false,"items":[{"label":" while (condition) {statements}","kind":15,"sortText":"3f000000while","filterText":"while","insertText":"while (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"newText":"while (${1:condition}) {\n${0:statements}\n}"}}]},"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 37

{"id":15,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":6},"contentChanges":[{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"rangeLength":0,"text":"i"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}Content-Length: 221

{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":7},"contentChanges":[{"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":5}},"rangeLength":0,"text":"l"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}Content-Length: 342

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":8},"contentChanges":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":6}},"rangeLength":0,"text":"e"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 320

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":7}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":9},"contentChanges":[{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":7}},"rangeLength":0,"text":"()"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}Content-Length: 221

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 327

{"jsonrpc":"2.0","id":21,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":8},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}Content-Length: 320

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":8}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:/
>>>
Content-Length: 383

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'wh'"}]},"jsonrpc":"2.0"}Content-Length: 409

{"id":16,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 384

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'whi'"}]},"jsonrpc":"2.0"}Content-Length: 385

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'whil'"}]},"jsonrpc":"2.0"}Content-Length: 409

{"id":17,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 409

{"id":18,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1112

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":5}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'while'"},{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":19,"result":[],"jsonrpc":"2.0"}Content-Length: 409

{"id":20,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1103

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":9}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":21,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":22,"result":[],"jsonrpc":"2.0"}
<<<
//c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":10},"contentChanges":[{"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":8}},"rangeLength":0,"text":"!"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 221

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}Content-Length: 303

{"jsonrpc":"2.0","id":24,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":9},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 320

{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":23}}Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":11},"contentChanges":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"rangeLength":0,"text":"S"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 221

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}Content-Length: 304

{"jsonrpc":"2.0","id":27,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":10},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":26}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":12},"contentChanges":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"rangeLength":0,"text":"e"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}Content-Length: 304

{"jsonrpc":"2.0","id":29,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":11},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":28}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":13},"contentChanges":[{"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":11}},"rangeLength":0,"text":"r"}]}}Conten
>>>
Content-Length: 409

{"id":23,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1104

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":10}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":24,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":25,"result":[],"jsonrpc":"2.0"}Content-Length: 409

{"id":26,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1673

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'S'"},{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":7}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Misleading indentation: statement is indented too deeply\n\nsketch_nov24a.ino.cpp:12:3: note: did you mean this line to be inside this 'while'"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"severity":3,"message":"Did you mean this line to be inside this 'while'\n\nsketch_nov24a.ino.cpp:14:3: warning: misleading indentation: statement is indented too deeply"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":27,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 409

{"id":28,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1674

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Se'"},{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":7}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Misleading indentation: statement is indented too deeply\n\nsketch_nov24a.ino.cpp:12:3: note: did you mean this line to be inside this 'while'"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"severity":3,"message":"Did you mean this line to be inside this 'while'\n\nsketch_nov24a.ino.cpp:14:3: warning: misleading indentation: statement is indented too deeply"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":29,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
t-Length: 221

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":30}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":14},"contentChanges":[{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":12}},"rangeLength":0,"text":"i"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":29}}Content-Length: 304

{"jsonrpc":"2.0","id":32,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":13},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":15},"contentChanges":[{"range":{"start":{"line":4,"character":13},"end":{"line":4,"character":13}},"rangeLength":0,"text":"a"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":33}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":16},"contentChanges":[{"range":{"start":{"line":4,"character":14},"end":{"line":4,"character":14}},"rangeLength":0,"text":"l"}]}}Content-Length: 221

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":32}}Content-Length: 304

{"jsonrpc":"2.0","id":35,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":15},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 322

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":16}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 221

{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

>>>
Content-Length: 409

{"id":30,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1675

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Ser'"},{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":7}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Misleading indentation: statement is indented too deeply\n\nsketch_nov24a.ino.cpp:12:3: note: did you mean this line to be inside this 'while'"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"severity":3,"message":"Did you mean this line to be inside this 'while'\n\nsketch_nov24a.ino.cpp:14:3: warning: misleading indentation: statement is indented too deeply"}]},"jsonrpc":"2.0"}Content-Length: 409

{"id":31,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1676

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":13}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seri'"},{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":7}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Misleading indentation: statement is indented too deeply\n\nsketch_nov24a.ino.cpp:12:3: note: did you mean this line to be inside this 'while'"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"severity":3,"message":"Did you mean this line to be inside this 'while'\n\nsketch_nov24a.ino.cpp:14:3: warning: misleading indentation: statement is indented too deeply"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":32,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 409

{"id":33,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1677

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'Seria'"},{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":7}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Misleading indentation: statement is indented too deeply\n\nsketch_nov24a.ino.cpp:12:3: note: did you mean this line to be inside this 'while'"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"severity":3,"message":"Did you mean this line to be inside this 'while'\n\nsketch_nov24a.ino.cpp:14:3: warning: misleading indentation: statement is indented too deeply"}]},"jsonrpc":"2.0"}Content-Length: 409

{"id":34,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1493

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'x'"},{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":7}},"severity":2,"code":"readability-misleading-indentation","source":"clang-tidy","message":"Misleading indentation: statement is indented too deeply\n\nsketch_nov24a.ino.cpp:12:3: note: did you mean this line to be inside this 'while'"},{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":7}},"severity":3,"message":"Did you mean this line to be inside this 'while'\n\nsketch_nov24a.ino.cpp:14:3: warning: misleading indentation: statement is indented too deeply"}]},"jsonrpc":"2.0"}Content-Length: 92

{"id":35,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 397

{"id":36,"result":[{"title":"Expand macro 'Serial'","kind":"refactor","command":{"title":"Expand macro 'Serial'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server450800767/sketch/sketch_nov24a.ino.cpp","selection":{"start":{"line":11,"character":15},"end":{"line":11,"character":15}}}]}}],"jsonrpc":"2.0"}Content-Length: 409

{"id":37,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}
<<<

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":35}}Content-Length: 304

{"jsonrpc":"2.0","id":38,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":16},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 322

{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":4,"character":16},"end":{"line":4,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":37}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":17},"contentChanges":[{"range":{"start":{"line":4,"character":16},"end":{"line":4,"character":16}},"rangeLength":0,"text":";"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":39}}Content-Length: 221

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":38}}Content-Length: 304

{"jsonrpc":"2.0","id":41,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":4,"character":17},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 322

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":17}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":18},"contentChanges":[{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":17}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}Content-Length: 221

{"jsonrpc":"2.0","id":43,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":41}}Content-Length: 303

{"jsonrpc":"2.0","id":44,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":5,"character":2},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 322

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":7,"character":16},"end":{"line":7,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:
>>>
Content-Length: 92

{"id":38,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":39,"result":[],"jsonrpc":"2.0"}Content-Length: 409

{"id":40,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 217

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 92

{"id":41,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":42,"result":[],"jsonrpc":"2.0"}Content-Length: 409

{"id":43,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 92

{"id":44,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 37

{"id":45,"result":[],"jsonrpc":"2.0"}
<<<
///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":18}}}Content-Length: 248

{"jsonrpc":"2.0","id":46,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"position":{"line":2,"character":2}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":46}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":44}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":43}}Content-Length: 221

{"jsonrpc":"2.0","id":47,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":47}}Content-Length: 445

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":19},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":2}},"rangeLength":2,"text":""},{"range":{"start":{"line":2,"character":23},"end":{"line":3,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":45}}Content-Length: 221

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 322

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":23},"end":{"line":2,"character":23}},"context":{"diagnostics":[]}}}Content-Length: 219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino","version":19}}}Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}Content-Length: 322

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":49}}Content-Length: 322

{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":23},"end":{"line":2,"character":23}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":50}}
>>>
Content-Length: 219

{"id":46,"result":{"contents":{"kind":"markdown","value":"### macro `Serial`  \n\n---\n```cpp\n#define Serial _UART_USB_\n```"},"range":{"start":{"line":2,"character":2},"end":{"line":2,"character":8}}},"jsonrpc":"2.0"}Content-Length: 409

{"id":47,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":15,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 409

{"id":48,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":49,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":50,"result":[],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 37

{"id":51,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":52,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 322

{"jsonrpc":"2.0","id":53,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 322

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/AppData/Local/Temp/.arduinoIDE-unsaved20211024-9492-t39jjr.9nsh/sketch_nov24a/sketch_nov24a.ino"},"range":{"start":{"line":2,"character":23},"end":{"line":2,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":53,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":54,"result":[],"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3138

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":24288,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\mirko\\Desktop\\esempi impariamo arduino live\\cicli\\continue","rootUri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue","name":"continue"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 438

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino","languageId":"cpp","version":1,"text":"void setup() {\n  \n  Serial.begin(115200);\n  while(!Serial);\n\n  int x = 0;\n  while(x < 9) {\n    x++;\n    if(x == 5) {\n      continue;   \n    }  \n    Serial.println(x);\n  }\n\n}\n\nvoid loop() {\n  \n\n}\n"}}}






Started logging.

<<<
Content-Length: 3138

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11352,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\mirko\\Desktop\\esempi impariamo arduino live\\cicli\\continue","rootUri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue","name":"continue"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 438

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino","languageId":"cpp","version":1,"text":"void setup() {\n  \n  Serial.begin(115200);\n  while(!Serial);\n\n  int x = 0;\n  while(x < 9) {\n    x++;\n    if(x == 5) {\n      continue;   \n    }  \n    Serial.println(x);\n  }\n\n}\n\nvoid loop() {\n  \n\n}\n"}}}






Started logging.

<<<
Content-Length: 3138

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10020,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\mirko\\Desktop\\esempi impariamo arduino live\\cicli\\continue","rootUri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue","name":"continue"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 438

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino","languageId":"cpp","version":1,"text":"void setup() {\n  \n  Serial.begin(115200);\n  while(!Serial);\n\n  int x = 0;\n  while(x < 9) {\n    x++;\n    if(x == 5) {\n      continue;   \n    }  \n    Serial.println(x);\n  }\n\n}\n\nvoid loop() {\n  \n\n}\n"}}}Content-Length: 295

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 295

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 196

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 408

{"id":3,"result":[{"name":"setup","kind":12,"range":{"start":{"line":0,"character":0},"end":{"line":14,"character":1}},"selectionRange":{"start":{"line":0,"character":5},"end":{"line":0,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}Content-Length: 223

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":7}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 223

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":0}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/29","percentage":10.344827586206897,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 250

{"id":4,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}}},"jsonrpc":"2.0"}Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 223

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":2,"character":3}}}
>>>
Content-Length: 218

{"id":6,"result":{"contents":{"kind":"markdown","value":"### macro `Serial`  \n\n---\n```cpp\n#define Serial _UART_USB_\n```"},"range":{"start":{"line":2,"character":2},"end":{"line":2,"character":8}}},"jsonrpc":"2.0"}
<<<
Content-Length: 235

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":2,"character":3}}}
>>>
Content-Length: 294

{"id":7,"result":[{"range":{"start":{"line":2,"character":2},"end":{"line":2,"character":8}},"kind":1},{"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":15}},"kind":1},{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":10}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":2,"character":3},"end":{"line":2,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 388

{"id":8,"result":[{"title":"Expand macro 'Serial'","kind":"refactor","command":{"title":"Expand macro 'Serial'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server552577023/sketch/continue.ino.cpp","selection":{"start":{"line":9,"character":3},"end":{"line":9,"character":21}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":2,"character":3},"end":{"line":2,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 388

{"id":9,"result":[{"title":"Expand macro 'Serial'","kind":"refactor","command":{"title":"Expand macro 'Serial'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server552577023/sketch/continue.ino.cpp","selection":{"start":{"line":9,"character":3},"end":{"line":9,"character":23}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":3,"character":0}}}
>>>
Content-Length: 39

{"id":11,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":3,"character":2}}}
>>>
Content-Length: 39

{"id":12,"result":null,"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/29","percentage":13.793103448275861,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/29","percentage":13.793103448275861,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":3,"character":2}}}
>>>
Content-Length: 121

{"id":13,"result":[{"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":7}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/29","percentage":17.24137931034483,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":14,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/29","percentage":20.689655172413794,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/29","percentage":24.137931034482758,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/29","percentage":24.137931034482758,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":15,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/29","percentage":27.586206896551722,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/29","percentage":27.586206896551722,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":5,"character":2}}}
>>>
Content-Length: 39

{"id":16,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":5,"character":2}}}
>>>
Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/29","percentage":31.03448275862069,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/29","percentage":31.03448275862069,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/29","percentage":34.48275862068966,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/29","percentage":34.48275862068966,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":5,"character":2},"end":{"line":5,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/29","percentage":37.93103448275862,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/29","percentage":37.93103448275862,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":5,"character":12}}}
>>>
Content-Length: 39

{"id":19,"result":null,"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/29","percentage":41.37931034482759,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/29","percentage":41.37931034482759,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":5,"character":12}}}
>>>
Content-Length: 39

{"id":20,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":5,"character":6}}}
>>>
Content-Length: 251

{"id":21,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/29","percentage":44.827586206896555,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/29","percentage":44.827586206896555,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":22,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":5,"character":10}}}
>>>
Content-Length: 39

{"id":22,"result":null,"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/29","percentage":48.275862068965516,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/29","percentage":48.275862068965516,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/29","percentage":51.724137931034484,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/29","percentage":51.724137931034484,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":5,"character":10}}}
>>>
Content-Length: 39

{"id":23,"result":null,"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/29","percentage":55.172413793103445,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/29","percentage":55.172413793103445,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":5,"character":11}}}
>>>
Content-Length: 39

{"id":24,"result":null,"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/29","percentage":58.62068965517241,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/29","percentage":62.06896551724138,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/29","percentage":62.06896551724138,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":25,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/29","percentage":65.51724137931035,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/29","percentage":65.51724137931035,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":4}}}
>>>
Content-Length: 39

{"id":26,"result":null,"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/29","percentage":68.96551724137932,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":3}}}
>>>
Content-Length: 39

{"id":27,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":2}}}
>>>
Content-Length: 39

{"id":28,"result":null,"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/29","percentage":72.41379310344827,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","id":29,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":2}}}
>>>
Content-Length: 207

{"id":29,"result":[{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":7}},"kind":1},{"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":14}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":31,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":32,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":15}}}
>>>
Content-Length: 39

{"id":32,"result":null,"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/29","percentage":75.86206896551724,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/29","percentage":75.86206896551724,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":33,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":8}}}
>>>
Content-Length: 251

{"id":33,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}}},"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":34,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":7}}}
>>>
Content-Length: 39

{"id":34,"result":null,"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/29","percentage":79.3103448275862,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/29","percentage":79.3103448275862,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/29","percentage":82.75862068965517,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/29","percentage":82.75862068965517,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":7}}}
>>>
Content-Length: 39

{"id":35,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":8}}}
>>>
Content-Length: 465

{"id":36,"result":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"kind":1},{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"kind":2},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"kind":3},{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"kind":2},{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 413

{"id":37,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino","selection":{"start":{"line":6,"character":8},"end":{"line":6,"character":13}}}]}}],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/29","percentage":86.20689655172414,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/29","percentage":86.20689655172414,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/29","percentage":89.65517241379311,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/29","percentage":93.10344827586206,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":38,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":13}}}
>>>
Content-Length: 39

{"id":38,"result":null,"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/29","percentage":96.55172413793103,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":39,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":3}}}
>>>
Content-Length: 39

{"id":39,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":40,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":4}}}
>>>
Content-Length: 251

{"id":40,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}}},"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":4}}}
>>>
Content-Length: 465

{"id":41,"result":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":7}},"kind":1},{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"kind":2},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}},"kind":3},{"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}},"kind":2},{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":42,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":43,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":44,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":7}}}
>>>
Content-Length: 39

{"id":44,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":45,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":7}}}
>>>
Content-Length: 39

{"id":45,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":46,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":7}}}
>>>
Content-Length: 39

{"id":46,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":47,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":5}}}
>>>
Content-Length: 39

{"id":47,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":48,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":4}}}
>>>
Content-Length: 39

{"id":48,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":49,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":10}}}
>>>
Content-Length: 39

{"id":49,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":50,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":13}}}
>>>
Content-Length: 39

{"id":50,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":51,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":9}}}
>>>
Content-Length: 39

{"id":51,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":52,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":12}}}
>>>
Content-Length: 39

{"id":52,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":53,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":7}}}
>>>
Content-Length: 39

{"id":53,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":54,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":6}}}
>>>
Content-Length: 39

{"id":54,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":55,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":6}}}
>>>
Content-Length: 39

{"id":55,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":6}}}
>>>
Content-Length: 207

{"id":56,"result":[{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":7}},"kind":1},{"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":14}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 391

{"id":57,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server552577023/sketch/continue.ino.cpp","selection":{"start":{"line":16,"character":6},"end":{"line":16,"character":15}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":11,"character":5}}}
>>>
Content-Length: 222

{"id":58,"result":{"contents":{"kind":"markdown","value":"### macro `Serial`  \n\n---\n```cpp\n#define Serial _UART_USB_\n```"},"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":59,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":11,"character":4}}}
>>>
Content-Length: 222

{"id":59,"result":{"contents":{"kind":"markdown","value":"### macro `Serial`  \n\n---\n```cpp\n#define Serial _UART_USB_\n```"},"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","id":60,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":11,"character":4}}}
>>>
Content-Length: 295

{"id":60,"result":[{"range":{"start":{"line":2,"character":2},"end":{"line":2,"character":8}},"kind":1},{"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":15}},"kind":1},{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":10}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 391

{"id":61,"result":[{"title":"Expand macro 'Serial'","kind":"refactor","command":{"title":"Expand macro 'Serial'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server552577023/sketch/continue.ino.cpp","selection":{"start":{"line":18,"character":4},"end":{"line":18,"character":22}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":62,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":15}}}
>>>
Content-Length: 39

{"id":62,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":63,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":15}}}
>>>
Content-Length: 39

{"id":63,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":64,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":5}}}
>>>
Content-Length: 39

{"id":64,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":65,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":5}}}
>>>
Content-Length: 39

{"id":65,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":66,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":4}}}
>>>
Content-Length: 251

{"id":66,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}}},"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":67,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":3}}}
>>>
Content-Length: 39

{"id":67,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":68,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":4}}}
>>>
Content-Length: 251

{"id":68,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}}},"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":69,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":5}}}
>>>
Content-Length: 39

{"id":69,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":70,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":6}}}
>>>
Content-Length: 39

{"id":70,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":71,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":6}}}
>>>
Content-Length: 39

{"id":71,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":72,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":6}}}
>>>
Content-Length: 39

{"id":72,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":73,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":7}}}
>>>
Content-Length: 39

{"id":73,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":74,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":10}}}
>>>
Content-Length: 39

{"id":74,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":75,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":11}}}
>>>
Content-Length: 39

{"id":75,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":76,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":12}}}
>>>
Content-Length: 39

{"id":76,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":77,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":7}}}
>>>
Content-Length: 39

{"id":77,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":78,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":6}}}
>>>
Content-Length: 39

{"id":78,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 236

{"jsonrpc":"2.0","id":79,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":6}}}
>>>
Content-Length: 207

{"id":79,"result":[{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":7}},"kind":1},{"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":14}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":9,"character":6},"end":{"line":9,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 391

{"id":80,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server552577023/sketch/continue.ino.cpp","selection":{"start":{"line":16,"character":6},"end":{"line":16,"character":14}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":81,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":3}}}
>>>
Content-Length: 39

{"id":81,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":82,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":11,"character":4}}}
>>>
Content-Length: 222

{"id":82,"result":{"contents":{"kind":"markdown","value":"### macro `Serial`  \n\n---\n```cpp\n#define Serial _UART_USB_\n```"},"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 237

{"jsonrpc":"2.0","id":83,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":11,"character":4}}}
>>>
Content-Length: 295

{"id":83,"result":[{"range":{"start":{"line":2,"character":2},"end":{"line":2,"character":8}},"kind":1},{"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":15}},"kind":1},{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":10}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 299

{"jsonrpc":"2.0","id":84,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 391

{"id":84,"result":[{"title":"Expand macro 'Serial'","kind":"refactor","command":{"title":"Expand macro 'Serial'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/mirko/AppData/Local/Temp/arduino-language-server552577023/sketch/continue.ino.cpp","selection":{"start":{"line":18,"character":4},"end":{"line":18,"character":22}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":85,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":15}}}
>>>
Content-Length: 39

{"id":85,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":86,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":15}}}
>>>
Content-Length: 39

{"id":86,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":87,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":5}}}
>>>
Content-Length: 39

{"id":87,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":88,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":4}}}
>>>
Content-Length: 251

{"id":88,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":5}}},"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":89,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":6}}}
>>>
Content-Length: 39

{"id":89,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":90,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":6}}}
>>>
Content-Length: 39

{"id":90,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":91,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":7,"character":7}}}
>>>
Content-Length: 39

{"id":91,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":92,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":9}}}
>>>
Content-Length: 39

{"id":92,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":93,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":10}}}
>>>
Content-Length: 39

{"id":93,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":94,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":12}}}
>>>
Content-Length: 39

{"id":94,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":95,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":6,"character":12}}}
>>>
Content-Length: 39

{"id":95,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","id":96,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"range":{"start":{"line":12,"character":3},"end":{"line":12,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":96,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":97,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":11,"character":9}}}
>>>
Content-Length: 222

{"id":97,"result":{"contents":{"kind":"markdown","value":"### macro `Serial`  \n\n---\n```cpp\n#define Serial _UART_USB_\n```"},"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":98,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":11,"character":10}}}
>>>
Content-Length: 222

{"id":98,"result":{"contents":{"kind":"markdown","value":"### macro `Serial`  \n\n---\n```cpp\n#define Serial _UART_USB_\n```"},"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":99,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":12}}}
>>>
Content-Length: 39

{"id":99,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":100,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":10}}}
>>>
Content-Length: 40

{"id":100,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":101,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":12}}}
>>>
Content-Length: 40

{"id":101,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":102,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":17}}}
>>>
Content-Length: 40

{"id":102,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":103,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":12}}}
>>>
Content-Length: 40

{"id":103,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":104,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":11}}}
>>>
Content-Length: 40

{"id":104,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":105,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":15}}}
>>>
Content-Length: 40

{"id":105,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":106,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":15}}}
>>>
Content-Length: 40

{"id":106,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":107,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":3}}}
>>>
Content-Length: 40

{"id":107,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":108,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":5}}}
>>>
Content-Length: 40

{"id":108,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":109,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":8}}}
>>>
Content-Length: 252

{"id":109,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}}},"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":110,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":9}}}
>>>
Content-Length: 40

{"id":110,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":111,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":8}}}
>>>
Content-Length: 252

{"id":111,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":8,"character":7},"end":{"line":8,"character":8}}},"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":112,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":9}}}
>>>
Content-Length: 40

{"id":112,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":113,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":10}}}
>>>
Content-Length: 40

{"id":113,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":114,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":11}}}
>>>
Content-Length: 40

{"id":114,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":115,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":8,"character":11}}}
>>>
Content-Length: 40

{"id":115,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 226

{"jsonrpc":"2.0","id":116,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":11,"character":6}}}
>>>
Content-Length: 223

{"id":116,"result":{"contents":{"kind":"markdown","value":"### macro `Serial`  \n\n---\n```cpp\n#define Serial _UART_USB_\n```"},"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":117,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":7}}}
>>>
Content-Length: 40

{"id":117,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":118,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":6}}}
>>>
Content-Length: 40

{"id":118,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":119,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":9,"character":5}}}
>>>
Content-Length: 40

{"id":119,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 227

{"jsonrpc":"2.0","id":120,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":11,"character":19}}}
>>>
Content-Length: 266

{"id":120,"result":{"contents":{"kind":"markdown","value":"### variable `x`  \n\n---\nType: `int`  \nValue = `0`  \nPassed  \n\n---\n```cpp\n// In setup\nint x = 0\n```"},"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":120}}Content-Length: 227

{"jsonrpc":"2.0","id":121,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/mirko/Desktop/esempi%20impariamo%20arduino%20live/cicli/continue/continue.ino"},"position":{"line":11,"character":21}}}
>>>
Content-Length: 321

{"id":121,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `int`\n- `int = 10`\n\n---\n```cpp\n// In Print\npublic: size_t println(int, int = 10)\n```"},"range":{"start":{"line":11,"character":21},"end":{"line":11,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 60

{"jsonrpc":"2.0","id":122,"method":"shutdown","params":null}
>>>
Content-Length: 40

{"id":122,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}